{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/register.js","actions/invoice.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/InvoiceList/index.js","components/modal/PopUp/Salaries/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/pages/registered/admin/lists/WithdrawalXMonthList/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","teacherHours","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","estimatedProfit","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","penalty","salaries","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","month","Date","getMonth","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","observations","combineReducers","alert","state","action","type","payload","filter","id","map","item","oldId","auth","SingleClass","_id","category","students","student","expences","loadingTransactions","gradeType","value","studentsD","some","number","status","Math","round","Number","EPSILON","detail","payment","discount","details","global","nav","toggle","neighbourhood","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","exists","find","clearTimeout","timer","setTimeout","createBackup","local","async","updateLoadingSpinner","res","api","post","blob","get","responseType","saveAs","Blob","data","format","togglePopup","window","scrollTo","err","response","setError","bool","toggleMenu","updateCurrentNav","userType","errors","statusText","formatNumber","Intl","NumberFormat","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","attendancesPDF","header","pdf","pdfBlob","teacher","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","clearGrades","clearGradeTypes","loadClass","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","loadInvoices","invoicesPDF","date","clearInvoice","clearInvoices","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","current","findIndex","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","files","InvoiceList","total","Salaries","lowerSalary","higherSalary","adminSalary","classManagerSalary","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","setSalaries","penaltyPercentage","setPenaltyPercentage","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","isNaN","onChangeBackup","onChangeSalary","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","dash","toDelete","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","clearGlobals","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","studentId","public_id","studentnumber","guardian","secretary","admin","classManager","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","cbvu","alias","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","console","log","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","includes","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadWithdrawals","loadExpenceTypes","expenceType","transactionsPDF","clearExpenceTypes","clearTransactions","closeRegister","createRegister","deleteRegister","register_id","difference","withdrawal","registermoney","colSpan","registerExpence","updateSalaries","getTeacherHours","teacher_id","expencetype","highHours","lowHours","isTeacher","options","selectedIndex","getAttribute","onChangeAdmin","newTeacher","allSalaries","expty","loadSalaries","loadingSalaries","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","setfilterForm","addDiscount","reduce","curr","assign","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","sum","onChangeValue","newDetails","accum","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","c","EditButtons","save","updateTowns","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","isNotAdmin","transaction","getEstimatedProfit","installmentsPDF","installmentName","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","expT","index1","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","WithdrawalXMonthList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97e4456c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REPLACED = \"ALERT_REPLACED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const GLOBAL_CLEARED = \"GLOBAL_CLEARED\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const SALARIES_LOADED = \"SALARIES_LOADED\";\r\nexport const PENALTY_UPDATED = \"PENALTY_UPDATED\";\r\nexport const SALARIES_UPDATED = \"SALARIES_UPDATED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const TEACHERHOURS_LOADED = \"TEACHERHOURS_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED, ALERT_REPLACED } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ALERT_SETTED:\r\n         return [...state, payload];\r\n      case ALERT_REMOVED:\r\n         return state.filter((alert) => alert.id !== payload);\r\n      case ALERT_REPLACED:\r\n         return state.map((item) =>\r\n            item.id === payload.oldId ? payload : item\r\n         );\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n   TEACHERHOURS_LOADED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n      teacherHours: {},\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case TEACHERHOURS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               teacherHours: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n               teacherHours: {},\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n               teacherHours: {},\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_CLEARED,\r\n   PENALTY_LOADED,\r\n   SALARIES_LOADED,\r\n   PENALTY_UPDATED,\r\n   SALARIES_UPDATED,\r\n   GLOBAL_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: \"\",\r\n   salaries: {},\r\n   loading: true,\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n            error: {},\r\n         };\r\n      case SALARIES_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            salaries: payload,\r\n            error: {},\r\n         };\r\n      case PENALTY_UPDATED:\r\n         return {\r\n            ...state,\r\n            penalty: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case SALARIES_UPDATED:\r\n         return {\r\n            ...state,\r\n            salaries: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      case GLOBAL_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            penalty: \"\",\r\n            salaries: {},\r\n            error: {},\r\n         };\r\n      case GLOBAL_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst month = new Date().getMonth() + 1;\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2 &&\r\n               payload.status !== \"expired\" &&\r\n               payload.number > month\r\n                  ? payload.value - (payload.value * 10) / 100\r\n                  : payload.status === \"expired\"\r\n                  ? Math.round(\r\n                       (payload.value * 0.90909 + Number.EPSILON) * 100\r\n                    ) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  const value =\r\n                     item.number > 2 &&\r\n                     item.status !== \"expired\" &&\r\n                     item.number > month\r\n                        ? item.value - (item.value * 10) / 100\r\n                        : item.status === \"expired\"\r\n                        ? Math.round(\r\n                             (item.value * 0.90909 + Number.EPSILON) * 100\r\n                          ) / 100\r\n                        : item.value;\r\n\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport store from \"../utils/store\";\r\n\r\nimport { ALERT_REMOVED, ALERT_REPLACED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n\r\n      const exists = store.getState().alert.find((item) => item.msg === msg);\r\n\r\n      if (exists) clearTimeout(exists.timer);\r\n\r\n      const timer = setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         5000\r\n      );\r\n\r\n      dispatch({\r\n         type: exists ? ALERT_REPLACED : ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n            ...(exists && { oldId: exists.id }),\r\n            timer,\r\n         },\r\n      });\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n   PENALTY_LOADED,\r\n   PENALTY_UPDATED,\r\n   GLOBAL_CLEARED,\r\n   SALARIES_LOADED,\r\n   SALARIES_UPDATED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/global/penalty\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadSalaries = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/global/salaries\");\r\n      dispatch({\r\n         type: SALARIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = (local) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\", { local });\r\n\r\n      const blob = await api.get(`/backup/fetch${local ? \"?local=true\" : \"\"}`, {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      if (local) dispatch(togglePopup(\"default\"));\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/global/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateSalaries = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   const salaries = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/global/salaries\", salaries);\r\n\r\n      dispatch({\r\n         type: SALARIES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Salarios Modificados\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n   }\r\n\r\n   window.scrollTo(0, 0);\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const clearGlobals = () => (dispatch) => {\r\n   dispatch({\r\n      type: GLOBAL_CLEARED,\r\n   });\r\n};\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || !info.students.some((item) => item.checked)) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  } ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n   TEACHERHOURS_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getTeacherHours = (teacher_id) => async (dispatch) => {\r\n   try {\r\n      dispatch(updateLoadingSpinner(true));\r\n\r\n      const res = await api.get(\"/class/teacher/\" + teacher_id);\r\n\r\n      dispatch({\r\n         type: TEACHERHOURS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.category} de ${info.teacher}`;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass, clearClasses } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\nimport { clearInvoices } from \"./invoice\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearClasses());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   dispatch(clearInvoices());\r\n\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\r\n         `/installment/profit/${new Date().getMonth() + 1}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   const name = (type, sex) => {\r\n      switch (type) {\r\n         case \"admin&teacher\":\r\n            return `Director${sex === \"Femenino\" ? \"a\" : \"\"} y Profesor${\r\n               sex === \"Femenino\" ? \"a\" : \"\"\r\n            }`;\r\n         case \"teacher\":\r\n            return `Profesor${sex === \"Femenino\" ? \"a\" : \"\"}`;\r\n         case \"secretary\":\r\n            return `Secretari${sex === \"Femenino\" ? \"a\" : \"o\"}`;\r\n         case \"classManager\":\r\n            return `Coordinador${sex === \"Femenino\" ? \"a\" : \"\"} Pedagógic${\r\n               sex === \"Femenino\" ? \"a\" : \"o\"\r\n            }`;\r\n\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {name(users[teamNumber].type, users[teamNumber].sex)}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let current = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            if (path[3] === \"0\")\r\n               current = userLogged.type === \"student\" ? \"class-0\" : \"index\";\r\n            else\r\n               switch (userLogged.type) {\r\n                  case \"guardian\":\r\n                     current =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                     break;\r\n                  case \"student\":\r\n                     if (enrollments.length > 0) {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        current = \"class-\" + index;\r\n                     } else current = \"index\";\r\n                     break;\r\n                  default:\r\n                     current = \"user\";\r\n                     break;\r\n               }\r\n         }\r\n         if (current !== currentNav) updateCurrentNav(current, false);\r\n      }\r\n   }, [\r\n      userLogged,\r\n      updateCurrentNav,\r\n      currentNav,\r\n      location.pathname,\r\n      enrollments,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n         case \"classManager\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.number}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            <div className=\"wrapper both\">\n               {students.map((student, i) => (\n                  <div className=\"student\" key={i}>\n                     <p className=\"name\">{student.name}</p>\n                     <input\n                        className=\"form-checkbox\"\n                        type=\"checkbox\"\n                        checked={student.checked}\n                        onChange={(e) => onChange(e, i)}\n                        name=\"student\"\n                        id={`cb${period}-${i}`}\n                     />\n                     <label\n                        className=\"checkbox-lbl\"\n                        id=\"check\"\n                        htmlFor={`cb${period}-${i}`}\n                     >\n                        {student.checked ? \"Si\" : \"No\"}\n                     </label>\n                  </div>\n               ))}\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaCloudDownloadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert, createBackup }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"popup-restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark\">\n            Seleccione el backup que desea restaurar o descargue el actual\n         </h5>\n         <div className=\"form\">\n            <p className=\"text-lighter-primary restore-file\">\n               {selectedFile !== \"\" && (\n                  <>\n                     {selectedFile.name}\n                     <button\n                        type=\"button\"\n                        onClick={() =>\n                           setAdminValues((prev) => ({\n                              ...prev,\n                              selectedFile: \"\",\n                              fileIn: false,\n                           }))\n                        }\n                        className=\"btn-cancel\"\n                     >\n                        <FaTimes />\n                     </button>\n                  </>\n               )}\n            </p>\n            <div className=\"upl-img\">\n               <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n                  <input\n                     id=\"fileInput\"\n                     type=\"file\"\n                     name=\"image\"\n                     onChange={fileSelected}\n                     className=\"upload\"\n                  />\n                  <span>\n                     <FaCloudUploadAlt />\n                     &nbsp;Subir\n                  </span>\n               </div>\n               <button\n                  type=\"button\"\n                  onClick={() => createBackup(true)}\n                  className=\"btn btn-secondary restore-btn\"\n               >\n                  <FaCloudDownloadAlt />\n                  &nbsp;Descargar\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React from \"react\";\nimport format from \"date-fns/format\";\nimport { Link } from \"react-router-dom\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport { formatNumber } from \"../../../../actions/global\";\n\nconst InvoiceList = ({ invoices, clearInvoice, togglePopup }) => {\n   return (\n      <div className=\"popup-invoices\">\n         <h3 className=\"heading-tertiary text-left p-1 my-1\">\n            Listado de Facturas Pagas\n         </h3>\n         <div className=\"wrapper both\">\n            <table>\n               <tbody>\n                  {invoices.length > 0 ? (\n                     invoices.map((invoice, i) => (\n                        <React.Fragment key={i}>\n                           {\n                              <tr>\n                                 <td>\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\n                                 </td>\n                                 <td>${formatNumber(invoice.total)}</td>\n                                 <td>\n                                    <Link\n                                       to={`/invoice/single/${invoice._id}`}\n                                       onClick={() => {\n                                          window.scroll(0, 0);\n                                          clearInvoice();\n                                          togglePopup(\"default\");\n                                       }}\n                                       className=\"btn-text\"\n                                    >\n                                       <FaSearch />\n                                    </Link>\n                                 </td>\n                              </tr>\n                           }\n                        </React.Fragment>\n                     ))\n                  ) : (\n                     <p className=\"heading-tertiary text-center\">\n                        No hay facturas registradas\n                     </p>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </div>\n   );\n};\n\nexport default InvoiceList;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Salaries = ({ onChange, salaries }) => {\n   return (\n      <>\n         <h4 className=\"heading-tertiary text-left text-dark p-2\">\n            Actualización de Salarios\n         </h4>\n         <div className=\"form\">\n            <table className=\"salaries\">\n               <tbody>\n                  <tr>\n                     <td>Cursos Bajos:</td>\n                     <td>\n                        <input\n                           id=\"lowerSalary\"\n                           type=\"text\"\n                           name=\"lowerSalary\"\n                           placeholder=\"Cursos Bajos\"\n                           value={salaries.lowerSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Cursos Altos:</td>\n                     <td>\n                        <input\n                           id=\"higherSalary\"\n                           type=\"text\"\n                           name=\"higherSalary\"\n                           placeholder=\"Cursos Altos\"\n                           value={salaries.higherSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Administrativo:</td>\n                     <td>\n                        <input\n                           id=\"adminSalary\"\n                           type=\"text\"\n                           name=\"adminSalary\"\n                           placeholder=\"Administrativo\"\n                           value={salaries.adminSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Coordinador/a:</td>\n                     <td>\n                        <input\n                           id=\"classManagerSalary\"\n                           type=\"text\"\n                           name=\"classManagerSalary\"\n                           placeholder=\"Coordinador/a\"\n                           value={salaries.classManagerSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n               </tbody>\n            </table>\n         </div>\n      </>\n   );\n};\n\nexport default Salaries;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup, createBackup } from \"../../../actions/global\";\r\nimport { clearInvoice } from \"../../../actions/invoice\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\nimport RestoreDB from \"./RestoreDB\";\r\nimport InvoiceList from \"./InvoiceList\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\nimport Salaries from \"./Salaries\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   createBackup,\r\n   clearInvoice,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [salaries, setSalaries] = useState({\r\n      lowerSalary: \"\",\r\n      higherSalary: \"\",\r\n      adminSalary: \"\",\r\n      classManagerSalary: \"\",\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info) {\r\n         if (info.students)\r\n            setCertificate((prev) => ({\r\n               ...prev,\r\n               students: info.students.map((item) => {\r\n                  return {\r\n                     ...item,\r\n                     name: item.lastname + \", \" + item.name,\r\n                     checked: false,\r\n                  };\r\n               }),\r\n            }));\r\n         if (info.salaries) {\r\n            setSalaries((prev) => {\r\n               for (const x in info.salaries) prev[x] = info.salaries[x];\r\n               return prev;\r\n            });\r\n         }\r\n      }\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      if (!isNaN(e.target.value)) setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const onChangeSalary = (e) => {\r\n      e.persist();\r\n      if (!isNaN(e.target.value))\r\n         setSalaries((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return (\r\n               <RestoreDB\r\n                  onChange={onChangeBackup}\r\n                  createBackup={createBackup}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         case \"invoices\":\r\n            return (\r\n               <InvoiceList\r\n                  invoices={info}\r\n                  clearInvoice={clearInvoice}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            );\r\n         case \"salary\":\r\n            return <Salaries onChange={onChangeSalary} salaries={salaries} />;\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               {chooseType(popupType)}\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               {popupType !== \"invoices\" && (\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-success\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        switch (popupType) {\r\n                           case \"penalty\":\r\n                              confirm(penaltyPercentage);\r\n                              break;\r\n                           case \"certificate\":\r\n                              confirm(certificate);\r\n                              break;\r\n                           case \"new-date\":\r\n                              confirm(newDate);\r\n                              break;\r\n                           case \"new-grade\":\r\n                              confirm(newGradeType);\r\n                              break;\r\n                           case \"backup\":\r\n                              confirm(backup);\r\n                              break;\r\n                           case \"salary\":\r\n                              confirm(salaries);\r\n                              break;\r\n                           default:\r\n                              confirm();\r\n                              break;\r\n                        }\r\n                        if (!error) togglePopup(\"default\");\r\n                     }}\r\n                  >\r\n                     Aceptar\r\n                  </button>\r\n               )}\r\n\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   togglePopup,\r\n   setAlert,\r\n   createBackup,\r\n   clearInvoice,\r\n})(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n   dash,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"Examen Libre\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && !dash && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.status === \"expired\" &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"classManager\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && !(!classInfo && !user.active) && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               {userLogged.type !== \"classManager\" && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary m-0 text-primary p-1\">\r\n                        Cuotas Pendientes{\" \"}\r\n                     </h3>\r\n                     <button\r\n                        className=\"btn-text liner\"\r\n                        onClick={() => togglePopup(\"invoices\")}\r\n                     >\r\n                        Facturas Pagas\r\n                     </button>\r\n                     <div className=\"pb-2\">\r\n                        {!loadingInstallments && installments.length > 0 ? (\r\n                           <InstallmentsTable\r\n                              installments={installments}\r\n                              forAdmin={false}\r\n                              dash\r\n                           />\r\n                        ) : (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              Al día\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n   clearGlobals,\r\n} from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGlobals,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && isAdmin) getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && isAdmin && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   clearGlobals,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadClasses(\r\n            { ...(user.type === \"teacher\" && { teacher: user._id }) },\r\n            false\r\n         );\r\n   }, [user._id, loadClasses, loading, user]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={user.type !== \"teacher\"}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\nimport { loadInvoices } from \"../../../../actions/invoice\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   invoices: { invoices, loading },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   loadInvoices,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n      classManager: \"Coordinador\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   useEffect(() => {\r\n      if (user && user.type === \"student\" && loading)\r\n         loadInvoices({ studentId: user._id }, false);\r\n   }, [user, loading, loadInvoices]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return (\r\n               <>\r\n                  {(isAdmin || !_id) && user.active && (\r\n                     <TeacherDashboard user={user} />\r\n                  )}\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup(false);\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupRealType === \"invoices\"\r\n                        ? invoices\r\n                        : popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n\r\n                           {isAdmin && whenNull(user.cbvu) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">CBU/CVU: </span>\r\n                                 {user.cbvu}\r\n                              </p>\r\n                           )}\r\n\r\n                           {isAdmin && whenNull(user.alias) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Alias: </span>\r\n                                 {user.alias}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   loadInvoices,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : user.dob &&\r\n                                format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" &&\r\n                              userLogged.type !== \"classManager\" && (\r\n                                 <>\r\n                                    <div className=\"tooltip\">\r\n                                       <Link\r\n                                          to={\r\n                                             classInfo.year === year\r\n                                                ? `/class/edit/${classInfo._id}`\r\n                                                : \"#\"\r\n                                          }\r\n                                          className={`btn ${\r\n                                             classInfo.year === year\r\n                                                ? \"btn-mix-secondary\"\r\n                                                : \"btn-black\"\r\n                                          }`}\r\n                                          onClick={() => {\r\n                                             if (classInfo.year === year) {\r\n                                                window.scroll(0, 0);\r\n                                                clearSearch();\r\n                                             }\r\n                                          }}\r\n                                       >\r\n                                          <FaEdit />\r\n                                       </Link>\r\n                                       <span className=\"tooltiptext\">\r\n                                          Editar\r\n                                       </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"tooltip\">\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          className=\"btn btn-danger\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             togglePopup(\"default\");\r\n                                          }}\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                       <span className=\"tooltiptext\">\r\n                                          Eliminar\r\n                                       </span>\r\n                                    </div>\r\n                                 </>\r\n                              )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances.length > 0 &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 <input\r\n                                    type=\"checkbox\"\r\n                                    checked={!row.inassistance}\r\n                                    className=\"option-input\"\r\n                                    name={row.name}\r\n                                    onChange={(e) => onChange(e, i, key)}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n               <tbody>\r\n                  <tr className=\"sticky\">\r\n                     <td></td>\r\n                     {newAttendances.length > 0 &&\r\n                        newAttendances[0].map((item, i) => (\r\n                           <td key={i}>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-danger\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       popupType: \"delete\",\r\n                                       toDelete: item.date,\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                              >\r\n                                 <FaTimes />\r\n                              </button>\r\n                           </td>\r\n                        ))}\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades.length > 0 &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 <input\r\n                                    type=\"text\"\r\n                                    name={row.name}\r\n                                    onChange={(e) => onChange(e, i, key)}\r\n                                    value={row.value}\r\n                                    disabled={year !== classInfo.year}\r\n                                    placeholder=\"Nota\"\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n               <tbody>\r\n                  <tr className=\"sticky\">\r\n                     <td></td>\r\n                     {newGrades.length > 0 &&\r\n                        newGrades[0].map((item, i) => (\r\n                           <td key={i}>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-danger\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues((prev) => ({\r\n                                       ...prev,\r\n                                       popupType: \"delete\",\r\n                                       toDelete: item.gradetype._id,\r\n                                    }));\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                              >\r\n                                 <FaTimes />\r\n                              </button>\r\n                           </td>\r\n                        ))}\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({\r\n   type,\r\n   userType,\r\n   degree,\r\n   school,\r\n   cbvu,\r\n   alias,\r\n   onChange,\r\n}) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     onChange={onChange}\r\n                     value={cbvu}\r\n                     name=\"cbvu\"\r\n                     id=\"cbvu\"\r\n                     placeholder=\"CBU/CVU\"\r\n                  />\r\n                  <label htmlFor=\"cbvu\" className=\"form-label\">\r\n                     CBU/CVU\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"alias\"\r\n                     id=\"alias\"\r\n                     disabled={!isAdmin}\r\n                     value={alias}\r\n                     onChange={onChange}\r\n                     placeholder=\"Alias\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Alias\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      cbvu: \"\",\r\n      alias: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      cbvu,\r\n      alias,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               for (const x in prev)\r\n                  prev[x] =\r\n                     user[x] === undefined || user[x] === null\r\n                        ? prev[x]\r\n                        : x === \"dob\"\r\n                        ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                        : x === \"town\" || x === \"neighbourhood\"\r\n                        ? user[x]._id\r\n                        : user[x];\r\n               return prev;\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (\r\n            ![\"cbvu\", \"dni\"].includes(e.target.name) ||\r\n            !isNaN(e.target.value)\r\n         ) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n         case \"classManager\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     school={school}\r\n                     cbvu={cbvu}\r\n                     alias={alias}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"admin&teacher\":\r\n            return (\r\n               <EmployeeInfo\r\n                  type={type}\r\n                  userType={userLogged.type}\r\n                  cbvu={cbvu}\r\n                  alias={alias}\r\n                  onChange={onChange}\r\n               />\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           <option value=\"classManager\">Coordinador</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n      classManager: \"Coordinador\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/expence/withdrawal/bymonth?${filterData(formData)}`\r\n               : `/expence/withdrawal?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: TRANSACTIONS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scroll(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Egreso/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Egreso Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF =\r\n   (transactions, type, total) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (type === \"withdrawal\")\r\n            await api.post(\r\n               `/pdf/expence/withdrawal-${total ? \"list\" : \"yearly\"}`,\r\n               {\r\n                  transactions,\r\n                  total,\r\n               }\r\n            );\r\n         else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n         const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n   deleteRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   auth: { userLogged },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   deleteRegister,\r\n   togglePopup,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const { popupType } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"close\") {\r\n                  if (!register) createRegister({ difference, description });\r\n                  else closeRegister(formData);\r\n               } else {\r\n                  deleteRegister(register._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"close\" ? \"cerrar\" : \"reabrir\"\r\n            } la caja?`}\r\n         />\r\n         <form className=\"form\">\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  {isAdmin && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Retiro de Dinero</td>\r\n                           <td>\r\n                              $\r\n                              {register &&\r\n                              register.temporary &&\r\n                              register.withdrawal\r\n                                 ? formatNumber(register.withdrawal)\r\n                                 : 0}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/withdrawal/list\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearTransactions();\r\n                                    clearExpenceTypes();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Plata Caja</td>\r\n                           <td>\r\n                              $\r\n                              {register && formatNumber(register.registermoney)}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/list\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearRegisters();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center\">\r\n               {register && !register.temporary ? (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"reopen\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     className=\"btn btn-secondary\"\r\n                  >\r\n                     <FaTimes />\r\n                     <span className=\"hide-sm\">&nbsp; Reabrir Caja</span>\r\n                  </button>\r\n               ) : (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"close\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     disabled={!register && difference === \"\"}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <FiSave />\r\n                     <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n                  </button>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   deleteRegister,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n   updateSalaries,\r\n} from \"../../../../../../../actions/global\";\r\nimport { getTeacherHours } from \"../../../../../../../actions/class\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   global: { salaries },\r\n   classes: {\r\n      otherValues: { teacherHours },\r\n   },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   updateSalaries,\r\n   getTeacherHours,\r\n   togglePopup,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      highHours: \"\",\r\n      lowHours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n      isTeacher: \"\",\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { highHours, lowHours, teacher, type, popupType, isTeacher } =\r\n      adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         highHours: \"\",\r\n         lowHours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   useEffect(() => {\r\n      if (teacher._id && isTeacher) getTeacherHours(teacher._id);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            highHours: \"\",\r\n            lowHours: \"\",\r\n         }));\r\n         setFormData((prev) => ({ ...prev, value: \"\" }));\r\n      }\r\n   }, [teacher, getTeacherHours, isTeacher]);\r\n\r\n   useEffect(() => {\r\n      if (teacherHours.lowHours !== undefined) {\r\n         setAdminValues((prev) => {\r\n            for (const x in teacherHours) prev[x] = teacherHours[x];\r\n            return prev;\r\n         });\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            value:\r\n               teacherHours.lowHours * salaries.lowerSalary +\r\n               teacherHours.highHours * salaries.higherSalary,\r\n         }));\r\n      }\r\n   }, [teacherHours, salaries]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      let newTeacher = users.find((user) => user._id === e.target.value);\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name !== \"teacher\"\r\n               ? e.target.value\r\n               : e.target.value !== \"\"\r\n               ? newTeacher\r\n               : {},\r\n         ...(newTeacher && {\r\n            isTeacher:\r\n               newTeacher.type !== \"secretary\" &&\r\n               newTeacher.type !== \"classManager\",\r\n         }),\r\n      }));\r\n\r\n      if (e.target.name === \"highHours\" || e.target.name === \"lowHours\") {\r\n         let value = 0;\r\n         switch (teacher.type) {\r\n            case \"secretary\":\r\n               value = e.target.value * salaries.adminSalary;\r\n               break;\r\n            case \"classManager\":\r\n               value = e.target.value * salaries.classManagerSalary;\r\n               break;\r\n            case \"highHours\":\r\n               value =\r\n                  e.target.value * salaries.higherSalary +\r\n                  (lowHours !== \"\" ? lowHours * salaries.lowerSalary : 0);\r\n               break;\r\n            case \"lowHours\":\r\n               value =\r\n                  e.target.value * salaries.lowerSalary +\r\n                  (highHours !== \"\" ? highHours * salaries.higherSalary : 0);\r\n               break;\r\n            default:\r\n               break;\r\n         }\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            value,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            teacher,\r\n            description,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={\r\n               popupType === \"save\"\r\n                  ? confirm\r\n                  : (allSalaries) => updateSalaries(allSalaries)\r\n            }\r\n            info={\r\n               popupType === \"save\"\r\n                  ? \"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n                  : { salaries }\r\n            }\r\n            error={popupType === \"salary\"}\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n\r\n         {isAdmin && employeePaymentID === expencetype && (\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  onClick={() => {\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        popupType: \"salary\",\r\n                     }));\r\n                     togglePopup(\"salary\");\r\n                  }}\r\n                  className=\"btn btn-mix-secondary\"\r\n                  type=\"button\"\r\n               >\r\n                  <FaEdit /> &nbsp; Salarios\r\n               </button>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n\r\n               if (register) {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  {(isAdmin ||\r\n                     (register && register.registermoney <= 50000)) && (\r\n                     <tr>\r\n                        <td>Dinero en Caja</td>\r\n                        <td>\r\n                           $\r\n                           {register ? formatNumber(register.registermoney) : 0}\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n\r\n                  <tr>\r\n                     <td>Tipo de {isAdmin ? \"Movimiento\" : \"Egreso\"}</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de {isAdmin ? \"Movimiento\" : \"Egreso\"}\r\n                           </option>\r\n                           {expencetypes.map(\r\n                              (expty) =>\r\n                                 ((!isAdmin && expty.type === \"expence\") ||\r\n                                    isAdmin) && (\r\n                                    <option\r\n                                       key={expty._id}\r\n                                       name={expty.type}\r\n                                       value={expty._id}\r\n                                    >\r\n                                       {expty.name}\r\n                                    </option>\r\n                                 )\r\n                           )}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id ? teacher._id : \"\"}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value=\"\">* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       <option value={user._id}>\r\n                                          {user.lastname}, {user.name}\r\n                                       </option>\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>\r\n                              Horas\r\n                              {isTeacher ? \" Cursos Bajos\" : \"\"}\r\n                           </td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder={`Horas${\r\n                                    isTeacher ? \" Cursos Bajos\" : \"\"\r\n                                 }`}\r\n                                 value={lowHours}\r\n                                 name=\"lowHours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                        {isTeacher && (\r\n                           <tr>\r\n                              <td>Horas Cursos Altos</td>\r\n                              <td>\r\n                                 <input\r\n                                    type=\"number\"\r\n                                    onChange={onChangeAdmin}\r\n                                    placeholder=\"Horas Cursos Altos\"\r\n                                    value={highHours}\r\n                                    name=\"highHours\"\r\n                                 />\r\n                              </td>\r\n                           </tr>\r\n                        )}\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n   classes: state.classes,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n   updateSalaries,\r\n   getTeacherHours,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\nimport { loadSalaries } from \"../../../../../actions/global\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   global: { loading: loadingSalaries },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n   loadSalaries,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingSalaries) loadSalaries();\r\n   }, [loadingSalaries, loadSalaries]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && !loadingSalaries && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n   loadSalaries,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(new Date(), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            (format(new Date(classInfo.hourin1), \"HH:mm\") !==\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") ||\r\n               format(new Date(classInfo.hourout1), \"HH:mm\") !==\r\n                  format(new Date(classInfo.hourout2), \"HH:mm\"))\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: false }));\r\n\r\n         setFormData((prev) => {\r\n            let newClass = prev;\r\n\r\n            for (const x in classInfo) {\r\n               newClass[x] =\r\n                  classInfo[x] === null || classInfo[x] === undefined\r\n                     ? newClass[x]\r\n                     : x.substring(0, 4) === \"hour\"\r\n                     ? format(\r\n                          new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                          \"HH:mm\"\r\n                       )\r\n                     : x === \"teacher\"\r\n                     ? classInfo[x]._id\r\n                     : classInfo[x];\r\n            }\r\n            return newClass;\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/global\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   global: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(number) => updatePenalty({ number })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   global: state.global,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      status: \"\",\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, status, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  for (const x in prev)\r\n                     prev[x] =\r\n                        installment[x] === undefined || installment[x] === null\r\n                           ? prev[x]\r\n                           : installment[x];\r\n                  return prev;\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (\r\n         student &&\r\n         year !== \"\" &&\r\n         (loading || (enrollments[0] && enrollments[0].year !== year))\r\n      )\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n   }, [loadEnrollments, year, loading, student, enrollments]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...(number === 1 ||\r\n                        (number === 2 && {\r\n                           status: \"expired\",\r\n                           updatable: false,\r\n                        })),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <select\r\n                        className=\"form-input\"\r\n                        value={status}\r\n                        name=\"status\"\r\n                        id=\"status\"\r\n                        onChange={onChange}\r\n                     >\r\n                        <option value=\"\">* Estado de la cuota</option>\r\n                        <option value=\"valid\">Válida</option>\r\n                        <option value=\"debt\">Deuda</option>\r\n                        <option value=\"expired\">Vencida</option>\r\n                     </select>\r\n                     <label\r\n                        htmlFor=\"status\"\r\n                        className={`form-label ${status === \"\" ? \"lbl\" : \"\"}`}\r\n                     >\r\n                        Estado de la cuota\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \", \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" &&\r\n               userLogged.type !== \"classManager\" && (\r\n                  <Link\r\n                     to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                     onClick={() => {\r\n                        if (users.length !== 0) {\r\n                           window.scroll(0, 0);\r\n                           clearClass();\r\n                           clearSearch();\r\n                        }\r\n                     }}\r\n                     className={`btn ${\r\n                        users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                     }`}\r\n                  >\r\n                     <FaPlus />\r\n                     &nbsp;Nueva Clase\r\n                  </Link>\r\n               )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const month = new Date().getMonth() + 1;\n\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].filter(\n                  (item) => item.status !== \"expired\" && item.number > month\n               ).length > 2\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup, month]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Part,Libre,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() =>\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: installmentTotal - total,\r\n                  details: details.map((item) => {\r\n                     return {\r\n                        ...item,\r\n                        payment:\r\n                           typeof item.payment === \"number\"\r\n                              ? item.payment\r\n                              : Number(item.payment.replace(/,/g, \".\")),\r\n                     };\r\n                  }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          disabled={\r\n                                             install.discount !== undefined\r\n                                          }\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Egreso</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Egreso\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               max={endDate !== \"\" ? endDate : \"\"}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               min={startDate !== \"\" ? startDate : \"\"}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   auth: { userLogged },\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: invoices.reduce((sum, invoice) => sum + invoice.total, 0),\r\n         }));\r\n      }\r\n   }, [loading, loadInvoices, invoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         {userLogged.type !== \"secretary\" && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   auth: { userLogged },\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Egreso\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadTransactions({ ...(!isAdmin && { isNotAdmin: !isAdmin }) }, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce(\r\n               (sum, item) =>\r\n                  !isAdmin || transactionType !== \"\"\r\n                     ? sum + (item.expencetype ? item.value : item.total)\r\n                     : sum + (item.expencetype ? -item.value : item.total),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loading, loadTransactions, isAdmin, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado {isAdmin ? \"Movimientos\" : \"Egresos\"}</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         {isAdmin && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            {isAdmin && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"transactionType\"\r\n                     name=\"transactionType\"\r\n                     onChange={onChange}\r\n                     value={transactionType}\r\n                  >\r\n                     <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                     <option value=\"income\">Ingreso</option>\r\n                     <option value=\"expence\">Egreso</option>\r\n                     <option value=\"withdrawal\">Retiro</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"transactionType\"\r\n                     className={`form-label ${\r\n                        transactionType === \"\" ? \"lbl\" : \"\"\r\n                     }`}\r\n                  >\r\n                     Tipo de Movimiento\r\n                  </label>\r\n               </div>\r\n            )}\r\n\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/installment\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   installments: {\r\n      installments,\r\n      loading,\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Categoría</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td>\r\n                                    {installment.enrollment &&\r\n                                       installment.enrollment.category.name}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.status === \"expired\"\r\n                                          ? \"installment\"\r\n                                          : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() => installmentsPDF(installments)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst RegisterList = ({\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Caja Diaria</h2>\r\n         <div className=\"btn-right mb-1\">\r\n            <Link\r\n               to=\"/register/monthly-list\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearRegisters();\r\n               }}\r\n               className=\"btn btn-light\"\r\n            >\r\n               <IoIosListBox />\r\n               <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n            </Link>\r\n         </div>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           register.temporary === false && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n   clearTransactions,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   clearTransactions,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading || (transactions[0] && transactions[0].month))\r\n         loadWithdrawals({}, true, false);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <p className=\"heading-tertiary text-moved-right\">\r\n            Total: ${formatNumber(total)}\r\n         </p>\r\n         <div className=\"btn-right mb-1\">\r\n            <Link\r\n               to=\"/register/withdrawal/monthly-list\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearTransactions();\r\n               }}\r\n               className=\"btn btn-light\"\r\n            >\r\n               <IoIosListBox />\r\n               <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true, false);\r\n               console.log(filterData);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions[0] &&\r\n                     transactions[0].month === undefined &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() =>\r\n                  transactionsPDF(transactions, \"withdrawal\", total)\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n   clearTransactions,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ImFilePdf } from \"react-icons/im\";\nimport { BiFilterAlt } from \"react-icons/bi\";\n\nimport {\n   loadWithdrawals,\n   transactionsPDF,\n} from \"../../../../../../actions/expence\";\nimport { formatNumber } from \"../../../../../../actions/global\";\n\nconst WithdrawalXMonthList = ({\n   expences: { transactions, loading },\n   loadWithdrawals,\n   transactionsPDF,\n}) => {\n   const thisYear = new Date().getFullYear();\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\n\n   const [filterData, setFilterData] = useState({\n      year: thisYear,\n   });\n\n   const { year } = filterData;\n\n   useEffect(() => {\n      if (loading) loadWithdrawals({ year: thisYear }, true, true);\n   }, [loading, loadWithdrawals, thisYear]);\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData({\n         ...filterData,\n         [e.target.name]: e.target.value,\n      });\n   };\n\n   return (\n      <>\n         <h2>Retiros por Mes</h2>\n\n         <form\n            className=\"form\"\n            onSubmit={(e) => {\n               e.preventDefault();\n               loadWithdrawals(filterData, true, true);\n            }}\n         >\n            <div className=\"form-group\">\n               <select\n                  className=\"form-input\"\n                  id=\"year\"\n                  name=\"year\"\n                  onChange={onChange}\n                  value={year}\n               >\n                  <option value=\"\">* Seleccione el Año</option>\n                  {yearArray.map((item) => (\n                     <option key={item} value={item}>\n                        {item}\n                     </option>\n                  ))}\n               </select>\n               <label\n                  htmlFor=\"year\"\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\n               >\n                  Año\n               </label>\n            </div>\n            <div className=\"btn-right mb-1\">\n               <button type=\"submit\" className=\"btn btn-light\">\n                  <BiFilterAlt />\n                  &nbsp;Buscar\n               </button>\n            </div>\n         </form>\n\n         <div className=\"wrapper\">\n            <table className=\"my-2\">\n               <thead>\n                  <tr>\n                     <th className=\"blank\"></th>\n                     {!loading &&\n                        typeof transactions[0] === \"object\" &&\n                        Object.keys(transactions[0]).map(\n                           (item, index) =>\n                              item !== \"month\" && <th key={index}>{item}</th>\n                        )}\n                  </tr>\n               </thead>\n               <tbody>\n                  {!loading &&\n                     transactions.map((transaction, index1) => (\n                        <tr key={index1}>\n                           {Object.keys(transaction).map((item, index) =>\n                              index === 0 ? (\n                                 <th key={index} className=\"small\">\n                                    {transaction[item]}\n                                 </th>\n                              ) : (\n                                 <td key={index}>\n                                    {transaction[item] === 0\n                                       ? \"-\"\n                                       : \"$\" + formatNumber(transaction[item])}\n                                 </td>\n                              )\n                           )}\n                        </tr>\n                     ))}\n               </tbody>\n            </table>\n         </div>\n         {!loading && (\n            <div className=\"btn-right\">\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary tooltip\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        transactionsPDF(transactions, \"withdrawal\");\n                     }}\n                  >\n                     <ImFilePdf />\n                  </button>\n                  <span className=\"tooltiptext\">PDF con retiros mensuales</span>\n               </div>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStatetoProps = (state) => ({\n   expences: state.expences,\n});\n\nexport default connect(mapStatetoProps, {\n   loadWithdrawals,\n   transactionsPDF,\n})(WithdrawalXMonthList);\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\nimport WithdrawalXMonthList from \"../../pages/registered/admin/lists/WithdrawalXMonthList\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"admin&teacher\",\r\n                  \"student\",\r\n                  \"guardian\",\r\n               ]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/monthly-list\"\r\n               component={WithdrawalXMonthList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}