{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/penalty.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/register.js","actions/invoice.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/InvoiceList/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","actions/penalty.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","estimatedProfit","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","penalty","observations","combineReducers","alert","state","action","type","payload","filter","id","map","item","oldId","auth","SingleClass","_id","category","students","student","expences","loadingTransactions","gradeType","value","studentsD","some","number","expired","Math","round","Number","EPSILON","detail","payment","discount","details","console","log","global","nav","toggle","neighbourhood","penalties","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","exists","find","clearTimeout","timer","setTimeout","updateLoadingSpinner","bool","createBackup","local","async","res","api","post","blob","get","responseType","saveAs","Blob","data","format","Date","togglePopup","window","scrollTo","err","response","status","setError","toggleMenu","updateCurrentNav","userType","errors","statusText","formatNumber","Intl","NumberFormat","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","attendancesPDF","header","pdf","pdfBlob","teacher","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","clearGrades","clearGradeTypes","loadClass","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","loadInvoices","invoicesPDF","date","clearInvoice","clearInvoices","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","findIndex","current","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","files","InvoiceList","total","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","penaltyPercentage","setPenaltyPercentage","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","onChangeBackup","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","dash","toDelete","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","studentId","public_id","studentnumber","guardian","secretary","admin","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","salary","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","oldUser","isNaN","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadExpenceTypes","expenceType","transactionsPDF","clearExpenceTypes","closeRegister","createRegister","clearTransactions","deleteRegister","register_id","difference","withdrawal","registermoney","colSpan","registerExpence","expencetype","hours","options","selectedIndex","getAttribute","onChangeAdmin","expty","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","oldClass","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","oldInstallment","setfilterForm","addDiscount","reduce","curr","assign","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","sum","onChangeValue","newDetails","accum","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","getMonth","month","c","EditButtons","save","updateTowns","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","isNotAdmin","transaction","getEstimatedProfit","installmentsPDF","installmentName","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","loadWithdrawals","expT","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e2cc809.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REPLACED = \"ALERT_REPLACED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n\r\n//Penalty\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const PENALTY_REGISTERED = \"PENALTY_REGISTERED\";\r\nexport const PENALTY_CLEARED = \"PENALTY_CLEARED\";\r\nexport const PENALTY_ERROR = \"PENALTY_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED, ALERT_REPLACED } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ALERT_SETTED:\r\n         return [...state, payload];\r\n      case ALERT_REMOVED:\r\n         return state.filter((alert) => alert.id !== payload);\r\n      case ALERT_REPLACED:\r\n         return state.map((item) =>\r\n            item.id === payload.oldId ? payload : item\r\n         );\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2 && !payload.expired\r\n                  ? payload.value - (payload.value * 10) / 100\r\n                  : payload.expired\r\n                  ? Math.round(\r\n                       (payload.value * 0.90909 + Number.EPSILON) * 100\r\n                    ) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  console.log(item.expired);\r\n                  const value =\r\n                     item.number > 2 && !item.expired\r\n                        ? item.value - (item.value * 10) / 100\r\n                        : item.expired\r\n                        ? Math.round(\r\n                             (item.value * 0.90909 + Number.EPSILON) * 100\r\n                          ) / 100\r\n                        : item.value;\r\n\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: null,\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n      case PENALTY_REGISTERED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n         };\r\n      case PENALTY_CLEARED:\r\n         return initialState;\r\n      case PENALTY_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport penalties from \"./penalty\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   penalties,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport store from \"../utils/store\";\r\n\r\nimport { ALERT_REMOVED, ALERT_REPLACED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n\r\n      const exists = store.getState().alert.find((item) => item.msg === msg);\r\n\r\n      if (exists) clearTimeout(exists.timer);\r\n\r\n      const timer = setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         5000\r\n      );\r\n\r\n      dispatch({\r\n         type: exists ? ALERT_REPLACED : ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n            ...(exists && { oldId: exists.id }),\r\n            timer,\r\n         },\r\n      });\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = (local) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\", { local });\r\n\r\n      const blob = await api.get(`/backup/fetch${local ? \"?local=true\" : \"\"}`, {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      if (local) dispatch(togglePopup(\"default\"));\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || !info.students.some((item) => item.checked)) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  } ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.category} de ${info.teacher}`;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\nimport { clearInvoices } from \"./invoice\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   dispatch(clearInvoices());\r\n\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\r\n         `/installment/profit/${new Date().getMonth() + 1}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {users[teamNumber].type === \"admin&teacher\"\r\n                           ? `Director${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             } y Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : users[teamNumber].type === \"teacher\"\r\n                           ? `Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : `Secretari${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"o\"\r\n                             }`}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"search\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"classes\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let currentNav = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            switch (userLogged.type) {\r\n               case \"guardian\":\r\n                  if (path[3] !== \"0\")\r\n                     currentNav =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                  break;\r\n               case \"student\":\r\n                  if (enrollments.length > 0) {\r\n                     if (path[3] === \"0\") currentNav = \"class-\" + 0;\r\n                     else {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        currentNav = \"class-\" + index;\r\n                     }\r\n                  } else currentNav = \"index\";\r\n                  break;\r\n               default:\r\n                  currentNav = \"user\";\r\n                  break;\r\n            }\r\n         }\r\n\r\n         updateCurrentNav(currentNav, false);\r\n      }\r\n   }, [userLogged, updateCurrentNav, location.pathname, enrollments]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.percentage}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            <div className=\"wrapper both\">\n               {students.map((student, i) => (\n                  <div className=\"student\" key={i}>\n                     <p className=\"name\">{student.name}</p>\n                     <input\n                        className=\"form-checkbox\"\n                        type=\"checkbox\"\n                        checked={student.checked}\n                        onChange={(e) => onChange(e, i)}\n                        name=\"student\"\n                        id={`cb${period}-${i}`}\n                     />\n                     <label\n                        className=\"checkbox-lbl\"\n                        id=\"check\"\n                        htmlFor={`cb${period}-${i}`}\n                     >\n                        {student.checked ? \"Si\" : \"No\"}\n                     </label>\n                  </div>\n               ))}\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaCloudDownloadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert, createBackup }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"popup-restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark\">\n            Seleccione el backup que desea restaurar o descargue el actual\n         </h5>\n         <div className=\"form\">\n            <p className=\"text-lighter-primary restore-file\">\n               {selectedFile !== \"\" && (\n                  <>\n                     {selectedFile.name}\n                     <button\n                        type=\"button\"\n                        onClick={() =>\n                           setAdminValues((prev) => ({\n                              ...prev,\n                              selectedFile: \"\",\n                              fileIn: false,\n                           }))\n                        }\n                        className=\"btn-cancel\"\n                     >\n                        <FaTimes />\n                     </button>\n                  </>\n               )}\n            </p>\n            <div className=\"upl-img\">\n               <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n                  <input\n                     id=\"fileInput\"\n                     type=\"file\"\n                     name=\"image\"\n                     onChange={fileSelected}\n                     className=\"upload\"\n                  />\n                  <span>\n                     <FaCloudUploadAlt />\n                     &nbsp;Subir\n                  </span>\n               </div>\n               <button\n                  type=\"button\"\n                  onClick={() => createBackup(true)}\n                  className=\"btn btn-secondary restore-btn\"\n               >\n                  <FaCloudDownloadAlt />\n                  &nbsp;Descargar\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React from \"react\";\nimport format from \"date-fns/format\";\nimport { Link } from \"react-router-dom\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport { formatNumber } from \"../../../../actions/global\";\n\nconst InvoiceList = ({ invoices, clearInvoice, togglePopup }) => {\n   return (\n      <div className=\"popup-invoices\">\n         <h3 className=\"heading-tertiary text-left p-1 my-1\">\n            Listado de Facturas Pagas\n         </h3>\n         <div className=\"wrapper both\">\n            <table>\n               <tbody>\n                  {invoices.length > 0 ? (\n                     invoices.map((invoice, i) => (\n                        <React.Fragment key={i}>\n                           {\n                              <tr>\n                                 <td>\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\n                                 </td>\n                                 <td>${formatNumber(invoice.total)}</td>\n                                 <td>\n                                    <Link\n                                       to={`/invoice/single/${invoice._id}`}\n                                       onClick={() => {\n                                          window.scroll(0, 0);\n                                          clearInvoice();\n                                          togglePopup(\"default\");\n                                       }}\n                                       className=\"btn-text\"\n                                    >\n                                       <FaSearch />\n                                    </Link>\n                                 </td>\n                              </tr>\n                           }\n                        </React.Fragment>\n                     ))\n                  ) : (\n                     <p className=\"heading-tertiary text-center\">\n                        No hay facturas registradas\n                     </p>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </div>\n   );\n};\n\nexport default InvoiceList;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup, createBackup } from \"../../../actions/global\";\r\nimport { clearInvoice } from \"../../../actions/invoice\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\nimport RestoreDB from \"./RestoreDB\";\r\nimport InvoiceList from \"./InvoiceList\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   createBackup,\r\n   clearInvoice,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info && info.students)\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: info.students.map((item) => {\r\n               return {\r\n                  ...item,\r\n                  name: item.lastname + \", \" + item.name,\r\n                  checked: false,\r\n               };\r\n            }),\r\n         }));\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return (\r\n               <RestoreDB\r\n                  onChange={onChangeBackup}\r\n                  createBackup={createBackup}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         case \"invoices\":\r\n            return (\r\n               <InvoiceList\r\n                  invoices={info}\r\n                  clearInvoice={clearInvoice}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            );\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               {chooseType(popupType)}\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               {popupType !== \"invoices\" && (\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-success\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        switch (popupType) {\r\n                           case \"penalty\":\r\n                              confirm(penaltyPercentage);\r\n                              setPenaltyPercentage(\"\");\r\n                              break;\r\n                           case \"certificate\":\r\n                              confirm(certificate);\r\n                              setCertificate({ date: \"\", students: [] });\r\n                              break;\r\n                           case \"new-date\":\r\n                              confirm(newDate);\r\n                              setNewDate({\r\n                                 fromDate: \"\",\r\n                                 toDate: \"\",\r\n                                 date: \"\",\r\n                              });\r\n                              break;\r\n                           case \"new-grade\":\r\n                              confirm(newGradeType);\r\n                              setNewGradeType(\"\");\r\n                              break;\r\n                           case \"backup\":\r\n                              confirm(backup);\r\n                              setBackup(\"\");\r\n                              break;\r\n                           default:\r\n                              confirm();\r\n                              break;\r\n                        }\r\n                        if (!error) togglePopup(\"default\");\r\n                     }}\r\n                  >\r\n                     Aceptar\r\n                  </button>\r\n               )}\r\n\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   togglePopup,\r\n   setAlert,\r\n   createBackup,\r\n   clearInvoice,\r\n})(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n   dash,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && !dash && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.expired &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && !(!classInfo && !user.active) && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               <div className=\"bg-white p-3\">\r\n                  <h3 className=\"heading-tertiary m-0 text-primary p-1\">\r\n                     Cuotas Pendientes{\" \"}\r\n                  </h3>\r\n                  <button\r\n                     className=\"btn-text liner\"\r\n                     onClick={() => togglePopup(\"invoices\")}\r\n                  >\r\n                     Facturas Pagas\r\n                  </button>\r\n                  <div className=\"pb-2\">\r\n                     {!loadingInstallments && installments.length > 0 ? (\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={false}\r\n                           dash\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">Al día</p>\r\n                     )}\r\n                  </div>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && isAdmin) getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && isAdmin && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ teacher: user._id }, false);\r\n   }, [user._id, loadClasses, loading]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={false}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\nimport { loadInvoices } from \"../../../../actions/invoice\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   invoices: { invoices, loading },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   loadInvoices,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   useEffect(() => {\r\n      if (user && user.type === \"student\" && loading)\r\n         loadInvoices({ studentId: user._id }, false);\r\n   }, [user, loading, loadInvoices]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return <>{(isAdmin || !_id) && <TeacherDashboard user={user} />}</>;\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup(false);\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupRealType === \"invoices\"\r\n                        ? invoices\r\n                        : popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                           {isOwner && whenNull(user.salary) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Salario: </span>\r\n                                 {user.salary}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   loadInvoices,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : user.dob &&\r\n                                format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" && (\r\n                              <>\r\n                                 <div className=\"tooltip\">\r\n                                    <Link\r\n                                       to={\r\n                                          classInfo.year === year\r\n                                             ? `/class/edit/${classInfo._id}`\r\n                                             : \"#\"\r\n                                       }\r\n                                       className={`btn ${\r\n                                          classInfo.year === year\r\n                                             ? \"btn-mix-secondary\"\r\n                                             : \"btn-black\"\r\n                                       }`}\r\n                                       onClick={() => {\r\n                                          if (classInfo.year === year) {\r\n                                             window.scroll(0, 0);\r\n                                             clearSearch();\r\n                                          }\r\n                                       }}\r\n                                    >\r\n                                       <FaEdit />\r\n                                    </Link>\r\n                                    <span className=\"tooltiptext\">Editar</span>\r\n                                 </div>\r\n\r\n                                 <div className=\"tooltip\">\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTrashAlt />\r\n                                    </button>\r\n                                    <span className=\"tooltiptext\">\r\n                                       Eliminar\r\n                                    </span>\r\n                                 </div>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances.length > 0 &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 <input\r\n                                    type=\"checkbox\"\r\n                                    checked={!row.inassistance}\r\n                                    className=\"option-input\"\r\n                                    name={row.name}\r\n                                    onChange={(e) => onChange(e, i, key)}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n                  <tr className=\"sticky\">\r\n                     <td></td>\r\n                     {newAttendances.length > 0 &&\r\n                        newAttendances[0].map((item, i) => (\r\n                           <td key={i}>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-danger\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       popupType: \"delete\",\r\n                                       toDelete: item.date,\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                              >\r\n                                 <FaTimes />\r\n                              </button>\r\n                           </td>\r\n                        ))}\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students: students.slice(0, -1),\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades[i] &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"text\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                       value={row.value}\r\n                                       disabled={year !== classInfo.year}\r\n                                       placeholder=\"Nota\"\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row.gradetype._id,\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students:\r\n                                    year === classInfo.year\r\n                                       ? students.slice(0, -1)\r\n                                       : students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({ type, userType, salary, degree, school, onChange }) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isOwner && (\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={salary}\r\n                  name=\"salary\"\r\n                  id=\"salary\"\r\n                  placeholder=\"Salario por hora\"\r\n               />\r\n               <label htmlFor=\"salary\" className=\"form-label\">\r\n                  Salario por hora\r\n               </label>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      salary: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      salary,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               let oldUser = {};\r\n               for (const x in prev) {\r\n                  oldUser[x] = !user[x]\r\n                     ? prev[x]\r\n                     : x === \"dob\"\r\n                     ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                     : x === \"town\" || x === \"neighbourhood\"\r\n                     ? user[x]._id\r\n                     : user[x];\r\n               }\r\n               return {\r\n                  ...oldUser,\r\n                  discount: user.discount,\r\n                  active: user.active,\r\n               };\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (e.target.name !== \"dni\" || !isNaN(e.target.value)) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     salary={salary}\r\n                     school={school}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence/withdrawal?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Gasto/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Gasto Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF = (transactions, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (total)\r\n         await api.post(\"/pdf/expence/withdrawal-list\", {\r\n            transactions,\r\n            total,\r\n         });\r\n      else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n      const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n   deleteRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   auth: { userLogged },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   deleteRegister,\r\n   togglePopup,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const { popupType } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"close\") {\r\n                  if (!register) createRegister({ difference, description });\r\n                  else closeRegister(formData);\r\n               } else {\r\n                  deleteRegister(register._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"close\" ? \"cerrar\" : \"reabrir\"\r\n            } la caja?`}\r\n         />\r\n         <form className=\"form\">\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  {isAdmin && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Retiro de Dinero</td>\r\n                           <td>\r\n                              $\r\n                              {register &&\r\n                              register.temporary &&\r\n                              register.withdrawal\r\n                                 ? formatNumber(register.withdrawal)\r\n                                 : 0}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/withdrawal/list\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearTransactions();\r\n                                    clearExpenceTypes();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Plata Caja</td>\r\n                           <td>\r\n                              $\r\n                              {register && formatNumber(register.registermoney)}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/list\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearRegisters();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center\">\r\n               {register && !register.temporary ? (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"reopen\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     className=\"btn btn-secondary\"\r\n                  >\r\n                     <FaTimes />\r\n                     <span className=\"hide-sm\">&nbsp; Reabrir Caja</span>\r\n                  </button>\r\n               ) : (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"close\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     disabled={!register && difference === \"\"}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <FiSave />\r\n                     <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n                  </button>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   deleteRegister,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { setAlert } from \"../../../../../../../actions/alert\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../../sharedComp/Alert\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   togglePopup,\r\n   setAlert,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      hours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { hours, teacher, type } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         hours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name === \"teacher\"\r\n               ? users.find((user) => user._id === e.target.value)\r\n               : e.target.value,\r\n      }));\r\n\r\n      if (e.target.name === \"hours\") {\r\n         if (teacher.salary && teacher.salary !== \"\") {\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               value: e.target.value * teacher.salary,\r\n            }));\r\n         } else {\r\n            window.scroll(0, 0);\r\n            setAlert(\r\n               \"No está definido el salario del empleado seleccionado\",\r\n               \"danger\",\r\n               \"3\"\r\n            );\r\n         }\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            description: `${\r\n               expencetype === employeePaymentID && teacher._id\r\n                  ? `Pago a ${teacher.lastname}, ${teacher.name}. `\r\n                  : \"\"\r\n            }${description}`,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (register) togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  {(isAdmin ||\r\n                     (register && register.registermoney <= 50000)) && (\r\n                     <tr>\r\n                        <td>Dinero en Caja</td>\r\n                        <td>\r\n                           $\r\n                           {register ? formatNumber(register.registermoney) : 0}\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n\r\n                  <tr>\r\n                     <td>Tipo de {isAdmin ? \"Movimiento\" : \"Gasto\"}</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de {isAdmin ? \"Movimiento\" : \"Gasto\"}\r\n                           </option>\r\n                           {expencetypes.map(\r\n                              (expty) =>\r\n                                 ((!isAdmin && expty.type === \"expence\") ||\r\n                                    isAdmin) && (\r\n                                    <option\r\n                                       key={expty._id}\r\n                                       name={expty.type}\r\n                                       value={expty._id}\r\n                                    >\r\n                                       {expty.name}\r\n                                    </option>\r\n                                 )\r\n                           )}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value={0}>* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       {user.type !== \"admin&teacher\" && (\r\n                                          <option value={user._id}>\r\n                                             {user.lastname}, {user.name}\r\n                                          </option>\r\n                                       )}\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Horas</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder=\"Horas\"\r\n                                 value={hours}\r\n                                 name=\"hours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   setAlert,\r\n   togglePopup,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(addMonths(new Date(), 1), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            format(new Date(classInfo.hourin1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") &&\r\n            format(new Date(classInfo.hourout1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourout2), \"HH:mm\")\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: true }));\r\n\r\n         setFormData((prev) => {\r\n            let oldClass = {};\r\n            for (const x in prev) {\r\n               oldClass[x] = !classInfo[x]\r\n                  ? prev[x]\r\n                  : x.substring(0, 4) === \"hour\"\r\n                  ? format(\r\n                       new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                       \"HH:mm\"\r\n                    )\r\n                  : x === \"teacher\"\r\n                  ? classInfo[x]._id\r\n                  : classInfo[x];\r\n            }\r\n            return {\r\n               ...oldClass,\r\n            };\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/penalty\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   penalties: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(percentage) => updatePenalty({ percentage })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   penalties: state.penalties,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError, togglePopup } from \"./global\";\r\n\r\nimport {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/penalty/last\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearPenalty = () => (dispatch) => {\r\n   dispatch({\r\n      type: PENALTY_CLEARED,\r\n   });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      expired: false,\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, expired, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  let oldInstallment = {};\r\n                  for (const x in prev) {\r\n                     oldInstallment[x] = !installment[x]\r\n                        ? prev[x]\r\n                        : installment[x];\r\n                  }\r\n                  return {\r\n                     ...oldInstallment,\r\n                     updatable: installment.updatable,\r\n                  };\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (student && year !== \"\" && loading) {\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loadEnrollments, year, loading]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...((number === \"1\" || number === \"2\") && {\r\n                        expired: true,\r\n                        updatable: false,\r\n                     }),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={expired}\r\n                        onChange={onChange}\r\n                        name=\"expired\"\r\n                        id=\"expired\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"expired\">\r\n                        {expired ? \"Vencida\" : \"Vigente\"}\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \" \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" && (\r\n               <Link\r\n                  to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                  onClick={() => {\r\n                     if (users.length !== 0) {\r\n                        window.scroll(0, 0);\r\n                        clearClass();\r\n                        clearSearch();\r\n                     }\r\n                  }}\r\n                  className={`btn ${\r\n                     users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                  }`}\r\n               >\r\n                  <FaPlus />\r\n                  &nbsp;Nueva Clase\r\n               </Link>\r\n            )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].filter((item) => !item.expired).length > 2\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Cl Pa,Ex Li,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() =>\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: installmentTotal - total,\r\n                  details: details.map((item) => {\r\n                     return {\r\n                        ...item,\r\n                        payment:\r\n                           typeof item.payment === \"number\"\r\n                              ? item.payment\r\n                              : Number(item.payment.replace(/,/g, \".\")),\r\n                     };\r\n                  }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          disabled={\r\n                                             install.discount !== undefined\r\n                                          }\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Gasto</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Gasto\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               max={endDate !== \"\" ? endDate : \"\"}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               min={startDate !== \"\" ? startDate : \"\"}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   auth: { userLogged },\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: invoices.reduce((sum, invoice) => sum + invoice.total, 0),\r\n         }));\r\n      }\r\n   }, [loading, loadInvoices, invoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         {userLogged.type !== \"secretary\" && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   auth: { userLogged },\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Gasto\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadTransactions({ ...(!isAdmin && { isNotAdmin: !isAdmin }) }, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce(\r\n               (sum, item) =>\r\n                  !isAdmin || transactionType !== \"\"\r\n                     ? sum + (item.expencetype ? item.value : item.total)\r\n                     : sum + (item.expencetype ? -item.value : item.total),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loading, loadTransactions, isAdmin, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado {isAdmin ? \"Movimientos\" : \"Egresos\"}</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         {isAdmin && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            {isAdmin && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"transactionType\"\r\n                     name=\"transactionType\"\r\n                     onChange={onChange}\r\n                     value={transactionType}\r\n                  >\r\n                     <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                     <option value=\"income\">Ingreso</option>\r\n                     <option value=\"expence\">Gasto</option>\r\n                     <option value=\"withdrawal\">Retiro</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"transactionType\"\r\n                     className={`form-label ${\r\n                        transactionType === \"\" ? \"lbl\" : \"\"\r\n                     }`}\r\n                  >\r\n                     Tipo de Movimiento\r\n                  </label>\r\n               </div>\r\n            )}\r\n\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/installment\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   installments: {\r\n      installments,\r\n      loading,\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.expired ? \"installment\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() => installmentsPDF(installments)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst RegisterList = ({\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Caja Diaria</h2>\r\n         <div className=\"btn-right mb-1\">\r\n            <Link\r\n               to=\"/register/monthly-list\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearRegisters();\r\n               }}\r\n               className=\"btn btn-light\"\r\n            >\r\n               <IoIosListBox />\r\n               <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n            </Link>\r\n         </div>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           register.temporary === false && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadWithdrawals({}, true);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n\r\n         <h4 className=\"m-1 heading-tertiary text-right\">\r\n            Total: ${formatNumber(total)}\r\n         </h4>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}