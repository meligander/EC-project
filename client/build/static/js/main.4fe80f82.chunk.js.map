{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/penalty.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","actions/register.js","actions/invoice.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","actions/penalty.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","estimatedProfit","penalty","observations","combineReducers","alert","state","action","type","payload","filter","id","auth","map","SingleClass","_id","item","category","students","student","monthlyDebt","expences","loadingTransactions","gradeType","value","studentsD","some","number","expired","Math","round","Number","EPSILON","detail","payment","discount","details","console","log","global","nav","toggle","neighbourhood","penalties","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","setTimeout","updateLoadingSpinner","bool","toggleMenu","togglePopup","updateCurrentNav","setError","response","userType","data","errors","statusText","status","formatNumber","Intl","NumberFormat","format","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","async","api","get","err","attendancesPDF","header","post","pdf","responseType","pdfBlob","Blob","saveAs","teacher","Date","window","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","scrollTo","clearGrades","clearGradeTypes","loadClass","res","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","invoicesPDF","date","clearInvoice","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","findIndex","current","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","files","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","penaltyPercentage","setPenaltyPercentage","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","onChangeBackup","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","toDelete","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","createBackup","blob","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","public_id","studentnumber","guardian","secretary","admin","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","salary","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","find","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","oldUser","isNaN","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadExpenceTypes","expenceType","transactionsPDF","total","clearExpenceTypes","closeRegister","createRegister","clearInvoices","clearTransactions","difference","withdrawal","registermoney","colSpan","registerExpence","expencetype","hours","options","selectedIndex","getAttribute","onChangeAdmin","expty","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","oldClass","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","oldInstallment","setfilterForm","addDiscount","reduce","curr","assign","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","sum","onChangeValue","newDetails","accum","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","getMonth","month","c","EditButtons","save","updateTowns","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","loadInvoices","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","transaction","getEstimatedProfit","installmentsPDF","installmentName","deleteRegister","register_id","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","loadWithdrawals","expT","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fe80f82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n\r\n//Penalty\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const PENALTY_REGISTERED = \"PENALTY_REGISTERED\";\r\nexport const PENALTY_CLEARED = \"PENALTY_CLEARED\";\r\nexport const PENALTY_ERROR = \"PENALTY_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\t\tcase ALERT_SETTED:\r\n\t\t\treturn [...state, payload];\r\n\t\tcase ALERT_REMOVED:\r\n\t\t\treturn state.filter((alert) => alert.id !== payload);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n               monthlyDebt: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2 && !payload.expired\r\n                  ? payload.value - (payload.value * 10) / 100\r\n                  : payload.expired\r\n                  ? Math.round(\r\n                       (payload.value * 0.90909 + Number.EPSILON) * 100\r\n                    ) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  console.log(item.expired);\r\n                  const value =\r\n                     item.number > 2 && !item.expired\r\n                        ? item.value - (item.value * 10) / 100\r\n                        : item.expired\r\n                        ? Math.round(\r\n                             (item.value * 0.90909 + Number.EPSILON) * 100\r\n                          ) / 100\r\n                        : item.value;\r\n\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: null,\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n      case PENALTY_REGISTERED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n         };\r\n      case PENALTY_CLEARED:\r\n         return initialState;\r\n      case PENALTY_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport penalties from \"./penalty\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   penalties,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { ALERT_REMOVED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n      dispatch({\r\n         type: ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n         },\r\n      });\r\n\r\n      setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         4000\r\n      );\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = () => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\");\r\n\r\n      const blob = await api.get(\"/backup/fetch\", {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || !info.students.some((item) => item.checked)) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  } ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.category} de ${info.teacher}`;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/money\");\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {users[teamNumber].type === \"admin&teacher\"\r\n                           ? `Director${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             } y Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : users[teamNumber].type === \"teacher\"\r\n                           ? `Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : `Secretari${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"o\"\r\n                             }`}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"search\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"classes\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let currentNav = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            switch (userLogged.type) {\r\n               case \"guardian\":\r\n                  if (path[3] !== \"0\")\r\n                     currentNav =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                  break;\r\n               case \"student\":\r\n                  if (enrollments.length > 0) {\r\n                     if (path[3] === \"0\") currentNav = \"class-\" + 0;\r\n                     else {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        currentNav = \"class-\" + index;\r\n                     }\r\n                  } else currentNav = \"index\";\r\n                  break;\r\n               default:\r\n                  currentNav = \"user\";\r\n                  break;\r\n            }\r\n         }\r\n\r\n         updateCurrentNav(currentNav, false);\r\n      }\r\n   }, [userLogged, updateCurrentNav, location.pathname, enrollments]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.percentage}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            {students.map((student, i) => (\n               <div className=\"student\" key={i}>\n                  <p className=\"name\">{student.name}</p>\n                  <input\n                     className=\"form-checkbox\"\n                     type=\"checkbox\"\n                     checked={student.checked}\n                     onChange={(e) => onChange(e, i)}\n                     name=\"student\"\n                     id={`cb${period}-${i}`}\n                  />\n                  <label\n                     className=\"checkbox-lbl\"\n                     id=\"check\"\n                     htmlFor={`cb${period}-${i}`}\n                  >\n                     {student.checked ? \"Si\" : \"No\"}\n                  </label>\n               </div>\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      console.log(\"hola\");\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"form restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark m-1\">\n            Seleccione el backup que desea restaurar\n         </h5>\n         <p className=\"text-lighter-primary restore-file\">\n            {selectedFile !== \"\" && (\n               <>\n                  {selectedFile.name}\n                  <button\n                     type=\"button\"\n                     onClick={() =>\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           selectedFile: \"\",\n                           fileIn: false,\n                        }))\n                     }\n                     className=\"btn-cancel\"\n                  >\n                     <FaTimes />\n                  </button>\n               </>\n            )}\n         </p>\n         <div className=\"upl-img\">\n            <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n               <input\n                  id=\"fileInput\"\n                  type=\"file\"\n                  name=\"image\"\n                  onChange={fileSelected}\n                  onClick={() => console.log(\"hola\")}\n                  className=\"upload\"\n               />\n               <span>\n                  <FaCloudUploadAlt />\n                  &nbsp;Subir Backup\n               </span>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup } from \"../../../actions/global\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\nimport RestoreDB from \"./RestoreDB\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info && info.students)\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: info.students.map((item) => {\r\n               return {\r\n                  ...item,\r\n                  name: item.lastname + \", \" + item.name,\r\n                  checked: false,\r\n               };\r\n            }),\r\n         }));\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return <RestoreDB onChange={onChangeBackup} setAlert={setAlert} />;\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               <div\r\n                  className={popupType === \"certificate\" ? \"wrapper both\" : \"\"}\r\n               >\r\n                  {chooseType(popupType)}\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     switch (popupType) {\r\n                        case \"penalty\":\r\n                           confirm(penaltyPercentage);\r\n                           setPenaltyPercentage(\"\");\r\n                           break;\r\n                        case \"certificate\":\r\n                           confirm(certificate);\r\n                           setCertificate({ date: \"\", students: [] });\r\n                           break;\r\n                        case \"new-date\":\r\n                           confirm(newDate);\r\n                           setNewDate({ fromDate: \"\", toDate: \"\", date: \"\" });\r\n                           break;\r\n                        case \"new-grade\":\r\n                           confirm(newGradeType);\r\n                           setNewGradeType(\"\");\r\n                           break;\r\n                        case \"backup\":\r\n                           confirm(backup);\r\n                           setBackup(\"\");\r\n                           break;\r\n                        default:\r\n                           confirm();\r\n                           break;\r\n                     }\r\n                     if (!error) togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Aceptar\r\n               </button>\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { togglePopup, setAlert })(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.expired &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && !(!classInfo && !user.active) && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               {!loadingInstallments && installments.length > 0 && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Cuotas Pendientes\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={false}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && userLogged.type !== \"secretary\") getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, userLogged]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ teacher: user._id }, false);\r\n   }, [user._id, loadClasses, loading]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={false}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return <>{(isAdmin || !_id) && <TeacherDashboard user={user} />}</>;\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup();\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                           {isOwner && whenNull(user.salary) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Salario: </span>\r\n                                 {user.salary}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" && (\r\n                              <>\r\n                                 <div className=\"tooltip\">\r\n                                    <Link\r\n                                       to={\r\n                                          classInfo.year === year\r\n                                             ? `/class/edit/${classInfo._id}`\r\n                                             : \"#\"\r\n                                       }\r\n                                       className={`btn ${\r\n                                          classInfo.year === year\r\n                                             ? \"btn-mix-secondary\"\r\n                                             : \"btn-black\"\r\n                                       }`}\r\n                                       onClick={() => {\r\n                                          if (classInfo.year === year) {\r\n                                             window.scroll(0, 0);\r\n                                             clearSearch();\r\n                                          }\r\n                                       }}\r\n                                    >\r\n                                       <FaEdit />\r\n                                    </Link>\r\n                                    <span className=\"tooltiptext\">Editar</span>\r\n                                 </div>\r\n\r\n                                 <div className=\"tooltip\">\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTrashAlt />\r\n                                    </button>\r\n                                    <span className=\"tooltiptext\">\r\n                                       Eliminar\r\n                                    </span>\r\n                                 </div>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete.date,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances[i] &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"checkbox\"\r\n                                       checked={!row.inassistance}\r\n                                       className=\"option-input\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues({\r\n                                             ...adminValues,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row,\r\n                                          });\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students: students.slice(0, -1),\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades[i] &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"text\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                       value={row.value}\r\n                                       disabled={year !== classInfo.year}\r\n                                       placeholder=\"Nota\"\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row.gradetype,\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students:\r\n                                    year === classInfo.year\r\n                                       ? students.slice(0, -1)\r\n                                       : students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({ type, userType, salary, degree, school, onChange }) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isOwner && (\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={salary}\r\n                  name=\"salary\"\r\n                  id=\"salary\"\r\n                  placeholder=\"Salario por hora\"\r\n               />\r\n               <label htmlFor=\"salary\" className=\"form-label\">\r\n                  Salario por hora\r\n               </label>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      salary: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      salary,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               let oldUser = {};\r\n               for (const x in prev) {\r\n                  oldUser[x] = !user[x]\r\n                     ? prev[x]\r\n                     : x === \"dob\"\r\n                     ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                     : x === \"town\" || x === \"neighbourhood\"\r\n                     ? user[x]._id\r\n                     : user[x];\r\n               }\r\n               return {\r\n                  ...oldUser,\r\n                  discount: user.discount,\r\n                  active: user.active,\r\n               };\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (e.target.name !== \"dni\" || !isNaN(e.target.value)) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     salary={salary}\r\n                     school={school}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence/withdrawal?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Gasto/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Gasto Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF = (transactions, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (total)\r\n         await api.post(\"/pdf/expence/withdrawal-list\", {\r\n            transactions,\r\n            total,\r\n         });\r\n      else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n      const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   const confirm = () => {\r\n      if (!register) createRegister({ difference, description });\r\n      else closeRegister(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea cerrar la caja?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (!register || (register && register.temporary))\r\n                  togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Retiro de Dinero</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.withdrawal\r\n                           ? formatNumber(register.withdrawal)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/withdrawal/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Plata Caja</td>\r\n                     <td>\r\n                        ${register && formatNumber(register.registermoney)}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearRegisters();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  disabled={!register || (register && !register.temporary)}\r\n                  className={`btn ${\r\n                     (register && !register.temporary) || !register\r\n                        ? \"btn-black\"\r\n                        : \"btn-primary\"\r\n                  }`}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { setAlert } from \"../../../../../../../actions/alert\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../../sharedComp/Alert\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   togglePopup,\r\n   setAlert,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      hours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { hours, teacher, type } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         hours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name === \"teacher\"\r\n               ? users.find((user) => user._id === e.target.value)\r\n               : e.target.value,\r\n      }));\r\n\r\n      if (e.target.name === \"hours\") {\r\n         if (teacher.salary && teacher.salary !== \"\") {\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               value: e.target.value * teacher.salary,\r\n            }));\r\n         } else {\r\n            window.scroll(0, 0);\r\n            setAlert(\r\n               \"No está definido el salario del empleado seleccionado\",\r\n               \"danger\",\r\n               \"3\"\r\n            );\r\n         }\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            description: `${\r\n               expencetype === employeePaymentID && teacher._id\r\n                  ? `Pago a ${teacher.lastname}, ${teacher.name}. `\r\n                  : \"\"\r\n            }${description}`,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (register) togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Dinero en Caja</td>\r\n                     <td>\r\n                        ${register ? formatNumber(register.registermoney) : 0}\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Tipo de Movimiento</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de Movimiento\r\n                           </option>\r\n                           {expencetypes.map((expty) => (\r\n                              <option\r\n                                 key={expty._id}\r\n                                 name={expty.type}\r\n                                 value={expty._id}\r\n                              >\r\n                                 {expty.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value={0}>* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       {user.type !== \"admin&teacher\" && (\r\n                                          <option value={user._id}>\r\n                                             {user.lastname}, {user.name}\r\n                                          </option>\r\n                                       )}\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Horas</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder=\"Horas\"\r\n                                 value={hours}\r\n                                 name=\"hours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   setAlert,\r\n   togglePopup,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(addMonths(new Date(), 1), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            format(new Date(classInfo.hourin1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") &&\r\n            format(new Date(classInfo.hourout1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourout2), \"HH:mm\")\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: true }));\r\n\r\n         setFormData((prev) => {\r\n            let oldClass = {};\r\n            for (const x in prev) {\r\n               oldClass[x] = !classInfo[x]\r\n                  ? prev[x]\r\n                  : x.substring(0, 4) === \"hour\"\r\n                  ? format(\r\n                       new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                       \"HH:mm\"\r\n                    )\r\n                  : x === \"teacher\"\r\n                  ? classInfo[x]._id\r\n                  : classInfo[x];\r\n            }\r\n            return {\r\n               ...oldClass,\r\n            };\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/penalty\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   penalties: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(percentage) => updatePenalty({ percentage })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   penalties: state.penalties,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError, togglePopup } from \"./global\";\r\n\r\nimport {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/penalty/last\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearPenalty = () => (dispatch) => {\r\n   dispatch({\r\n      type: PENALTY_CLEARED,\r\n   });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      expired: false,\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, expired, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  let oldInstallment = {};\r\n                  for (const x in prev) {\r\n                     oldInstallment[x] = !installment[x]\r\n                        ? prev[x]\r\n                        : installment[x];\r\n                  }\r\n                  return {\r\n                     ...oldInstallment,\r\n                     number: installment.number,\r\n                     value: installment.value,\r\n                  };\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (student && year !== \"\" && loading) {\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loadEnrollments, year, loading]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...((number === \"1\" || number === \"2\") && {\r\n                        expired: true,\r\n                        updatable: false,\r\n                     }),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={expired}\r\n                        onChange={onChange}\r\n                        name=\"expired\"\r\n                        id=\"expired\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"expired\">\r\n                        {expired ? \"Vencida\" : \"Vigente\"}\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \" \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" && (\r\n               <Link\r\n                  to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                  onClick={() => {\r\n                     if (users.length !== 0) {\r\n                        window.scroll(0, 0);\r\n                        clearClass();\r\n                        clearSearch();\r\n                     }\r\n                  }}\r\n                  className={`btn ${\r\n                     users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                  }`}\r\n               >\r\n                  <FaPlus />\r\n                  &nbsp;Nueva Clase\r\n               </Link>\r\n            )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].filter((item) => !item.expired).length > 2\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Cl Pa,Ex Li,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() =>\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: installmentTotal - total,\r\n                  details: details.map((item) => {\r\n                     return {\r\n                        ...item,\r\n                        payment:\r\n                           typeof item.payment === \"number\"\r\n                              ? item.payment\r\n                              : Number(item.payment.replace(/,/g, \".\")),\r\n                     };\r\n                  }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          disabled={\r\n                                             install.discount !== undefined\r\n                                          }\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Gasto</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Gasto\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange, max }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               max={max}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n   }, [loading, loadInvoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Gasto\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadTransactions({}, true);\r\n   }, [loading, loadTransactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Movimientos</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"transactionType\"\r\n                  name=\"transactionType\"\r\n                  onChange={onChange}\r\n                  value={transactionType}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                  <option value=\"income\">Ingreso</option>\r\n                  <option value=\"expence\">Gasto</option>\r\n                  <option value=\"withdrawal\">Retiro</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${\r\n                     transactionType === \"\" ? \"lbl\" : \"\"\r\n                  }`}\r\n               >\r\n                  Tipo de Movimiento\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/enrollment\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   enrollments: {\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   installments: { installments, loading },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,,,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.expired ? \"installment\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() => installmentsPDF(installments)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst RegisterList = ({\r\n   auth: { userLogged },\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => deleteRegister(last._id)}\r\n            info=\"¿Está seguro que desea eliminar el cierre de caja?\"\r\n         />\r\n         <h2>Caja Diaria</h2>\r\n         {isAdmin && (\r\n            <div className=\"btn-right my-3\">\r\n               <Link\r\n                  to=\"/register/monthly-list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearRegisters();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n               </Link>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                     {!loadingRegister && !last.temporary && <th>&nbsp;</th>}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers[0] &&\r\n                     registers[0].temporary !== undefined &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           !register.temporary && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                                 {!loadingRegister && !last.temporary && (\r\n                                    <td>\r\n                                       {i === 0 && (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       )}\r\n                                    </td>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadWithdrawals({}, true);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n\r\n         <h4 className=\"m-1 heading-tertiary text-right\">\r\n            Total: ${formatNumber(total)}\r\n         </h4>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}