{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/penalty.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","actions/register.js","actions/invoice.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","actions/penalty.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","estimatedProfit","penalty","observations","combineReducers","alert","state","action","type","payload","filter","id","map","item","oldId","auth","SingleClass","_id","category","students","student","monthlyDebt","expences","loadingTransactions","gradeType","value","studentsD","some","number","expired","Math","round","Number","EPSILON","detail","payment","discount","details","console","log","global","nav","toggle","neighbourhood","penalties","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","exists","find","clearTimeout","timer","setTimeout","updateLoadingSpinner","bool","createBackup","async","res","api","post","blob","get","responseType","saveAs","Blob","data","format","Date","window","scrollTo","err","response","status","setError","toggleMenu","togglePopup","updateCurrentNav","userType","errors","statusText","formatNumber","Intl","NumberFormat","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","attendancesPDF","header","pdf","pdfBlob","teacher","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","clearGrades","clearGradeTypes","loadClass","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","invoicesPDF","date","clearInvoice","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","findIndex","current","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","files","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","penaltyPercentage","setPenaltyPercentage","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","onChangeBackup","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","toDelete","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","public_id","studentnumber","guardian","secretary","admin","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","salary","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","oldUser","isNaN","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadExpenceTypes","expenceType","transactionsPDF","total","clearExpenceTypes","closeRegister","createRegister","clearInvoices","clearTransactions","difference","withdrawal","registermoney","colSpan","registerExpence","expencetype","hours","options","selectedIndex","getAttribute","onChangeAdmin","expty","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","oldClass","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","oldInstallment","setfilterForm","addDiscount","reduce","curr","assign","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","sum","onChangeValue","newDetails","accum","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","getMonth","month","c","EditButtons","save","updateTowns","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","loadInvoices","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","transaction","getEstimatedProfit","installmentsPDF","installmentName","deleteRegister","register_id","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","loadWithdrawals","expT","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbeb7f0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REPLACED = \"ALERT_REPLACED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n\r\n//Penalty\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const PENALTY_REGISTERED = \"PENALTY_REGISTERED\";\r\nexport const PENALTY_CLEARED = \"PENALTY_CLEARED\";\r\nexport const PENALTY_ERROR = \"PENALTY_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED, ALERT_REPLACED } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ALERT_SETTED:\r\n         return [...state, payload];\r\n      case ALERT_REMOVED:\r\n         return state.filter((alert) => alert.id !== payload);\r\n      case ALERT_REPLACED:\r\n         return state.map((item) =>\r\n            item.id === payload.oldId ? payload : item\r\n         );\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n               monthlyDebt: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2 && !payload.expired\r\n                  ? payload.value - (payload.value * 10) / 100\r\n                  : payload.expired\r\n                  ? Math.round(\r\n                       (payload.value * 0.90909 + Number.EPSILON) * 100\r\n                    ) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  console.log(item.expired);\r\n                  const value =\r\n                     item.number > 2 && !item.expired\r\n                        ? item.value - (item.value * 10) / 100\r\n                        : item.expired\r\n                        ? Math.round(\r\n                             (item.value * 0.90909 + Number.EPSILON) * 100\r\n                          ) / 100\r\n                        : item.value;\r\n\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: null,\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n      case PENALTY_REGISTERED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n         };\r\n      case PENALTY_CLEARED:\r\n         return initialState;\r\n      case PENALTY_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport penalties from \"./penalty\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   penalties,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport store from \"../utils/store\";\r\n\r\nimport { ALERT_REMOVED, ALERT_REPLACED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n\r\n      const exists = store.getState().alert.find((item) => item.msg === msg);\r\n\r\n      console.log(store.getState().alert);\r\n\r\n      if (exists) clearTimeout(exists.timer);\r\n\r\n      const timer = setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         5000\r\n      );\r\n\r\n      dispatch({\r\n         type: exists ? ALERT_REPLACED : ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n            ...(exists && { oldId: exists.id }),\r\n            timer,\r\n         },\r\n      });\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = () => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\");\r\n\r\n      const blob = await api.get(\"/backup/fetch\", {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || !info.students.some((item) => item.checked)) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  } ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.category} de ${info.teacher}`;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/money\");\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {users[teamNumber].type === \"admin&teacher\"\r\n                           ? `Director${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             } y Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : users[teamNumber].type === \"teacher\"\r\n                           ? `Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : `Secretari${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"o\"\r\n                             }`}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"search\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"classes\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let currentNav = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            switch (userLogged.type) {\r\n               case \"guardian\":\r\n                  if (path[3] !== \"0\")\r\n                     currentNav =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                  break;\r\n               case \"student\":\r\n                  if (enrollments.length > 0) {\r\n                     if (path[3] === \"0\") currentNav = \"class-\" + 0;\r\n                     else {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        currentNav = \"class-\" + index;\r\n                     }\r\n                  } else currentNav = \"index\";\r\n                  break;\r\n               default:\r\n                  currentNav = \"user\";\r\n                  break;\r\n            }\r\n         }\r\n\r\n         updateCurrentNav(currentNav, false);\r\n      }\r\n   }, [userLogged, updateCurrentNav, location.pathname, enrollments]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.percentage}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            {students.map((student, i) => (\n               <div className=\"student\" key={i}>\n                  <p className=\"name\">{student.name}</p>\n                  <input\n                     className=\"form-checkbox\"\n                     type=\"checkbox\"\n                     checked={student.checked}\n                     onChange={(e) => onChange(e, i)}\n                     name=\"student\"\n                     id={`cb${period}-${i}`}\n                  />\n                  <label\n                     className=\"checkbox-lbl\"\n                     id=\"check\"\n                     htmlFor={`cb${period}-${i}`}\n                  >\n                     {student.checked ? \"Si\" : \"No\"}\n                  </label>\n               </div>\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaCloudDownloadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert, createBackup }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark\">\n            Seleccione el backup que desea restaurar o descargue el actual\n         </h5>\n         <div className=\"form\">\n            <p className=\"text-lighter-primary restore-file\">\n               {selectedFile !== \"\" && (\n                  <>\n                     {selectedFile.name}\n                     <button\n                        type=\"button\"\n                        onClick={() =>\n                           setAdminValues((prev) => ({\n                              ...prev,\n                              selectedFile: \"\",\n                              fileIn: false,\n                           }))\n                        }\n                        className=\"btn-cancel\"\n                     >\n                        <FaTimes />\n                     </button>\n                  </>\n               )}\n            </p>\n            <div className=\"upl-img\">\n               <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n                  <input\n                     id=\"fileInput\"\n                     type=\"file\"\n                     name=\"image\"\n                     onChange={fileSelected}\n                     className=\"upload\"\n                  />\n                  <span>\n                     <FaCloudUploadAlt />\n                     &nbsp;Subir\n                  </span>\n               </div>\n               <button\n                  type=\"button\"\n                  onClick={createBackup}\n                  className=\"btn btn-secondary restore-btn\"\n               >\n                  <FaCloudDownloadAlt />\n                  &nbsp;Descargar\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup, createBackup } from \"../../../actions/global\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\nimport RestoreDB from \"./RestoreDB\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   createBackup,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info && info.students)\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: info.students.map((item) => {\r\n               return {\r\n                  ...item,\r\n                  name: item.lastname + \", \" + item.name,\r\n                  checked: false,\r\n               };\r\n            }),\r\n         }));\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return (\r\n               <RestoreDB\r\n                  onChange={onChangeBackup}\r\n                  createBackup={createBackup}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               <div\r\n                  className={popupType === \"certificate\" ? \"wrapper both\" : \"\"}\r\n               >\r\n                  {chooseType(popupType)}\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     switch (popupType) {\r\n                        case \"penalty\":\r\n                           confirm(penaltyPercentage);\r\n                           setPenaltyPercentage(\"\");\r\n                           break;\r\n                        case \"certificate\":\r\n                           confirm(certificate);\r\n                           setCertificate({ date: \"\", students: [] });\r\n                           break;\r\n                        case \"new-date\":\r\n                           confirm(newDate);\r\n                           setNewDate({ fromDate: \"\", toDate: \"\", date: \"\" });\r\n                           break;\r\n                        case \"new-grade\":\r\n                           confirm(newGradeType);\r\n                           setNewGradeType(\"\");\r\n                           break;\r\n                        case \"backup\":\r\n                           confirm(backup);\r\n                           setBackup(\"\");\r\n                           break;\r\n                        default:\r\n                           confirm();\r\n                           break;\r\n                     }\r\n                     if (!error) togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Aceptar\r\n               </button>\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   togglePopup,\r\n   setAlert,\r\n   createBackup,\r\n})(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.expired &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && !(!classInfo && !user.active) && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               {!loadingInstallments && installments.length > 0 && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Cuotas Pendientes\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={false}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && userLogged.type !== \"secretary\") getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, userLogged]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ teacher: user._id }, false);\r\n   }, [user._id, loadClasses, loading]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={false}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return <>{(isAdmin || !_id) && <TeacherDashboard user={user} />}</>;\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup();\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                           {isOwner && whenNull(user.salary) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Salario: </span>\r\n                                 {user.salary}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" && (\r\n                              <>\r\n                                 <div className=\"tooltip\">\r\n                                    <Link\r\n                                       to={\r\n                                          classInfo.year === year\r\n                                             ? `/class/edit/${classInfo._id}`\r\n                                             : \"#\"\r\n                                       }\r\n                                       className={`btn ${\r\n                                          classInfo.year === year\r\n                                             ? \"btn-mix-secondary\"\r\n                                             : \"btn-black\"\r\n                                       }`}\r\n                                       onClick={() => {\r\n                                          if (classInfo.year === year) {\r\n                                             window.scroll(0, 0);\r\n                                             clearSearch();\r\n                                          }\r\n                                       }}\r\n                                    >\r\n                                       <FaEdit />\r\n                                    </Link>\r\n                                    <span className=\"tooltiptext\">Editar</span>\r\n                                 </div>\r\n\r\n                                 <div className=\"tooltip\">\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTrashAlt />\r\n                                    </button>\r\n                                    <span className=\"tooltiptext\">\r\n                                       Eliminar\r\n                                    </span>\r\n                                 </div>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete.date,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances[i] &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"checkbox\"\r\n                                       checked={!row.inassistance}\r\n                                       className=\"option-input\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues({\r\n                                             ...adminValues,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row,\r\n                                          });\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students: students.slice(0, -1),\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades[i] &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"text\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                       value={row.value}\r\n                                       disabled={year !== classInfo.year}\r\n                                       placeholder=\"Nota\"\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row.gradetype._id,\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students:\r\n                                    year === classInfo.year\r\n                                       ? students.slice(0, -1)\r\n                                       : students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({ type, userType, salary, degree, school, onChange }) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isOwner && (\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={salary}\r\n                  name=\"salary\"\r\n                  id=\"salary\"\r\n                  placeholder=\"Salario por hora\"\r\n               />\r\n               <label htmlFor=\"salary\" className=\"form-label\">\r\n                  Salario por hora\r\n               </label>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      salary: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      salary,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               let oldUser = {};\r\n               for (const x in prev) {\r\n                  oldUser[x] = !user[x]\r\n                     ? prev[x]\r\n                     : x === \"dob\"\r\n                     ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                     : x === \"town\" || x === \"neighbourhood\"\r\n                     ? user[x]._id\r\n                     : user[x];\r\n               }\r\n               return {\r\n                  ...oldUser,\r\n                  discount: user.discount,\r\n                  active: user.active,\r\n               };\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (e.target.name !== \"dni\" || !isNaN(e.target.value)) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     salary={salary}\r\n                     school={school}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence/withdrawal?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Gasto/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Gasto Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF = (transactions, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (total)\r\n         await api.post(\"/pdf/expence/withdrawal-list\", {\r\n            transactions,\r\n            total,\r\n         });\r\n      else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n      const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   const confirm = () => {\r\n      if (!register) createRegister({ difference, description });\r\n      else closeRegister(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea cerrar la caja?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (!register || (register && register.temporary))\r\n                  togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Retiro de Dinero</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.withdrawal\r\n                           ? formatNumber(register.withdrawal)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/withdrawal/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Plata Caja</td>\r\n                     <td>\r\n                        ${register && formatNumber(register.registermoney)}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearRegisters();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  disabled={!register || (register && !register.temporary)}\r\n                  className={`btn ${\r\n                     (register && !register.temporary) || !register\r\n                        ? \"btn-black\"\r\n                        : \"btn-primary\"\r\n                  }`}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { setAlert } from \"../../../../../../../actions/alert\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../../sharedComp/Alert\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   togglePopup,\r\n   setAlert,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      hours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { hours, teacher, type } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         hours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name === \"teacher\"\r\n               ? users.find((user) => user._id === e.target.value)\r\n               : e.target.value,\r\n      }));\r\n\r\n      if (e.target.name === \"hours\") {\r\n         if (teacher.salary && teacher.salary !== \"\") {\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               value: e.target.value * teacher.salary,\r\n            }));\r\n         } else {\r\n            window.scroll(0, 0);\r\n            setAlert(\r\n               \"No está definido el salario del empleado seleccionado\",\r\n               \"danger\",\r\n               \"3\"\r\n            );\r\n         }\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            description: `${\r\n               expencetype === employeePaymentID && teacher._id\r\n                  ? `Pago a ${teacher.lastname}, ${teacher.name}. `\r\n                  : \"\"\r\n            }${description}`,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (register) togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Dinero en Caja</td>\r\n                     <td>\r\n                        ${register ? formatNumber(register.registermoney) : 0}\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Tipo de Movimiento</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de Movimiento\r\n                           </option>\r\n                           {expencetypes.map((expty) => (\r\n                              <option\r\n                                 key={expty._id}\r\n                                 name={expty.type}\r\n                                 value={expty._id}\r\n                              >\r\n                                 {expty.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value={0}>* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       {user.type !== \"admin&teacher\" && (\r\n                                          <option value={user._id}>\r\n                                             {user.lastname}, {user.name}\r\n                                          </option>\r\n                                       )}\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Horas</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder=\"Horas\"\r\n                                 value={hours}\r\n                                 name=\"hours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   setAlert,\r\n   togglePopup,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(addMonths(new Date(), 1), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            format(new Date(classInfo.hourin1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") &&\r\n            format(new Date(classInfo.hourout1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourout2), \"HH:mm\")\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: true }));\r\n\r\n         setFormData((prev) => {\r\n            let oldClass = {};\r\n            for (const x in prev) {\r\n               oldClass[x] = !classInfo[x]\r\n                  ? prev[x]\r\n                  : x.substring(0, 4) === \"hour\"\r\n                  ? format(\r\n                       new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                       \"HH:mm\"\r\n                    )\r\n                  : x === \"teacher\"\r\n                  ? classInfo[x]._id\r\n                  : classInfo[x];\r\n            }\r\n            return {\r\n               ...oldClass,\r\n            };\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/penalty\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   penalties: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(percentage) => updatePenalty({ percentage })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   penalties: state.penalties,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError, togglePopup } from \"./global\";\r\n\r\nimport {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/penalty/last\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearPenalty = () => (dispatch) => {\r\n   dispatch({\r\n      type: PENALTY_CLEARED,\r\n   });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      expired: false,\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, expired, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  let oldInstallment = {};\r\n                  for (const x in prev) {\r\n                     oldInstallment[x] = !installment[x]\r\n                        ? prev[x]\r\n                        : installment[x];\r\n                  }\r\n                  return {\r\n                     ...oldInstallment,\r\n                     number: installment.number,\r\n                     value: installment.value,\r\n                  };\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (student && year !== \"\" && loading) {\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loadEnrollments, year, loading]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...((number === \"1\" || number === \"2\") && {\r\n                        expired: true,\r\n                        updatable: false,\r\n                     }),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={expired}\r\n                        onChange={onChange}\r\n                        name=\"expired\"\r\n                        id=\"expired\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"expired\">\r\n                        {expired ? \"Vencida\" : \"Vigente\"}\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \" \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" && (\r\n               <Link\r\n                  to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                  onClick={() => {\r\n                     if (users.length !== 0) {\r\n                        window.scroll(0, 0);\r\n                        clearClass();\r\n                        clearSearch();\r\n                     }\r\n                  }}\r\n                  className={`btn ${\r\n                     users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                  }`}\r\n               >\r\n                  <FaPlus />\r\n                  &nbsp;Nueva Clase\r\n               </Link>\r\n            )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].filter((item) => !item.expired).length > 2\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Cl Pa,Ex Li,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() =>\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: installmentTotal - total,\r\n                  details: details.map((item) => {\r\n                     return {\r\n                        ...item,\r\n                        payment:\r\n                           typeof item.payment === \"number\"\r\n                              ? item.payment\r\n                              : Number(item.payment.replace(/,/g, \".\")),\r\n                     };\r\n                  }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          disabled={\r\n                                             install.discount !== undefined\r\n                                          }\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Gasto</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Gasto\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange, max }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               max={max}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n   }, [loading, loadInvoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Gasto\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadTransactions({}, true);\r\n   }, [loading, loadTransactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Movimientos</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"transactionType\"\r\n                  name=\"transactionType\"\r\n                  onChange={onChange}\r\n                  value={transactionType}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                  <option value=\"income\">Ingreso</option>\r\n                  <option value=\"expence\">Gasto</option>\r\n                  <option value=\"withdrawal\">Retiro</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${\r\n                     transactionType === \"\" ? \"lbl\" : \"\"\r\n                  }`}\r\n               >\r\n                  Tipo de Movimiento\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/enrollment\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   enrollments: {\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   installments: { installments, loading },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,,,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.expired ? \"installment\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() => installmentsPDF(installments)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst RegisterList = ({\r\n   auth: { userLogged },\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => deleteRegister(last._id)}\r\n            info=\"¿Está seguro que desea eliminar el cierre de caja?\"\r\n         />\r\n         <h2>Caja Diaria</h2>\r\n         {isAdmin && (\r\n            <div className=\"btn-right my-3\">\r\n               <Link\r\n                  to=\"/register/monthly-list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearRegisters();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n               </Link>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                     {!loadingRegister && !last.temporary && <th>&nbsp;</th>}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers[0] &&\r\n                     registers[0].temporary !== undefined &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           !register.temporary && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                                 {!loadingRegister && !last.temporary && (\r\n                                    <td>\r\n                                       {i === 0 && (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       )}\r\n                                    </td>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadWithdrawals({}, true);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n\r\n         <h4 className=\"m-1 heading-tertiary text-right\">\r\n            Total: ${formatNumber(total)}\r\n         </h4>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}