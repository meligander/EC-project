{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/mixvalues.js","reducers/invoice.js","reducers/enrollment.js","reducers/penalty.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/mixvalues.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","actions/register.js","actions/invoice.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","actions/penalty.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","estimatedProfit","penalty","observations","combineReducers","alert","state","action","type","payload","filter","id","auth","map","SingleClass","_id","item","category","students","student","monthlyDebt","expences","loadingTransactions","gradeType","detail","payment","details","mixvalues","nav","toggle","neighbourhood","penalties","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","time","dispatch","uuidv4","setTimeout","updateLoadingSpinner","bool","toggleMenu","togglePopup","updateCurrentNav","setError","response","userType","data","errors","statusText","status","formatNumber","number","Intl","NumberFormat","format","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","async","api","get","err","attendancesPDF","header","post","pdf","responseType","pdfBlob","Blob","saveAs","teacher","Date","window","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","scrollTo","clearGrades","clearGradeTypes","loadClass","res","loadClasses","classPDF","lastname","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","some","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","invoicesPDF","date","clearInvoice","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","findIndex","current","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","value","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","penaltyPercentage","setPenaltyPercentage","prev","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","Math","round","Number","EPSILON","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","adminValues","setAdminValues","toDelete","expired","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","otherUser","isOwner","public_id","studentnumber","guardian","secretary","admin","dni","toString","replace","cel","tel","address","dob","birthtown","birthprov","degree","school","salary","discount","chargeday","dashboardType","updateCredentials","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","find","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","console","log","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","auth_id","getStudentNumber","loadingTowns","previewSource","fileInputState","selectedFile","oldUser","isNaN","previewFile","file","reader","FileReader","readAsDataURL","onloadend","result","add","changeType","files","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadExpenceTypes","expenceType","transactionsPDF","total","clearExpenceTypes","closeRegister","createRegister","clearInvoices","clearTransactions","difference","withdrawal","registermoney","colSpan","registerExpence","expencetype","hours","options","selectedIndex","getAttribute","onChangeAdmin","expty","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","oldClass","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","oldInstallment","setfilterForm","InstallmentsSearchTab","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","newItem","onChangeValue","newDetails","reduce","accum","remaining","install","InvoiceTab","loadInvoice","invoice_id","sum","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","getMonth","month","c","EditButtons","save","updateTowns","deleteTown","newFormData","splice","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","loadInvoices","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","transaction","getEstimatedProfit","installmentsPDF","installmentName","debts","deleteRegister","register_id","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","loadWithdrawals","expT","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2365948.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//MixValues\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n\r\n//Penalty\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const PENALTY_REGISTERED = \"PENALTY_REGISTERED\";\r\nexport const PENALTY_CLEARED = \"PENALTY_CLEARED\";\r\nexport const PENALTY_ERROR = \"PENALTY_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\t\tcase ALERT_SETTED:\r\n\t\t\treturn [...state, payload];\r\n\t\tcase ALERT_REMOVED:\r\n\t\t\treturn state.filter((alert) => alert.id !== payload);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n               monthlyDebt: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n         };\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: null,\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n      case PENALTY_REGISTERED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n         };\r\n      case PENALTY_CLEARED:\r\n         return initialState;\r\n      case PENALTY_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport mixvalues from \"./mixvalues\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport penalties from \"./penalty\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   mixvalues,\r\n   neighbourhoods,\r\n   observations,\r\n   penalties,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { ALERT_REMOVED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, type = \"2\", time = 3000) => (\r\n   dispatch\r\n) => {\r\n   const id = uuidv4();\r\n   dispatch({\r\n      type: ALERT_SETTED,\r\n      payload: {\r\n         id,\r\n         alertType,\r\n         msg,\r\n         type,\r\n      },\r\n   });\r\n\r\n   setTimeout(\r\n      () =>\r\n         dispatch({\r\n            type: ALERT_REMOVED,\r\n            payload: id,\r\n         }),\r\n      time\r\n   );\r\n};\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n} from \"./types\";\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./mixvalues\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia de ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./mixvalues\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || info.students.length === 0) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  }  ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./mixvalues\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.teacher.lastname + \", \" + info.teacher.name} ${\r\n               info.category.name\r\n            } `;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./mixvalues\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./mixvalues\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/money\");\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\",\r\n               7000\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./mixvalues\";\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active) {\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\",\r\n            7000\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      dispatch({\r\n         type: USER_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./mixvalues\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { newObject, updateLoadingSpinner, setError } from \"./mixvalues\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/mixvalues\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {users[teamNumber].type === \"admin&teacher\"\r\n                           ? `Director${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             } y Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : users[teamNumber].type === \"teacher\"\r\n                           ? `Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : `Secretari${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"o\"\r\n                             }`}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ mixvalues: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ mixvalues: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ mixvalues: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/mixvalues\";\r\n\r\nconst GuestNavbar = ({\r\n   mixvalues: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./mixvalues\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./mixvalues\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/mixvalues\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   mixvalues: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/mixvalues\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   mixvalues: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   mixvalues: state.mixvalues,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/mixvalues\";\r\n\r\nconst TeacherNavbar = ({\r\n   mixvalues: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"search\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"classes\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/mixvalues\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   mixvalues: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/mixvalues\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   mixvalues: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let currentNav = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            switch (userLogged.type) {\r\n               case \"guardian\":\r\n                  if (path[3] !== \"0\")\r\n                     currentNav =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                  break;\r\n               case \"student\":\r\n                  if (enrollments.length > 0) {\r\n                     if (path[3] === \"0\") currentNav = \"class-\" + 0;\r\n                     else {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        currentNav = \"class-\" + index;\r\n                     }\r\n                  } else currentNav = \"index\";\r\n                  break;\r\n               default:\r\n                  currentNav = \"user\";\r\n                  break;\r\n            }\r\n         }\r\n\r\n         updateCurrentNav(currentNav, false);\r\n      }\r\n   }, [userLogged, updateCurrentNav, location.pathname, enrollments]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   mixvalues: state.mixvalues,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/mixvalues\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./mixvalues\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./mixvalues\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.percentage}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            {students.map((student, i) => (\n               <div className=\"student\" key={i}>\n                  <p className=\"name\">{student.name}</p>\n                  <input\n                     className=\"form-checkbox\"\n                     type=\"checkbox\"\n                     checked={student.checked}\n                     onChange={(e) => onChange(e, i)}\n                     name=\"student\"\n                     id={`cb${period}-${i}`}\n                  />\n                  <label\n                     className=\"checkbox-lbl\"\n                     id=\"check\"\n                     htmlFor={`cb${period}-${i}`}\n                  >\n                     {student.checked ? \"Si\" : \"No\"}\n                  </label>\n               </div>\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup } from \"../../../actions/mixvalues\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\n\r\nconst PopUp = ({\r\n   mixvalues: { popupType, popupToggle },\r\n   togglePopup,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info && info.students)\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: info.students.map((item) => {\r\n               return {\r\n                  ...item,\r\n                  name: item.lastname + \", \" + item.name,\r\n                  checked: false,\r\n               };\r\n            }),\r\n         }));\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <Alert type=\"4\" />\r\n            <div className={popupType === \"certificate\" ? \"wrapper both\" : \"\"}>\r\n               {chooseType(popupType)}\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     switch (popupType) {\r\n                        case \"penalty\":\r\n                           confirm(penaltyPercentage);\r\n                           setPenaltyPercentage(\"\");\r\n                           break;\r\n                        case \"certificate\":\r\n                           confirm(certificate);\r\n                           setCertificate({ date: \"\", students: [] });\r\n                           break;\r\n                        case \"new-date\":\r\n                           confirm(newDate);\r\n                           setNewDate({ fromDate: \"\", toDate: \"\", date: \"\" });\r\n                           break;\r\n                        case \"new-grade\":\r\n                           confirm(newGradeType);\r\n                           setNewGradeType(\"\");\r\n                           break;\r\n                        default:\r\n                           confirm();\r\n                           break;\r\n                     }\r\n                     if (!error) togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Aceptar\r\n               </button>\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps, { togglePopup })(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={() => deleteInstallment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la cuota?\"\r\n         />\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.expired &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && !loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && !loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && !loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               {!loadingInstallments && installments.length > 0 && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Cuotas Pendientes\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={false}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./mixvalues\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\", 7000)\r\n      );\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport { formatNumber } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGrades,\r\n}) => {\r\n   const date = new Date();\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\") getTotalDebt();\r\n   }, [totalDebt, getTotalDebt]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ teacher: user._id }, false);\r\n   }, [user._id, loadClasses, loading]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={false}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n   });\r\n\r\n   const { user } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return <>{(isAdmin || !_id) && <TeacherDashboard user={user} />}</>;\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={() => deleteUser(user)}\r\n                  info=\"¿Está seguro que desea eliminar el usuario?\"\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {user.dni && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           <p>\r\n                              <span className=\"text-dark\">Email: </span>\r\n                              {user.email}\r\n                           </p>\r\n                           <p>\r\n                              <span className=\"text-dark\">Celular: </span>\r\n                              {user.cel}\r\n                           </p>\r\n                           <p>\r\n                              <span className=\"text-dark\">Teléfono: </span>\r\n                              {user.tel}\r\n                           </p>\r\n                           {(user._id === userLogged._id || isAdmin) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.dob && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(user.birthtown || user.birthprov) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown ? user.birthprov + \", \" : \"\"\r\n                                 }${\r\n                                    user.birthprov === \".\"\r\n                                       ? user.birthprov\r\n                                       : user.birthprov\r\n                                 }`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Título: </span>\r\n                                    {user.degree}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       Institución:{\" \"}\r\n                                    </span>\r\n                                    {user.school}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                           {isOwner && user.salary && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Salario: </span>\r\n                                 {user.salary}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       Descuento:{\" \"}\r\n                                    </span>\r\n                                    {user.discount}%\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       Día recargo:{\" \"}\r\n                                    </span>\r\n                                    {user.chargeday}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/mixvalues\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\")\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob && type !== \"class-students\"\r\n                              ? years\r\n                              : format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(classInfo, \"class\");\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" && (\r\n                              <>\r\n                                 <div className=\"tooltip\">\r\n                                    <Link\r\n                                       to={\r\n                                          classInfo.year === year\r\n                                             ? `/class/edit/${classInfo._id}`\r\n                                             : \"#\"\r\n                                       }\r\n                                       className={`btn ${\r\n                                          classInfo.year === year\r\n                                             ? \"btn-mix-secondary\"\r\n                                             : \"btn-black\"\r\n                                       }`}\r\n                                       onClick={() => {\r\n                                          if (classInfo.year === year) {\r\n                                             window.scroll(0, 0);\r\n                                             clearSearch();\r\n                                          }\r\n                                       }}\r\n                                    >\r\n                                       <FaEdit />\r\n                                    </Link>\r\n                                    <span className=\"tooltiptext\">Editar</span>\r\n                                 </div>\r\n\r\n                                 <div className=\"tooltip\">\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTrashAlt />\r\n                                    </button>\r\n                                    <span className=\"tooltiptext\">\r\n                                       Eliminar\r\n                                    </span>\r\n                                 </div>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete.date,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances[i] &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"checkbox\"\r\n                                       checked={!row.inassistance}\r\n                                       className=\"option-input\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues({\r\n                                             ...adminValues,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row,\r\n                                          });\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students: students.slice(0, -1),\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades[i] &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"text\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                       value={row.value}\r\n                                       disabled={year !== classInfo.year}\r\n                                       placeholder=\"Nota\"\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row.gradetype,\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students:\r\n                                    year === classInfo.year\r\n                                       ? students.slice(0, -1)\r\n                                       : students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            { ...filterData, [e.target.name]: e.target.value, type: usersType },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({ type, userType, salary, degree, school, onChange }) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isOwner && (\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={salary}\r\n                  name=\"salary\"\r\n                  id=\"salary\"\r\n                  placeholder=\"Salario por hora\"\r\n               />\r\n               <label htmlFor=\"salary\" className=\"form-label\">\r\n                  Salario por hora\r\n               </label>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">30/31</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      salary: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      salary,\r\n      children,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               let oldUser = {};\r\n               for (const x in prev) {\r\n                  oldUser[x] = !user[x]\r\n                     ? prev[x]\r\n                     : x === \"dob\"\r\n                     ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                     : x === \"town\" || x === \"neighbourhood\"\r\n                     ? user[x]._id\r\n                     : user[x];\r\n               }\r\n               return {\r\n                  ...oldUser,\r\n                  discount: user.discount,\r\n                  active: user.active,\r\n               };\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      if (e.target.name !== \"dni\" || !isNaN(e.target.value)) {\r\n         setFormData({\r\n            ...formData,\r\n            [e.target.name]:\r\n               e.target.type === \"checkbox\" ? e.target.checked : e.target.value,\r\n            ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n         });\r\n         if (e.target.name === \"town\") loadNeighbourhoods(e.target.value, true);\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     salary={salary}\r\n                     school={school}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        children:\r\n                           type === \"guardian\"\r\n                              ? children.map((child) => child._id)\r\n                              : \"\",\r\n                        ...(selectedFile && { img: previewSource }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Celular\"\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular\r\n                        </label>\r\n                     </div>\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className=\"border mb-4\">\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right townNeigh\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./mixvalues\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence/withdrawal?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Gasto/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Gasto Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF = (transactions, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (total)\r\n         await api.post(\"/pdf/expence/withdrawal-list\", {\r\n            transactions,\r\n            total,\r\n         });\r\n      else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n      const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   const confirm = () => {\r\n      if (!register) createRegister({ difference, description });\r\n      else closeRegister(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea cerrar la caja?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (!register || (register && register.temporary))\r\n                  togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Retiro de Dinero</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.withdrawal\r\n                           ? formatNumber(register.withdrawal)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/withdrawal/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Plata Caja</td>\r\n                     <td>\r\n                        ${register && formatNumber(register.registermoney)}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearRegisters();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  disabled={!register || (register && !register.temporary)}\r\n                  className={`btn ${\r\n                     (register && !register.temporary) || !register\r\n                        ? \"btn-black\"\r\n                        : \"btn-primary\"\r\n                  }`}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { setAlert } from \"../../../../../../../actions/alert\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../../sharedComp/Alert\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   togglePopup,\r\n   setAlert,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      hours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { hours, teacher, type } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         hours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name === \"teacher\"\r\n               ? users.find((user) => user._id === e.target.value)\r\n               : e.target.value,\r\n      }));\r\n\r\n      if (e.target.name === \"hours\") {\r\n         if (teacher.salary && teacher.salary !== \"\") {\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               value: e.target.value * teacher.salary,\r\n            }));\r\n         } else {\r\n            window.scroll(0, 0);\r\n            setAlert(\r\n               \"No está definido el salario del empleado seleccionado\",\r\n               \"danger\",\r\n               \"3\"\r\n            );\r\n         }\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            description: `${\r\n               expencetype === employeePaymentID && teacher._id\r\n                  ? `Pago a ${teacher.lastname}, ${teacher.name}. `\r\n                  : \"\"\r\n            }${description}`,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (register) togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Dinero en Caja</td>\r\n                     <td>\r\n                        ${register ? formatNumber(register.registermoney) : 0}\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Tipo de Movimiento</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de Movimiento\r\n                           </option>\r\n                           {expencetypes.map((expty) => (\r\n                              <option\r\n                                 key={expty._id}\r\n                                 name={expty.type}\r\n                                 value={expty._id}\r\n                              >\r\n                                 {expty.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value={0}>* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       {user.type !== \"admin&teacher\" && (\r\n                                          <option value={user._id}>\r\n                                             {user.lastname}, {user.name}\r\n                                          </option>\r\n                                       )}\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Horas</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder=\"Horas\"\r\n                                 value={hours}\r\n                                 name=\"hours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   setAlert,\r\n   togglePopup,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(addMonths(new Date(), 1), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            format(new Date(classInfo.hourin1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") &&\r\n            format(new Date(classInfo.hourout1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourout2), \"HH:mm\")\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: true }));\r\n\r\n         setFormData((prev) => {\r\n            let oldClass = {};\r\n            for (const x in prev) {\r\n               oldClass[x] = !classInfo[x]\r\n                  ? prev[x]\r\n                  : x.substring(0, 4) === \"hour\"\r\n                  ? format(\r\n                       new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                       \"HH:mm\"\r\n                    )\r\n                  : x === \"teacher\"\r\n                  ? classInfo[x]._id\r\n                  : classInfo[x];\r\n            }\r\n            return {\r\n               ...oldClass,\r\n            };\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category: classInfo.category ? classInfo.category._id : \"\",\r\n                  students: classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp; {!loadingClass && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         {/* {console.log(student)} */}\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/penalty\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/mixvalues\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   penalties: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(percentage) => updatePenalty({ percentage })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   penalties: state.penalties,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError, togglePopup } from \"./mixvalues\";\r\n\r\nimport {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/penalty/last\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearPenalty = () => (dispatch) => {\r\n   dispatch({\r\n      type: PENALTY_CLEARED,\r\n   });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      expired: false,\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, expired, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  let oldInstallment = {};\r\n                  for (const x in prev) {\r\n                     oldInstallment[x] = !installment[x]\r\n                        ? prev[x]\r\n                        : installment[x];\r\n                  }\r\n                  return {\r\n                     ...oldInstallment,\r\n                     number: installment.number,\r\n                     value: installment.value,\r\n                  };\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (student && year !== \"\" && loading) {\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loadEnrollments, year, loading]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <React.Fragment key={index}>\r\n               {item !== \"\" && <option value={index}>{item}</option>}\r\n            </React.Fragment>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === 1 ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  type=\"checkbox\"\r\n                  checked={expired}\r\n                  onChange={onChange}\r\n                  name=\"expired\"\r\n                  id=\"expired\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"expired\">\r\n                  {expired ? \"Vencida\" : \"Vigente\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  type=\"checkbox\"\r\n                  checked={updatable}\r\n                  onChange={onChange}\r\n                  name=\"updatable\"\r\n                  id=\"updatable\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                  {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \" \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" && (\r\n               <Link\r\n                  to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                  onClick={() => {\r\n                     if (users.length !== 0) {\r\n                        window.scroll(0, 0);\r\n                        clearClass();\r\n                        clearSearch();\r\n                     }\r\n                  }}\r\n                  className={`btn ${\r\n                     users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                  }`}\r\n               >\r\n                  <FaPlus />\r\n                  &nbsp;Nueva Clase\r\n               </Link>\r\n            )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useState } from \"react\";\n\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = () => {\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   return (\n      <div className=\"mt-4\">\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nexport default InstallmentsSearchTab;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/mixvalues\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      day: format(new Date(), \"dd/MM/yyyy\"),\r\n      toDelete: \"\",\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment = \"Insc,,,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\r\n      \",\"\r\n   );\r\n\r\n   const { invoiceid, details, total, user } = formData;\r\n\r\n   const { day, installmentTotal, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         if (invoice.details.length > details.length) {\r\n            const newItem = invoice.details[invoice.details.length - 1];\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               details: [...prev.details, newItem],\r\n            }));\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               installmentTotal: prev.installmentTotal + newItem.value,\r\n            }));\r\n         } else if (invoice.details.length < details.length) {\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               total: prev.total - toDelete.payment,\r\n               details: prev.details.filter(\r\n                  (detail) => detail.installment !== toDelete.installment\r\n               ),\r\n            }));\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               toDelete: \"\",\r\n               installmentTotal: prev.installmentTotal - toDelete.value,\r\n            }));\r\n         }\r\n      }\r\n   }, [invoice, invoiceid, details.length, toDelete]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) => accum + Number(item.payment.replace(/,/g, \".\")),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, user }));\r\n   };\r\n\r\n   const removeItem = (item) => {\r\n      removeDetail(item);\r\n      setAdminValues((prev) => ({ ...prev, toDelete: item }));\r\n   };\r\n\r\n   const confirm = () => {\r\n      registerInvoice({\r\n         ...formData,\r\n         remaining: installmentTotal - total,\r\n         details: details.map((item) => {\r\n            return {\r\n               ...item,\r\n               payment: Number(item.payment.replace(/,/g, \".\")),\r\n            };\r\n         }),\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={selectUser}\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeItem(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"\",\r\n      \"\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email = invoice.user.user_id\r\n            ? invoice.user.user_id.email\r\n            : invoice.user.email\r\n            ? invoice.user.email\r\n            : \"\";\r\n         const cel = invoice.user.user_id\r\n            ? invoice.user.user_id.cel\r\n            : invoice.user.cel\r\n            ? invoice.user.cel\r\n            : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/mixvalues\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student._id,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Gasto</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Gasto\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange, max }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               max={max}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   auth: { userLogged },\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n   }, [loading, loadInvoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {isAdmin &&\r\n                           invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {isAdmin &&\r\n                                    arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Gasto\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadTransactions({}, true);\r\n   }, [loading, loadTransactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Movimientos</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"transactionType\"\r\n                  name=\"transactionType\"\r\n                  onChange={onChange}\r\n                  value={transactionType}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                  <option value=\"income\">Ingreso</option>\r\n                  <option value=\"expence\">Gasto</option>\r\n                  <option value=\"withdrawal\">Retiro</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${\r\n                     transactionType === \"\" ? \"lbl\" : \"\"\r\n                  }`}\r\n               >\r\n                  Tipo de Movimiento\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/enrollment\";\r\nimport { formatNumber } from \"../../../../../../actions/mixvalues\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   enrollments: {\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   installments: { installments, loading },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,,,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: installments.reduce(\r\n               (sum, installment) => sum + installment.value,\r\n               0\r\n            ),\r\n         }));\r\n   }, [installments, loading, loadInstallments]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\") getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         <p className=\"heading-tertiary text-moved-right\">\r\n            Total: ${formatNumber(total)}\r\n         </p>\r\n         {isAdmin && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n            </p>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.expired ? \"installment\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() =>\r\n                  installmentsPDF({ debts: installments, total })\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/mixvalues\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst RegisterList = ({\r\n   auth: { userLogged },\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => deleteRegister(last._id)}\r\n            info=\"¿Está seguro que desea eliminar el cierre de caja?\"\r\n         />\r\n         <h2>Caja Diaria</h2>\r\n         {isAdmin && (\r\n            <div className=\"btn-right my-3\">\r\n               <Link\r\n                  to=\"/register/monthly-list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearRegisters();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n               </Link>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                     {isAdmin && !loadingRegister && !last.temporary && (\r\n                        <th>&nbsp;</th>\r\n                     )}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers[0] &&\r\n                     registers[0].temporary !== undefined &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           !register.temporary && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                                 {!loadingRegister &&\r\n                                    !last.temporary &&\r\n                                    isAdmin && (\r\n                                       <td>\r\n                                          {i === 0 && (\r\n                                             <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={(e) => {\r\n                                                   e.preventDefault();\r\n                                                   togglePopup(\"default\");\r\n                                                }}\r\n                                             >\r\n                                                <FaTrashAlt />\r\n                                             </button>\r\n                                          )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/mixvalues\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadWithdrawals({}, true);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n\r\n         <h4 className=\"m-1 heading-tertiary text-right\">\r\n            Total: ${formatNumber(total)}\r\n         </h4>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/mixvalues\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, mixvalues: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   mixvalues: state.mixvalues,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, mixvalues: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   mixvalues: state.mixvalues,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}