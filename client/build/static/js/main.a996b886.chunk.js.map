{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/penalty.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","actions/register.js","actions/invoice.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","actions/penalty.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","estimatedProfit","penalty","observations","combineReducers","alert","state","action","type","payload","filter","id","map","item","oldId","auth","SingleClass","_id","category","students","student","monthlyDebt","expences","loadingTransactions","gradeType","value","studentsD","some","number","expired","Math","round","Number","EPSILON","detail","payment","discount","details","console","log","global","nav","toggle","neighbourhood","penalties","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","exists","find","clearTimeout","timer","setTimeout","updateLoadingSpinner","bool","createBackup","local","async","res","api","post","blob","get","responseType","saveAs","Blob","data","format","Date","togglePopup","window","scrollTo","err","response","status","setError","toggleMenu","updateCurrentNav","userType","errors","statusText","formatNumber","Intl","NumberFormat","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","attendancesPDF","header","pdf","pdfBlob","teacher","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","clearGrades","clearGradeTypes","loadClass","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","invoicesPDF","date","clearInvoice","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","findIndex","current","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","files","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","penaltyPercentage","setPenaltyPercentage","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","onChangeBackup","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","toDelete","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","public_id","studentnumber","guardian","secretary","admin","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","salary","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","oldUser","isNaN","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadExpenceTypes","expenceType","transactionsPDF","total","clearExpenceTypes","closeRegister","createRegister","clearInvoices","clearTransactions","difference","withdrawal","registermoney","colSpan","registerExpence","expencetype","hours","options","selectedIndex","getAttribute","onChangeAdmin","expty","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","oldClass","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","oldInstallment","setfilterForm","addDiscount","reduce","curr","assign","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","sum","onChangeValue","newDetails","accum","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","getMonth","month","c","EditButtons","save","updateTowns","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","loadInvoices","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","transaction","getEstimatedProfit","installmentsPDF","installmentName","deleteRegister","register_id","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","loadWithdrawals","expT","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a996b886.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REPLACED = \"ALERT_REPLACED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n\r\n//Penalty\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const PENALTY_REGISTERED = \"PENALTY_REGISTERED\";\r\nexport const PENALTY_CLEARED = \"PENALTY_CLEARED\";\r\nexport const PENALTY_ERROR = \"PENALTY_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED, ALERT_REPLACED } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ALERT_SETTED:\r\n         return [...state, payload];\r\n      case ALERT_REMOVED:\r\n         return state.filter((alert) => alert.id !== payload);\r\n      case ALERT_REPLACED:\r\n         return state.map((item) =>\r\n            item.id === payload.oldId ? payload : item\r\n         );\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n               monthlyDebt: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2 && !payload.expired\r\n                  ? payload.value - (payload.value * 10) / 100\r\n                  : payload.expired\r\n                  ? Math.round(\r\n                       (payload.value * 0.90909 + Number.EPSILON) * 100\r\n                    ) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  console.log(item.expired);\r\n                  const value =\r\n                     item.number > 2 && !item.expired\r\n                        ? item.value - (item.value * 10) / 100\r\n                        : item.expired\r\n                        ? Math.round(\r\n                             (item.value * 0.90909 + Number.EPSILON) * 100\r\n                          ) / 100\r\n                        : item.value;\r\n\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: null,\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n      case PENALTY_REGISTERED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n         };\r\n      case PENALTY_CLEARED:\r\n         return initialState;\r\n      case PENALTY_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport penalties from \"./penalty\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   penalties,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport store from \"../utils/store\";\r\n\r\nimport { ALERT_REMOVED, ALERT_REPLACED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n\r\n      const exists = store.getState().alert.find((item) => item.msg === msg);\r\n\r\n      if (exists) clearTimeout(exists.timer);\r\n\r\n      const timer = setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         5000\r\n      );\r\n\r\n      dispatch({\r\n         type: exists ? ALERT_REPLACED : ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n            ...(exists && { oldId: exists.id }),\r\n            timer,\r\n         },\r\n      });\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = (local) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\", { local });\r\n\r\n      const blob = await api.get(`/backup/fetch${local ? \"?local=true\" : \"\"}`, {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      if (local) dispatch(togglePopup(\"default\"));\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || !info.students.some((item) => item.checked)) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  } ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.category} de ${info.teacher}`;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/money\");\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {users[teamNumber].type === \"admin&teacher\"\r\n                           ? `Director${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             } y Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : users[teamNumber].type === \"teacher\"\r\n                           ? `Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : `Secretari${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"o\"\r\n                             }`}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"search\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"classes\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let currentNav = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            switch (userLogged.type) {\r\n               case \"guardian\":\r\n                  if (path[3] !== \"0\")\r\n                     currentNav =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                  break;\r\n               case \"student\":\r\n                  if (enrollments.length > 0) {\r\n                     if (path[3] === \"0\") currentNav = \"class-\" + 0;\r\n                     else {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        currentNav = \"class-\" + index;\r\n                     }\r\n                  } else currentNav = \"index\";\r\n                  break;\r\n               default:\r\n                  currentNav = \"user\";\r\n                  break;\r\n            }\r\n         }\r\n\r\n         updateCurrentNav(currentNav, false);\r\n      }\r\n   }, [userLogged, updateCurrentNav, location.pathname, enrollments]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.percentage}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            {students.map((student, i) => (\n               <div className=\"student\" key={i}>\n                  <p className=\"name\">{student.name}</p>\n                  <input\n                     className=\"form-checkbox\"\n                     type=\"checkbox\"\n                     checked={student.checked}\n                     onChange={(e) => onChange(e, i)}\n                     name=\"student\"\n                     id={`cb${period}-${i}`}\n                  />\n                  <label\n                     className=\"checkbox-lbl\"\n                     id=\"check\"\n                     htmlFor={`cb${period}-${i}`}\n                  >\n                     {student.checked ? \"Si\" : \"No\"}\n                  </label>\n               </div>\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaCloudDownloadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert, createBackup }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark\">\n            Seleccione el backup que desea restaurar o descargue el actual\n         </h5>\n         <div className=\"form\">\n            <p className=\"text-lighter-primary restore-file\">\n               {selectedFile !== \"\" && (\n                  <>\n                     {selectedFile.name}\n                     <button\n                        type=\"button\"\n                        onClick={() =>\n                           setAdminValues((prev) => ({\n                              ...prev,\n                              selectedFile: \"\",\n                              fileIn: false,\n                           }))\n                        }\n                        className=\"btn-cancel\"\n                     >\n                        <FaTimes />\n                     </button>\n                  </>\n               )}\n            </p>\n            <div className=\"upl-img\">\n               <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n                  <input\n                     id=\"fileInput\"\n                     type=\"file\"\n                     name=\"image\"\n                     onChange={fileSelected}\n                     className=\"upload\"\n                  />\n                  <span>\n                     <FaCloudUploadAlt />\n                     &nbsp;Subir\n                  </span>\n               </div>\n               <button\n                  type=\"button\"\n                  onClick={() => createBackup(true)}\n                  className=\"btn btn-secondary restore-btn\"\n               >\n                  <FaCloudDownloadAlt />\n                  &nbsp;Descargar\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup, createBackup } from \"../../../actions/global\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\nimport RestoreDB from \"./RestoreDB\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   createBackup,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info && info.students)\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: info.students.map((item) => {\r\n               return {\r\n                  ...item,\r\n                  name: item.lastname + \", \" + item.name,\r\n                  checked: false,\r\n               };\r\n            }),\r\n         }));\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return (\r\n               <RestoreDB\r\n                  onChange={onChangeBackup}\r\n                  createBackup={createBackup}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               <div\r\n                  className={popupType === \"certificate\" ? \"wrapper both\" : \"\"}\r\n               >\r\n                  {chooseType(popupType)}\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     switch (popupType) {\r\n                        case \"penalty\":\r\n                           confirm(penaltyPercentage);\r\n                           setPenaltyPercentage(\"\");\r\n                           break;\r\n                        case \"certificate\":\r\n                           confirm(certificate);\r\n                           setCertificate({ date: \"\", students: [] });\r\n                           break;\r\n                        case \"new-date\":\r\n                           confirm(newDate);\r\n                           setNewDate({ fromDate: \"\", toDate: \"\", date: \"\" });\r\n                           break;\r\n                        case \"new-grade\":\r\n                           confirm(newGradeType);\r\n                           setNewGradeType(\"\");\r\n                           break;\r\n                        case \"backup\":\r\n                           confirm(backup);\r\n                           setBackup(\"\");\r\n                           break;\r\n                        default:\r\n                           confirm();\r\n                           break;\r\n                     }\r\n                     if (!error) togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Aceptar\r\n               </button>\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   togglePopup,\r\n   setAlert,\r\n   createBackup,\r\n})(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.expired &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && !(!classInfo && !user.active) && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               {!loadingInstallments && installments.length > 0 && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Cuotas Pendientes\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={false}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && userLogged.type !== \"secretary\") getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, userLogged]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ teacher: user._id }, false);\r\n   }, [user._id, loadClasses, loading]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={false}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return <>{(isAdmin || !_id) && <TeacherDashboard user={user} />}</>;\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup(false);\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                           {isOwner && whenNull(user.salary) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Salario: </span>\r\n                                 {user.salary}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" && (\r\n                              <>\r\n                                 <div className=\"tooltip\">\r\n                                    <Link\r\n                                       to={\r\n                                          classInfo.year === year\r\n                                             ? `/class/edit/${classInfo._id}`\r\n                                             : \"#\"\r\n                                       }\r\n                                       className={`btn ${\r\n                                          classInfo.year === year\r\n                                             ? \"btn-mix-secondary\"\r\n                                             : \"btn-black\"\r\n                                       }`}\r\n                                       onClick={() => {\r\n                                          if (classInfo.year === year) {\r\n                                             window.scroll(0, 0);\r\n                                             clearSearch();\r\n                                          }\r\n                                       }}\r\n                                    >\r\n                                       <FaEdit />\r\n                                    </Link>\r\n                                    <span className=\"tooltiptext\">Editar</span>\r\n                                 </div>\r\n\r\n                                 <div className=\"tooltip\">\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTrashAlt />\r\n                                    </button>\r\n                                    <span className=\"tooltiptext\">\r\n                                       Eliminar\r\n                                    </span>\r\n                                 </div>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete.date,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances[i] &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"checkbox\"\r\n                                       checked={!row.inassistance}\r\n                                       className=\"option-input\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues({\r\n                                             ...adminValues,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row,\r\n                                          });\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students: students.slice(0, -1),\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades[i] &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"text\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                       value={row.value}\r\n                                       disabled={year !== classInfo.year}\r\n                                       placeholder=\"Nota\"\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row.gradetype._id,\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students:\r\n                                    year === classInfo.year\r\n                                       ? students.slice(0, -1)\r\n                                       : students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({ type, userType, salary, degree, school, onChange }) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isOwner && (\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={salary}\r\n                  name=\"salary\"\r\n                  id=\"salary\"\r\n                  placeholder=\"Salario por hora\"\r\n               />\r\n               <label htmlFor=\"salary\" className=\"form-label\">\r\n                  Salario por hora\r\n               </label>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      salary: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      salary,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               let oldUser = {};\r\n               for (const x in prev) {\r\n                  oldUser[x] = !user[x]\r\n                     ? prev[x]\r\n                     : x === \"dob\"\r\n                     ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                     : x === \"town\" || x === \"neighbourhood\"\r\n                     ? user[x]._id\r\n                     : user[x];\r\n               }\r\n               return {\r\n                  ...oldUser,\r\n                  discount: user.discount,\r\n                  active: user.active,\r\n               };\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (e.target.name !== \"dni\" || !isNaN(e.target.value)) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     salary={salary}\r\n                     school={school}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence/withdrawal?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Gasto/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Gasto Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF = (transactions, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (total)\r\n         await api.post(\"/pdf/expence/withdrawal-list\", {\r\n            transactions,\r\n            total,\r\n         });\r\n      else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n      const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   const confirm = () => {\r\n      if (!register) createRegister({ difference, description });\r\n      else closeRegister(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea cerrar la caja?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (!register || (register && register.temporary))\r\n                  togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Retiro de Dinero</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.withdrawal\r\n                           ? formatNumber(register.withdrawal)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/withdrawal/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Plata Caja</td>\r\n                     <td>\r\n                        ${register && formatNumber(register.registermoney)}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearRegisters();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  disabled={!register || (register && !register.temporary)}\r\n                  className={`btn ${\r\n                     (register && !register.temporary) || !register\r\n                        ? \"btn-black\"\r\n                        : \"btn-primary\"\r\n                  }`}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { setAlert } from \"../../../../../../../actions/alert\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../../sharedComp/Alert\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   togglePopup,\r\n   setAlert,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      hours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { hours, teacher, type } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         hours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name === \"teacher\"\r\n               ? users.find((user) => user._id === e.target.value)\r\n               : e.target.value,\r\n      }));\r\n\r\n      if (e.target.name === \"hours\") {\r\n         if (teacher.salary && teacher.salary !== \"\") {\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               value: e.target.value * teacher.salary,\r\n            }));\r\n         } else {\r\n            window.scroll(0, 0);\r\n            setAlert(\r\n               \"No está definido el salario del empleado seleccionado\",\r\n               \"danger\",\r\n               \"3\"\r\n            );\r\n         }\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            description: `${\r\n               expencetype === employeePaymentID && teacher._id\r\n                  ? `Pago a ${teacher.lastname}, ${teacher.name}. `\r\n                  : \"\"\r\n            }${description}`,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (register) togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Dinero en Caja</td>\r\n                     <td>\r\n                        ${register ? formatNumber(register.registermoney) : 0}\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Tipo de Movimiento</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de Movimiento\r\n                           </option>\r\n                           {expencetypes.map((expty) => (\r\n                              <option\r\n                                 key={expty._id}\r\n                                 name={expty.type}\r\n                                 value={expty._id}\r\n                              >\r\n                                 {expty.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value={0}>* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       {user.type !== \"admin&teacher\" && (\r\n                                          <option value={user._id}>\r\n                                             {user.lastname}, {user.name}\r\n                                          </option>\r\n                                       )}\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Horas</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder=\"Horas\"\r\n                                 value={hours}\r\n                                 name=\"hours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   setAlert,\r\n   togglePopup,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(addMonths(new Date(), 1), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            format(new Date(classInfo.hourin1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") &&\r\n            format(new Date(classInfo.hourout1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourout2), \"HH:mm\")\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: true }));\r\n\r\n         setFormData((prev) => {\r\n            let oldClass = {};\r\n            for (const x in prev) {\r\n               oldClass[x] = !classInfo[x]\r\n                  ? prev[x]\r\n                  : x.substring(0, 4) === \"hour\"\r\n                  ? format(\r\n                       new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                       \"HH:mm\"\r\n                    )\r\n                  : x === \"teacher\"\r\n                  ? classInfo[x]._id\r\n                  : classInfo[x];\r\n            }\r\n            return {\r\n               ...oldClass,\r\n            };\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/penalty\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   penalties: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(percentage) => updatePenalty({ percentage })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   penalties: state.penalties,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError, togglePopup } from \"./global\";\r\n\r\nimport {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/penalty/last\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearPenalty = () => (dispatch) => {\r\n   dispatch({\r\n      type: PENALTY_CLEARED,\r\n   });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      expired: false,\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, expired, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  let oldInstallment = {};\r\n                  for (const x in prev) {\r\n                     oldInstallment[x] = !installment[x]\r\n                        ? prev[x]\r\n                        : installment[x];\r\n                  }\r\n                  return {\r\n                     ...oldInstallment,\r\n                     number: installment.number,\r\n                     value: installment.value,\r\n                  };\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (student && year !== \"\" && loading) {\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loadEnrollments, year, loading]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...((number === \"1\" || number === \"2\") && {\r\n                        expired: true,\r\n                        updatable: false,\r\n                     }),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={expired}\r\n                        onChange={onChange}\r\n                        name=\"expired\"\r\n                        id=\"expired\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"expired\">\r\n                        {expired ? \"Vencida\" : \"Vigente\"}\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \" \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" && (\r\n               <Link\r\n                  to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                  onClick={() => {\r\n                     if (users.length !== 0) {\r\n                        window.scroll(0, 0);\r\n                        clearClass();\r\n                        clearSearch();\r\n                     }\r\n                  }}\r\n                  className={`btn ${\r\n                     users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                  }`}\r\n               >\r\n                  <FaPlus />\r\n                  &nbsp;Nueva Clase\r\n               </Link>\r\n            )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].filter((item) => !item.expired).length > 2\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Cl Pa,Ex Li,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() =>\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: installmentTotal - total,\r\n                  details: details.map((item) => {\r\n                     return {\r\n                        ...item,\r\n                        payment:\r\n                           typeof item.payment === \"number\"\r\n                              ? item.payment\r\n                              : Number(item.payment.replace(/,/g, \".\")),\r\n                     };\r\n                  }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          disabled={\r\n                                             install.discount !== undefined\r\n                                          }\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Gasto</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Gasto\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange, max }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               max={max}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n   }, [loading, loadInvoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Gasto\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadTransactions({}, true);\r\n   }, [loading, loadTransactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Movimientos</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"transactionType\"\r\n                  name=\"transactionType\"\r\n                  onChange={onChange}\r\n                  value={transactionType}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                  <option value=\"income\">Ingreso</option>\r\n                  <option value=\"expence\">Gasto</option>\r\n                  <option value=\"withdrawal\">Retiro</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${\r\n                     transactionType === \"\" ? \"lbl\" : \"\"\r\n                  }`}\r\n               >\r\n                  Tipo de Movimiento\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/enrollment\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   enrollments: {\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   installments: { installments, loading },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,,,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.expired ? \"installment\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() => installmentsPDF(installments)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst RegisterList = ({\r\n   auth: { userLogged },\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => deleteRegister(last._id)}\r\n            info=\"¿Está seguro que desea eliminar el cierre de caja?\"\r\n         />\r\n         <h2>Caja Diaria</h2>\r\n         {isAdmin && (\r\n            <div className=\"btn-right my-3\">\r\n               <Link\r\n                  to=\"/register/monthly-list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearRegisters();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n               </Link>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                     {!loadingRegister && !last.temporary && <th>&nbsp;</th>}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers[0] &&\r\n                     registers[0].temporary !== undefined &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           !register.temporary && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                                 {!loadingRegister && !last.temporary && (\r\n                                    <td>\r\n                                       {i === 0 && (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       )}\r\n                                    </td>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadWithdrawals({}, true);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n\r\n         <h4 className=\"m-1 heading-tertiary text-right\">\r\n            Total: ${formatNumber(total)}\r\n         </h4>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}