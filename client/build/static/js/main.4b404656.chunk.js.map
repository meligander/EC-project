{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/daily.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/register.js","actions/invoice.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/InvoiceList/index.js","components/modal/PopUp/Salaries/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/Help/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","actions/daily.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/ExpenceList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/pages/registered/admin/lists/WithdrawalXMonthList/index.js","components/pages/registered/admin/lists/DailyList/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","teacherHours","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","estimatedProfit","towns","dailies","neighbourhoods","register","loadingRegister","registers","categories","expence","loadingExpence","expences","expencetypes","loadingET","penalty","discount","salaries","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","month","Date","getMonth","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","observations","combineReducers","alert","state","action","type","payload","filter","id","map","item","oldId","auth","SingleClass","_id","category","students","student","daily","gradeType","details","some","value","studentsD","number","status","Intl","NumberFormat","format","Math","floor","Number","EPSILON","round","detail","payment","added","global","nav","toggle","neighbourhood","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","exists","find","clearTimeout","timer","setTimeout","loadDiscount","async","api","get","data","err","response","setError","window","scrollTo","createBackup","local","updateLoadingSpinner","res","post","blob","responseType","saveAs","Blob","togglePopup","clearGlobals","bool","toggleMenu","updateCurrentNav","userType","errors","statusText","formatNumber","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","attendancesPDF","header","pdf","pdfBlob","teacher","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","clearGrades","clearGradeTypes","loadClass","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","loadInvoices","invoicesPDF","date","clearInvoice","clearInvoices","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","current","findIndex","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","oldPenalty","oldDiscount","values","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","files","InvoiceList","total","Salaries","lowerSalary","higherSalary","adminSalary","classManagerSalary","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","setSalaries","setValues","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangeValues","isNaN","onChangeBackup","onChangeSalary","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","percentage","kinderGraden","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","dash","toDelete","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","studentId","public_id","studentnumber","guardian","secretary","admin","classManager","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","cbvu","alias","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","usersAdmin","setUsersAdmin","registerUser","editUser","credentials","search","uploadImage","inactivateUser","enrollAdmin","setEnrollAdmin","enroll","editEnroll","deleteEnroll","printEnroll","classAdmin","setClassAdmin","registerClass","editClass","printClass","addGrades","printGrades","printCertificates","updateGradeType","updateAttendance","printAttendances","reportCard","installAdmin","setInstallAdmin","editInstall","printInstall","deleteInstall","categoriesAdmin","setCategoriesAdmin","editCategories","printCategories","registerAdmin","setRegisterAdmin","closeRegister","balanceRegister","addExpences","printIncome","printExpences","printWithdrawals","printMonthWithdrawals","printTransactions","printMonthTransactions","updateTransactionType","otherAdmin","setOtherAdmin","updateSalaries","updateDiscount","updateTowns","mentions","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","includes","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadWithdrawals","loadExpenceTypes","expenceType","deleteExpence","expence_id","expencesPDF","clearExpenceTypes","clearExpences","clearDailies","createRegister","deleteRegister","register_id","difference","withdrawal","registermoney","colSpan","registerExpence","getTeacherHours","teacher_id","expencetype","highHours","lowHours","isTeacher","options","selectedIndex","getAttribute","onChangeAdmin","newTeacher","allSalaries","expty","loadSalaries","loadingSalaries","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","loadingDiscount","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updateValues","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","setfilterForm","addDiscount","reduce","curr","assign","registerInvoice","fullName","removeDetail","payCash","payTransfer","installmentTotal","totalDiscount","cash","invoiceid","sum","onChangeValue","newDetails","accum","fullDiscount","fullTotal","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","c","EditButtons","save","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","deleteInvoice","arr","setName","loadExpences","getEstimatedProfit","installmentsPDF","installmentName","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","expT","index1","loadDailies","registerDaily","deleteDaily","daily_id","dailyPDF","lastRegister","box","envelope","home","bank","change","getNumber","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Help","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","ExpenceList","DailyList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","WithdrawalXMonthList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b404656.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REPLACED = \"ALERT_REPLACED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const GLOBAL_CLEARED = \"GLOBAL_CLEARED\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const DISCOUNT_LOADED = \"DISCOUNT_LOADED\";\r\nexport const SALARIES_LOADED = \"SALARIES_LOADED\";\r\nexport const VALUES_UPDATED = \"VALUES_UPDATED\";\r\nexport const SALARIES_UPDATED = \"SALARIES_UPDATED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const TEACHERHOURS_LOADED = \"TEACHERHOURS_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Daily\r\nexport const DAILIES_LOADED = \"DAILIES_LOADED\";\r\nexport const DAILY_REGISTERED = \"DAILY_REGISTERED\";\r\nexport const DAILY_DELETED = \"DAILY_DELETED\";\r\nexport const DAILIES_CLEARED = \"DAILIES_CLEARED\";\r\nexport const DAILY_ERROR = \"DAILY_ERROR\";\r\nexport const DAILIES_ERROR = \"DAILIES_ERROR\";\r\nexport const DAILIES_PDF_ERROR = \"DAILIES_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const EXPENCES_LOADED = \"EXPENCES_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const EXPENCES_CLEARED = \"EXPENCES_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const EXPENCES_ERROR = \"EXPENCES_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const PAY_CASH = \"PAY_CASH\";\r\nexport const PAY_TRANSFER = \"PAY_TRANSFER\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED, ALERT_REPLACED } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ALERT_SETTED:\r\n         return [...state, payload];\r\n      case ALERT_REMOVED:\r\n         return state.filter((alert) => alert.id !== payload);\r\n      case ALERT_REPLACED:\r\n         return state.map((item) =>\r\n            item.id === payload.oldId ? payload : item\r\n         );\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n   TEACHERHOURS_LOADED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n      teacherHours: {},\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case TEACHERHOURS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               teacherHours: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n               teacherHours: {},\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n               teacherHours: {},\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   DAILIES_CLEARED,\n   DAILIES_ERROR,\n   DAILIES_LOADED,\n   DAILIES_PDF_ERROR,\n   DAILY_DELETED,\n   DAILY_ERROR,\n   DAILY_REGISTERED,\n} from \"../actions/types\";\n\nconst initialState = {\n   dailies: [],\n   loading: true,\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n\n   switch (type) {\n      case DAILIES_LOADED:\n         return {\n            ...state,\n            loading: false,\n            dailies: payload,\n            error: {},\n         };\n      case DAILY_REGISTERED:\n         return {\n            ...state,\n            dailies: [payload, ...state.dailies],\n         };\n      case DAILY_DELETED:\n         return {\n            ...state,\n            dailies: state.dailies.filter((daily) => daily._id !== payload),\n         };\n      case DAILIES_CLEARED:\n         return {\n            ...state,\n            dailies: [],\n            loading: true,\n            error: {},\n         };\n      case DAILY_ERROR:\n      case DAILIES_PDF_ERROR:\n         return { ...state, error: payload };\n      case DAILIES_ERROR:\n         return {\n            ...state,\n            dailies: [],\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   EXPENCES_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   EXPENCES_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   EXPENCES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   expence: null,\r\n   loadingExpence: true,\r\n   expences: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case EXPENCES_LOADED:\r\n         return {\r\n            ...state,\r\n            expences: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            expences: state.expences.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case EXPENCES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expences: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCES_ERROR:\r\n         return {\r\n            ...state,\r\n            expences: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_CLEARED,\r\n   PENALTY_LOADED,\r\n   SALARIES_LOADED,\r\n   VALUES_UPDATED,\r\n   SALARIES_UPDATED,\r\n   GLOBAL_ERROR,\r\n   DISCOUNT_LOADED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: \"\",\r\n   discount: \"\",\r\n   salaries: {},\r\n   loading: true,\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n            error: {},\r\n         };\r\n      case DISCOUNT_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            discount: payload,\r\n            error: {},\r\n         };\r\n      case SALARIES_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            salaries: payload,\r\n            error: {},\r\n         };\r\n      case VALUES_UPDATED:\r\n         return {\r\n            ...state,\r\n            penalty: payload.penalty,\r\n            discount: payload.discount,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case SALARIES_UPDATED:\r\n         return {\r\n            ...state,\r\n            salaries: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      case GLOBAL_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            penalty: \"\",\r\n            salaries: {},\r\n            error: {},\r\n         };\r\n      case GLOBAL_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n   PAY_CASH,\r\n   PAY_TRANSFER,\r\n} from \"../actions/types\";\r\n\r\nconst month = new Date().getMonth() + 1;\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.details.some(\r\n               (item) => item.installment === payload._id\r\n            )\r\n         )\r\n            return state;\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2 &&\r\n               payload.status !== \"expired\" &&\r\n               payload.number > month\r\n                  ? payload.value -\r\n                    new Intl.NumberFormat(\"de-DE\").format(\r\n                       Math.floor(\r\n                          (payload.value * 0.1 + Number.EPSILON) / 100\r\n                       ) * 100\r\n                    )\r\n                  : payload.status === \"expired\"\r\n                  ? Math.round(\r\n                       (payload.value * 0.90909 + Number.EPSILON) * 100\r\n                    ) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               added: true,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  const value =\r\n                     item.number > 2 &&\r\n                     item.status !== \"expired\" &&\r\n                     item.number > month\r\n                        ? item.value -\r\n                          new Intl.NumberFormat(\"de-DE\").format(\r\n                             Math.floor(\r\n                                (item.value * 0.1 + Number.EPSILON) / 100\r\n                             ) * 100\r\n                          )\r\n                        : item.status === \"expired\"\r\n                        ? Math.round(\r\n                             (item.value * 0.90909 + Number.EPSILON) * 100\r\n                          ) / 100\r\n                        : item.value;\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case PAY_CASH:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               details: state.invoice.details.map((item) => {\r\n                  //Descuento efectivo\r\n                  const discount =\r\n                     (item.number !== 0 || item.value === payload.enrollment) &&\r\n                     new Intl.NumberFormat(\"de-DE\").format(\r\n                        Math.floor(\r\n                           (item.value * (payload.discount / 100) +\r\n                              Number.EPSILON) /\r\n                              100\r\n                        ) * 100\r\n                     );\r\n                  return {\r\n                     ...item,\r\n                     value: item.value - +discount,\r\n                     discount: item.discount\r\n                        ? item.discount + +discount\r\n                        : discount,\r\n                  };\r\n               }),\r\n            },\r\n         };\r\n      case PAY_TRANSFER:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               details: state.invoice.details.map((item) => {\r\n                  return {\r\n                     ...item,\r\n                     value: item.value + +item.discount,\r\n                     discount: null,\r\n                  };\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport dailies from \"./daily\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   dailies,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport store from \"../utils/store\";\r\n\r\nimport { ALERT_REMOVED, ALERT_REPLACED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n\r\n      const exists = store.getState().alert.find((item) => item.msg === msg);\r\n\r\n      if (exists) clearTimeout(exists.timer);\r\n\r\n      const timer = setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         5000\r\n      );\r\n\r\n      dispatch({\r\n         type: exists ? ALERT_REPLACED : ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n            ...(exists && { oldId: exists.id }),\r\n            timer,\r\n         },\r\n      });\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n   PENALTY_LOADED,\r\n   VALUES_UPDATED,\r\n   GLOBAL_CLEARED,\r\n   SALARIES_LOADED,\r\n   SALARIES_UPDATED,\r\n   DISCOUNT_LOADED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/global/penalty\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadDiscount = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/global/discount\");\r\n      dispatch({\r\n         type: DISCOUNT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadSalaries = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/global/salaries\");\r\n      dispatch({\r\n         type: SALARIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = (local) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\", { local });\r\n\r\n      const blob = await api.get(`/backup/fetch${local ? \"?local=true\" : \"\"}`, {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      if (local) dispatch(togglePopup(\"default\"));\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateValues = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const values = newObject(formData);\r\n\r\n      const res = await api.post(\"/global/values\", values);\r\n\r\n      dispatch({\r\n         type: VALUES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo/Descuento Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateSalaries = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   const salaries = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/global/salaries\", salaries);\r\n\r\n      dispatch({\r\n         type: SALARIES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Salarios Modificados\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n   }\r\n\r\n   window.scrollTo(0, 0);\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const clearGlobals = () => (dispatch) => {\r\n   dispatch({\r\n      type: GLOBAL_CLEARED,\r\n   });\r\n};\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const pdf = await api.post(\r\n            `/pdf/attendance/${header ? \"list\" : \"best\"}`,\r\n            {\r\n               header,\r\n               attendances,\r\n               info,\r\n            },\r\n            {\r\n               responseType: \"blob\",\r\n            }\r\n         );\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      const pdf = await api.post(\r\n         `/pdf/grade/${\r\n            !header\r\n               ? \"best\"\r\n               : info.period !== undefined\r\n               ? \"period-list\"\r\n               : \"list\"\r\n         }`,\r\n         !header ? { grades } : data,\r\n         {\r\n            responseType: \"blob\",\r\n         }\r\n      );\r\n\r\n      const name = !header\r\n         ? `Mejores Promedios ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         info.students = info.students.filter((item) => item.checked);\r\n\r\n         if (last || !date || info.students.length === 0) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            const newInfo = {\r\n               info,\r\n               date,\r\n               student: info.students[x],\r\n               grades: grades.find(\r\n                  (item) => item[0].student._id === info.students[x]._id\r\n               ),\r\n            };\r\n\r\n            const pdf = await api.post(\r\n               info.period === 5\r\n                  ? \"/pdf/grade/cambridge\"\r\n                  : \"/pdf/grade/certificate\",\r\n               newInfo,\r\n               {\r\n                  responseType: \"blob\",\r\n               }\r\n            );\r\n\r\n            const pdfBlob = new Blob([pdf.data], {\r\n               type: \"application/pdf\",\r\n            });\r\n\r\n            saveAs(\r\n               pdfBlob,\r\n               `Certificado ${info.category} ${\r\n                  info.period === 6 ? \"Cambridge\" : \"\"\r\n               } ${info.students[x].name}.pdf`\r\n            );\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n   TEACHERHOURS_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getTeacherHours = (teacher_id) => async (dispatch) => {\r\n   try {\r\n      dispatch(updateLoadingSpinner(true));\r\n\r\n      const res = await api.get(\"/class/teacher/\" + teacher_id);\r\n\r\n      dispatch({\r\n         type: TEACHERHOURS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const pdf = await api.post(\r\n         `/pdf/class/${type === \"class\" ? \"one\" : \"list\"}`,\r\n         info,\r\n         {\r\n            responseType: \"blob\",\r\n         }\r\n      );\r\n\r\n      const name =\r\n         type === \"class\"\r\n            ? `Clase ${info.category} de ${info.teacher}`\r\n            : \"Clases\";\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError, togglePopup } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      students = students.filter((item) => item.checked);\n\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n\n      for (let x = 0; x < students.length; x++) {\n         const pdf = await api.post(\n            \"/pdf/observation/report-card\",\n            {\n               student: students[x],\n               info,\n            },\n            {\n               responseType: \"blob\",\n            }\n         );\n\n         const pdfBlob = new Blob([pdf.data], {\n            type: \"application/pdf\",\n         });\n\n         saveAs(pdfBlob, `Libreta ${students[x].name} ${info.category}.pdf`);\n      }\n\n      dispatch(togglePopup(\"default\"));\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const pdf = await api.post(\"/pdf/enrollment/list\", enrollments, {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const pdf = await api.post(\"/pdf/register/list\", registers, {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n   PAY_CASH,\r\n   PAY_TRANSFER,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            {\r\n               ...res.data,\r\n               discount: invoice.discount,\r\n               user: { name: fullName, email, cel },\r\n            },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const pdf = await api.post(\r\n         `/pdf/invoice${type === \"list\" ? \"/list\" : \"\"}`,\r\n         formData,\r\n         {\r\n            responseType: \"blob\",\r\n         }\r\n      );\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date =\r\n         type === \"list\"\r\n            ? format(new Date(), \"dd-MM-yy\")\r\n            : format(new Date(formData.date), \"dd-MM-yy\");\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const payCash = (discount, enrollment) => (dispatch) => {\r\n   dispatch({ type: PAY_CASH, payload: { discount, enrollment } });\r\n};\r\n\r\nexport const payTransfer = () => (dispatch) => {\r\n   dispatch({ type: PAY_TRANSFER });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass, clearClasses } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\nimport { clearInvoices } from \"./invoice\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      // if(user._id && user.pdf)\r\n      // dispatch()\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const pdf = await api.post(\r\n         \"/pdf/user/list\",\r\n         { users, usersType: userSearchType },\r\n         {\r\n            responseType: \"blob\",\r\n         }\r\n      );\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearClasses());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   dispatch(clearInvoices());\r\n\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\r\n         `/installment/profit/${new Date().getMonth() + 1}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments, discount) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const pdf = await api.post(\r\n         \"/pdf/installment/list\",\r\n         { installments, discount },\r\n         {\r\n            responseType: \"blob\",\r\n         }\r\n      );\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   const name = (type, sex) => {\r\n      switch (type) {\r\n         case \"admin&teacher\":\r\n            return `Director${sex === \"Femenino\" ? \"a\" : \"\"} y Profesor${\r\n               sex === \"Femenino\" ? \"a\" : \"\"\r\n            }`;\r\n         case \"teacher\":\r\n            return `Profesor${sex === \"Femenino\" ? \"a\" : \"\"}`;\r\n         case \"secretary\":\r\n            return `Secretari${sex === \"Femenino\" ? \"a\" : \"o\"}`;\r\n         case \"classManager\":\r\n            return `Coordinador${sex === \"Femenino\" ? \"a\" : \"\"} Pedagógic${\r\n               sex === \"Femenino\" ? \"a\" : \"o\"\r\n            }`;\r\n\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {name(users[teamNumber].type, users[teamNumber].sex)}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { clearGlobals, updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearGlobals,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  clearGlobals();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearGlobals,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BiHelpCircle } from \"react-icons/bi\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let current = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            if (path[3] === \"0\")\r\n               current = userLogged.type === \"student\" ? \"class-0\" : \"index\";\r\n            else\r\n               switch (userLogged.type) {\r\n                  case \"guardian\":\r\n                     current =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                     break;\r\n                  case \"student\":\r\n                     if (enrollments.length > 0) {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        current = \"class-\" + index;\r\n                     } else current = \"index\";\r\n                     break;\r\n                  default:\r\n                     current = \"user\";\r\n                     break;\r\n               }\r\n         }\r\n         if (current !== currentNav) updateCurrentNav(current, false);\r\n      }\r\n   }, [\r\n      userLogged,\r\n      updateCurrentNav,\r\n      currentNav,\r\n      location.pathname,\r\n      enrollments,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n         case \"classManager\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     {!isAdmin && (\r\n                        <li\r\n                           className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n                              currentNav === \"help\" ? \" current\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/help\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 updateCurrentNav(\"help\", true);\r\n                              }}\r\n                           >\r\n                              <BiHelpCircle />\r\n                              <span className=\"hide-md\">&nbsp;Ayuda</span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, oldPenalty, oldDiscount, values }) => {\n   return (\n      <>\n         <h3>Actualización de Recargo y/o Descuento</h3>\n\n         {oldPenalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(oldPenalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n         <h4> Recargo Actual: {oldPenalty && oldPenalty.number} %</h4>\n\n         {!oldPenalty && (\n            <h5 className=\"paragraph text-danger text-center\">\n               No hay ningún recargo registrado\n            </h5>\n         )}\n\n         <h4>\n            <input\n               id=\"penalty\"\n               type=\"text\"\n               name=\"penalty\"\n               placeholder=\"Nuevo Recargo\"\n               value={values.penalty}\n               onChange={onChange}\n            />\n            %\n         </h4>\n\n         {oldDiscount && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(oldDiscount.date), \"dd/MM/yy\")}\n            </p>\n         )}\n         <h4> Descuento Actual: {oldDiscount && oldDiscount.number} %</h4>\n\n         {!oldDiscount && (\n            <h5 className=\"paragraph text-danger text-center\">\n               No hay ningún descuento registrado\n            </h5>\n         )}\n\n         <h4>\n            <input\n               id=\"discount\"\n               type=\"text\"\n               name=\"discount\"\n               placeholder=\"Nuevo Descuento\"\n               value={values.discount}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            <div className=\"wrapper both\">\n               {students.map((student, i) => (\n                  <div className=\"student\" key={i}>\n                     <p className=\"name\">{student.name}</p>\n                     <input\n                        className=\"form-checkbox\"\n                        type=\"checkbox\"\n                        checked={student.checked}\n                        onChange={(e) => onChange(e, i)}\n                        name=\"student\"\n                        id={`cb${period}-${i}`}\n                     />\n                     <label\n                        className=\"checkbox-lbl\"\n                        id=\"check\"\n                        htmlFor={`cb${period}-${i}`}\n                     >\n                        {student.checked ? \"Si\" : \"No\"}\n                     </label>\n                  </div>\n               ))}\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaCloudDownloadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert, createBackup }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"popup-restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark\">\n            Seleccione el backup que desea restaurar o descargue el actual\n         </h5>\n         <div className=\"form\">\n            <p className=\"text-lighter-primary restore-file\">\n               {selectedFile !== \"\" && (\n                  <>\n                     {selectedFile.name}\n                     <button\n                        type=\"button\"\n                        onClick={() =>\n                           setAdminValues((prev) => ({\n                              ...prev,\n                              selectedFile: \"\",\n                              fileIn: false,\n                           }))\n                        }\n                        className=\"btn-cancel\"\n                     >\n                        <FaTimes />\n                     </button>\n                  </>\n               )}\n            </p>\n            <div className=\"upl-img\">\n               <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n                  <input\n                     id=\"fileInput\"\n                     type=\"file\"\n                     name=\"image\"\n                     onChange={fileSelected}\n                     className=\"upload\"\n                  />\n                  <span>\n                     <FaCloudUploadAlt />\n                     &nbsp;Subir\n                  </span>\n               </div>\n               <button\n                  type=\"button\"\n                  onClick={() => createBackup(true)}\n                  className=\"btn btn-secondary restore-btn\"\n               >\n                  <FaCloudDownloadAlt />\n                  &nbsp;Descargar\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React from \"react\";\nimport format from \"date-fns/format\";\nimport { Link } from \"react-router-dom\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport { formatNumber } from \"../../../../actions/global\";\n\nimport \"./style.scss\";\n\nconst InvoiceList = ({ invoices, clearInvoice, togglePopup }) => {\n   return (\n      <div className=\"popup-invoices\">\n         <h3 className=\"heading-tertiary text-left p-1 my-1\">\n            Listado de Facturas Pagas\n         </h3>\n         <div className=\"wrapper both\">\n            <table>\n               <tbody>\n                  {invoices.length > 0 ? (\n                     invoices.map((invoice, i) => (\n                        <React.Fragment key={i}>\n                           {\n                              <tr>\n                                 <td>\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\n                                 </td>\n                                 <td>${formatNumber(invoice.total)}</td>\n                                 <td>\n                                    <Link\n                                       to={`/invoice/single/${invoice._id}`}\n                                       onClick={() => {\n                                          window.scroll(0, 0);\n                                          clearInvoice();\n                                          togglePopup(\"default\");\n                                       }}\n                                       className=\"btn-text\"\n                                    >\n                                       <FaSearch />\n                                    </Link>\n                                 </td>\n                              </tr>\n                           }\n                        </React.Fragment>\n                     ))\n                  ) : (\n                     <p className=\"heading-tertiary text-center\">\n                        No hay facturas registradas\n                     </p>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </div>\n   );\n};\n\nexport default InvoiceList;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Salaries = ({ onChange, salaries }) => {\n   return (\n      <>\n         <h4 className=\"heading-tertiary text-left text-dark p-2\">\n            Actualización de Salarios\n         </h4>\n         <div className=\"form\">\n            <table className=\"salaries\">\n               <tbody>\n                  <tr>\n                     <td>Cursos Bajos:</td>\n                     <td>\n                        <input\n                           id=\"lowerSalary\"\n                           type=\"text\"\n                           name=\"lowerSalary\"\n                           placeholder=\"Cursos Bajos\"\n                           value={salaries.lowerSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Cursos Altos:</td>\n                     <td>\n                        <input\n                           id=\"higherSalary\"\n                           type=\"text\"\n                           name=\"higherSalary\"\n                           placeholder=\"Cursos Altos\"\n                           value={salaries.higherSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Administrativo:</td>\n                     <td>\n                        <input\n                           id=\"adminSalary\"\n                           type=\"text\"\n                           name=\"adminSalary\"\n                           placeholder=\"Administrativo\"\n                           value={salaries.adminSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Coordinador/a:</td>\n                     <td>\n                        <input\n                           id=\"classManagerSalary\"\n                           type=\"text\"\n                           name=\"classManagerSalary\"\n                           placeholder=\"Coordinador/a\"\n                           value={salaries.classManagerSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n               </tbody>\n            </table>\n         </div>\n      </>\n   );\n};\n\nexport default Salaries;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup, createBackup } from \"../../../actions/global\";\r\nimport { clearInvoice } from \"../../../actions/invoice\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\nimport RestoreDB from \"./RestoreDB\";\r\nimport InvoiceList from \"./InvoiceList\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\nimport Salaries from \"./Salaries\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   createBackup,\r\n   clearInvoice,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [salaries, setSalaries] = useState({\r\n      lowerSalary: \"\",\r\n      higherSalary: \"\",\r\n      adminSalary: \"\",\r\n      classManagerSalary: \"\",\r\n   });\r\n\r\n   const [values, setValues] = useState({\r\n      penalty: \"\",\r\n      discount: \"\",\r\n   });\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info) {\r\n         if (info.students)\r\n            setCertificate((prev) => ({\r\n               ...prev,\r\n               students: info.students.map((item) => {\r\n                  return {\r\n                     ...item,\r\n                     name: item.lastname + \", \" + item.name,\r\n                     checked: false,\r\n                  };\r\n               }),\r\n            }));\r\n         if (info.salaries) {\r\n            setSalaries((prev) => {\r\n               for (const x in info.salaries) prev[x] = info.salaries[x];\r\n               return prev;\r\n            });\r\n         }\r\n      }\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangeValues = (e) => {\r\n      e.persist();\r\n      if (!isNaN(e.target.value))\r\n         setValues((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const onChangeSalary = (e) => {\r\n      e.persist();\r\n      if (!isNaN(e.target.value))\r\n         setSalaries((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"values\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangeValues}\r\n                        oldPenalty={info.penalty}\r\n                        oldDiscount={info.discount}\r\n                        values={values}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return (\r\n               <RestoreDB\r\n                  onChange={onChangeBackup}\r\n                  createBackup={createBackup}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         case \"invoices\":\r\n            return (\r\n               <InvoiceList\r\n                  invoices={info}\r\n                  clearInvoice={clearInvoice}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            );\r\n         case \"salary\":\r\n            return <Salaries onChange={onChangeSalary} salaries={salaries} />;\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               {chooseType(popupType)}\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               {popupType !== \"invoices\" && (\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-success\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        switch (popupType) {\r\n                           case \"values\":\r\n                              confirm(values);\r\n                              setValues({ penalty: \"\", discount: \"\" });\r\n                              break;\r\n                           case \"certificate\":\r\n                              confirm(certificate);\r\n                              break;\r\n                           case \"new-date\":\r\n                              confirm(newDate);\r\n                              break;\r\n                           case \"new-grade\":\r\n                              confirm(newGradeType);\r\n                              break;\r\n                           case \"backup\":\r\n                              confirm(backup);\r\n                              break;\r\n                           case \"salary\":\r\n                              confirm(salaries);\r\n                              break;\r\n                           default:\r\n                              confirm();\r\n                              break;\r\n                        }\r\n                        if (!error) togglePopup(\"default\");\r\n                     }}\r\n                  >\r\n                     Aceptar\r\n                  </button>\r\n               )}\r\n\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   togglePopup,\r\n   setAlert,\r\n   createBackup,\r\n   clearInvoice,\r\n})(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n   dash,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"Examen Libre\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && !dash && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.status === \"expired\" &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"classManager\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && !(!classInfo && !user.active) && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               {userLogged.type !== \"classManager\" && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary m-0 text-primary p-1\">\r\n                        Cuotas Pendientes{\" \"}\r\n                     </h3>\r\n                     <button\r\n                        className=\"btn-text liner\"\r\n                        onClick={() => togglePopup(\"invoices\")}\r\n                     >\r\n                        Facturas Pagas\r\n                     </button>\r\n                     <div className=\"pb-2\">\r\n                        {!loadingInstallments && installments.length > 0 ? (\r\n                           <InstallmentsTable\r\n                              installments={installments}\r\n                              forAdmin={false}\r\n                              dash\r\n                           />\r\n                        ) : (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              Al día\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF =\r\n   (categories, discount, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const pdf = await api.post(\r\n            \"/pdf/category/list?type=\" + type,\r\n            { categories, discount },\r\n            {\r\n               responseType: \"blob\",\r\n            }\r\n         );\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(CATEGORIES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { BiHelpCircle } from \"react-icons/bi\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n   clearGlobals,\r\n} from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGlobals,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && isAdmin) getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n                  <span className=\"hide-sm\">\r\n                     <li className=\"side-nav-item\">\r\n                        <Link\r\n                           to=\"/index/mentions-list\"\r\n                           onClick={() => {\r\n                              clearSearch();\r\n                              clearAttendances();\r\n                              clearGrades();\r\n                              window.scroll(0, 0);\r\n                           }}\r\n                           className=\"side-nav-link\"\r\n                        >\r\n                           <span className=\"side-nav-icon\">\r\n                              <FaGraduationCap />\r\n                           </span>\r\n                           Menciones\r\n                        </Link>\r\n                     </li>\r\n                  </span>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/help\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <BiHelpCircle />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Ayuda</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && isAdmin && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   clearGlobals,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadClasses(\r\n            { ...(user.type === \"teacher\" && { teacher: user._id }) },\r\n            false\r\n         );\r\n   }, [user._id, loadClasses, loading, user]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={user.type !== \"teacher\"}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\nimport { loadInvoices } from \"../../../../actions/invoice\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   invoices: { invoices, loading },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   loadInvoices,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n      classManager: \"Coordinador\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   useEffect(() => {\r\n      if (user && user.type === \"student\" && loading)\r\n         loadInvoices({ studentId: user._id }, false);\r\n   }, [user, loading, loadInvoices]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return (\r\n               <>\r\n                  {(isAdmin || !_id) && user.active && (\r\n                     <TeacherDashboard user={user} />\r\n                  )}\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup(false);\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupRealType === \"invoices\"\r\n                        ? invoices\r\n                        : popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n\r\n                           {isAdmin && whenNull(user.cbvu) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">CBU/CVU: </span>\r\n                                 {user.cbvu}\r\n                              </p>\r\n                           )}\r\n\r\n                           {isAdmin && whenNull(user.alias) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Alias: </span>\r\n                                 {user.alias}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   loadInvoices,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : user.dob &&\r\n                                format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" &&\r\n                              userLogged.type !== \"classManager\" && (\r\n                                 <>\r\n                                    <div className=\"tooltip\">\r\n                                       <Link\r\n                                          to={\r\n                                             classInfo.year === year\r\n                                                ? `/class/edit/${classInfo._id}`\r\n                                                : \"#\"\r\n                                          }\r\n                                          className={`btn ${\r\n                                             classInfo.year === year\r\n                                                ? \"btn-mix-secondary\"\r\n                                                : \"btn-black\"\r\n                                          }`}\r\n                                          onClick={() => {\r\n                                             if (classInfo.year === year) {\r\n                                                window.scroll(0, 0);\r\n                                                clearSearch();\r\n                                             }\r\n                                          }}\r\n                                       >\r\n                                          <FaEdit />\r\n                                       </Link>\r\n                                       <span className=\"tooltiptext\">\r\n                                          Editar\r\n                                       </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"tooltip\">\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          className=\"btn btn-danger\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             togglePopup(\"default\");\r\n                                          }}\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                       <span className=\"tooltiptext\">\r\n                                          Eliminar\r\n                                       </span>\r\n                                    </div>\r\n                                 </>\r\n                              )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances.length > 0 &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 <input\r\n                                    type=\"checkbox\"\r\n                                    checked={!row.inassistance}\r\n                                    className=\"option-input\"\r\n                                    name={row.name}\r\n                                    onChange={(e) => onChange(e, i, key)}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n               <tbody>\r\n                  <tr className=\"sticky\">\r\n                     <td></td>\r\n                     {newAttendances.length > 0 &&\r\n                        newAttendances[0].map((item, i) => (\r\n                           <td key={i}>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-danger\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       popupType: \"delete\",\r\n                                       toDelete: item.date,\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                              >\r\n                                 <FaTimes />\r\n                              </button>\r\n                           </td>\r\n                        ))}\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades.length > 0 &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 <input\r\n                                    type=\"text\"\r\n                                    name={row.name}\r\n                                    onChange={(e) => onChange(e, i, key)}\r\n                                    value={row.value}\r\n                                    disabled={year !== classInfo.year}\r\n                                    placeholder=\"Nota\"\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n               <tbody>\r\n                  <tr className=\"sticky\">\r\n                     <td></td>\r\n                     {newGrades.length > 0 &&\r\n                        newGrades[0].map((item, i) => (\r\n                           <td key={i}>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-danger\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues((prev) => ({\r\n                                       ...prev,\r\n                                       popupType: \"delete\",\r\n                                       toDelete: item.gradetype._id,\r\n                                    }));\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                              >\r\n                                 <FaTimes />\r\n                              </button>\r\n                           </td>\r\n                        ))}\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n            error={popupType !== \"save\"}\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            <div className=\"tooltip\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={(e) => {\n                     e.preventDefault();\n                     setAdminValues((prev) => ({\n                        ...prev,\n                        popupType: \"certificate\",\n                     }));\n                     togglePopup(\"certificate\");\n                  }}\n               >\n                  <FaAddressCard />\n               </button>\n               <span className=\"tooltiptext\">PDF libretas</span>\n            </div>\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n   FaPlus,\n   FaUserPlus,\n   FaUserEdit,\n   FaUserMinus,\n   FaUnlock,\n   FaSearch,\n   FaEdit,\n   FaCloudUploadAlt,\n   FaTrashAlt,\n   FaPenFancy,\n   FaGraduationCap,\n   FaScroll,\n   FaAddressCard,\n   FaMoneyCheckAlt,\n   FaFileInvoiceDollar,\n   FaHandPointRight,\n   FaHandPointDown,\n   FaDollarSign,\n} from \"react-icons/fa\";\nimport { ImFilePdf } from \"react-icons/im\";\nimport { FiSave } from \"react-icons/fi\";\nimport { CgNotes } from \"react-icons/cg\";\nimport { IoIosListBox } from \"react-icons/io\";\nimport { GoTriangleRight, GoTriangleDown } from \"react-icons/go\";\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\nimport { BiFilterAlt, BiHelpCircle } from \"react-icons/bi\";\n\nimport { useState, useEffect } from \"react\";\n\nimport \"./style.scss\";\n\nconst Help = ({ auth: { userLogged } }) => {\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         isAdmin:\n            userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\",\n      }));\n   }, [userLogged]);\n\n   const [adminValues, setAdminValues] = useState({\n      users: false,\n      enrollments: false,\n      classes: false,\n      installments: false,\n      categories: false,\n      register: false,\n      other: false,\n      isAdmin: false,\n   });\n\n   const [usersAdmin, setUsersAdmin] = useState({\n      registerUser: false,\n      editUser: false,\n      deleteUser: false,\n      credentials: false,\n      search: false,\n      uploadImage: false,\n      inactivateUser: false,\n   });\n\n   const [enrollAdmin, setEnrollAdmin] = useState({\n      enroll: false,\n      editEnroll: false,\n      deleteEnroll: false,\n      printEnroll: false,\n   });\n\n   const [classAdmin, setClassAdmin] = useState({\n      registerClass: false,\n      editClass: false,\n      deleteClass: false,\n      printClass: false,\n      addGrades: false,\n      printGrades: false,\n      printCertificates: false,\n      updateGradeType: false,\n      updateAttendance: false,\n      printAttendances: false,\n      observations: false,\n      reportCard: false,\n   });\n\n   const [installAdmin, setInstallAdmin] = useState({\n      editInstall: false,\n      printInstall: false,\n      deleteInstall: false,\n      invoice: false,\n   });\n\n   const [categoriesAdmin, setCategoriesAdmin] = useState({\n      editCategories: false,\n      printCategories: false,\n   });\n\n   const [registerAdmin, setRegisterAdmin] = useState({\n      closeRegister: false,\n      balanceRegister: false,\n      addExpences: false,\n      printIncome: false,\n      printExpences: false,\n      printWithdrawals: false,\n      printMonthWithdrawals: false,\n      printTransactions: false,\n      printMonthTransactions: false,\n      updateTransactionType: false,\n   });\n\n   const [otherAdmin, setOtherAdmin] = useState({\n      updateSalaries: false,\n      updateDiscount: false,\n      updateTowns: false,\n      mentions: false,\n   });\n\n   const {\n      users,\n      enrollments,\n      classes,\n      installments,\n      categories,\n      register,\n      other,\n      isAdmin,\n   } = adminValues;\n\n   const {\n      registerUser,\n      editUser,\n      deleteUser,\n      credentials,\n      search,\n      uploadImage,\n      inactivateUser,\n   } = usersAdmin;\n\n   const { enroll, editEnroll, deleteEnroll, printEnroll } = enrollAdmin;\n\n   const {\n      registerClass,\n      editClass,\n      deleteClass,\n      printClass,\n      addGrades,\n      printGrades,\n      printCertificates,\n      updateGradeType,\n      updateAttendance,\n      printAttendances,\n      observations,\n      reportCard,\n   } = classAdmin;\n\n   const { editInstall, printInstall, deleteInstall, invoice } = installAdmin;\n\n   const { editCategories, printCategories } = categoriesAdmin;\n\n   const {\n      closeRegister,\n      balanceRegister,\n      addExpences,\n      printIncome,\n      printExpences,\n      printWithdrawals,\n      printMonthWithdrawals,\n      printTransactions,\n      printMonthTransactions,\n      updateTransactionType,\n   } = registerAdmin;\n\n   const { updateSalaries, updateDiscount, updateTowns, mentions } = otherAdmin;\n\n   return (\n      <div className=\"bg-white help\">\n         <h2 className=\"heading-primary\">\n            <BiHelpCircle />\n            &nbsp;Ayuda\n         </h2>\n         <div className=\"list-first\">\n            <div\n               className=\"list-first-heading\"\n               onClick={() =>\n                  setAdminValues((prev) => ({\n                     ...prev,\n                     users: !users,\n                  }))\n               }\n            >\n               <span className=\"pointer\">\n                  {users ? <FaHandPointDown /> : <FaHandPointRight />}\n               </span>\n               <p className=\"list-first-heading-title\">Usuarios</p>\n            </div>\n\n            {users && (\n               <div className=\"list-second\">\n                  {(isAdmin || userLogged.type === \"secretary\") && (\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setUsersAdmin((prev) => ({\n                                 ...prev,\n                                 registerUser: !registerUser,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {registerUser ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Registrar usuario\n                           </h4>\n                        </div>\n                        {registerUser && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Búsqueda\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Hacer click en el botón que dice \"Registrar\n                                 Usuario\"{\" \"}\n                                 <button className=\"btn btn-dark\">\n                                    <FaUserPlus /> &nbsp;Registrar Usuario\n                                 </button>{\" \"}\n                                 que se encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Seleccionar el tipo de usuario del menú\n                                 desplegable.\n                              </li>\n                              <li>\n                                 Cargar todos los datos que pide (desde DNI en\n                                 la mayoría de los casos).\n                              </li>\n                              <li>\n                                 Si selecciona el usuario \"Alumno\", cargar el\n                                 celular del alumno y el de los padres desde el\n                                 botón{\" \"}\n                                 <button className=\"btn btn-tertiary\">\n                                    <FaPlus />\n                                    <span className=\"hide-sm\">\n                                       &nbsp;Celular\n                                    </span>\n                                 </button>{\" \"}\n                                 en donde debe colocar el tipo de vínculo con el\n                                 alumno, nombre y celular. Rellenar todos los\n                                 campos siguientes, seleccionar el tipo de\n                                 descuento (los mas usados es \"Ninguno\" o\n                                 \"Hermanos\"), si es que tiene, y cuando se\n                                 realiza el recargo (el día 15 en general).\n                              </li>\n                              <li>\n                                 Si selecciona el usuario \"Tutor\" debe agregar\n                                 los alumnos que están vinculados con ese tutor\n                                 (para ello los alumnos deben estar previamente\n                                 cargados).\n                              </li>\n                              <li>\n                                 Para finalizar, hacer click en el botón\n                                 \"Registrar\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    Registrar\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y\n                                 aceptar en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  )}\n                  {(isAdmin || userLogged.type === \"secretary\") && (\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setUsersAdmin((prev) => ({\n                                 ...prev,\n                                 editUser: !editUser,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {editUser ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Editar usuario\n                           </h4>\n                        </div>\n                        {editUser && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Búsqueda\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Ir a la pestaña correspondiente dependiendo del\n                                 usuario que desea buscar.\n                              </li>\n                              <li>\n                                 Ingresar los datos del usuario para buscarlo\n                                 (nombre y/o apellido).\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Seleccionar el usuario haciendo click sobre el\n                                 nombre.\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Editar\"{\" \"}\n                                 <button className=\"btn btn-mix-secondary\">\n                                    <FaUserEdit />\n                                    &nbsp;Editar\n                                 </button>{\" \"}\n                                 que se encuentra debajo de los datos del\n                                 usuario.\n                              </li>\n                              <li>Modificar los datos necesarios.</li>\n                              <li>\n                                 Hacer click en el botón Guardar Cambios{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FaUserEdit />\n                                    &nbsp;Guardar Cambios\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  )}\n                  {(isAdmin || userLogged.type === \"secretary\") && (\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setUsersAdmin((prev) => ({\n                                 ...prev,\n                                 deleteUser: !deleteUser,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {deleteUser ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Eliminar usuario\n                           </h4>\n                        </div>\n                        {deleteUser && (\n                           <ul>\n                              <li>\n                                 Recomendamos no eliminar un usuario. En caso de\n                                 que quiera que no aparezca más entre los\n                                 usuarios activos, lo único que debería hacer es\n                                 desactivarlo.\n                              </li>\n                              <li>\n                                 Desde la página principal ir a \"Búsqueda\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Ir a la pestaña correspondiente dependiendo del\n                                 usuario que desea buscar.\n                              </li>\n                              <li>\n                                 Ingresar los datos del usuario para buscarlo\n                                 (nombre y/o apellido).\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Seleccionar el usuario haciendo click sobre el\n                                 nombre.\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Eliminar\"{\" \"}\n                                 <button className=\"btn btn-danger\">\n                                    <FaUserMinus />\n                                    &nbsp;Eliminar\n                                 </button>{\" \"}\n                                 que se encuentra debajo de los datos del\n                                 usuario.\n                              </li>\n                              <li>\n                                 Hacer click en \"Aceptar\" en la pantalla\n                                 emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  )}\n                  <>\n                     <div\n                        className=\"list-second-heading\"\n                        onClick={() =>\n                           setUsersAdmin((prev) => ({\n                              ...prev,\n                              credentials: !credentials,\n                           }))\n                        }\n                     >\n                        <span className=\"pointer\">\n                           {credentials ? (\n                              <GoTriangleDown />\n                           ) : (\n                              <GoTriangleRight />\n                           )}\n                        </span>\n                        <h4 className=\"list-second-heading-title\">\n                           Modificar credenciales (Email y Contraseña)\n                        </h4>\n                     </div>\n                     {credentials && (\n                        <ul>\n                           <li>\n                              Desde la página principal ir a \"Búsqueda\" en el\n                              menú de la izquierda o en el menú de la barra\n                              superior de color azul (tres líneas) que se\n                              encuentra arriba a la derecha.\n                           </li>\n                           <li>\n                              Ir a la pestaña correspondiente dependiendo del\n                              usuario que desea buscar.\n                           </li>\n                           <li>\n                              Ingresar los datos del usuario para buscarlo\n                              (nombre y/o apellido).\n                           </li>\n                           <li>\n                              Hacer click en el botón \"Buscar\"{\" \"}\n                              <button className=\"btn btn-light\">\n                                 <BiFilterAlt />\n                                 &nbsp;Buscar\n                              </button>\n                              .\n                           </li>\n                           <li>\n                              Seleccionar el usuario haciendo click sobre el\n                              nombre.\n                           </li>\n                           <li>\n                              Hacer click en el botón \"Editar\"{\" \"}\n                              <button className=\"btn btn-mix-secondary\">\n                                 <FaUserEdit />\n                                 &nbsp;Editar\n                              </button>{\" \"}\n                              que se encuentra debajo de los datos del usuario.\n                           </li>\n                           <li>\n                              Hacer click en el botón \"Modificar credenciales\"{\" \"}\n                              <button className=\"btn btn-primary\">\n                                 <FaUnlock />\n                                 &nbsp;Modificar credenciales\n                              </button>{\" \"}\n                              que se encuentra arriba a la derecha de la\n                              pantalla.\n                           </li>\n                           <li>Modificar los datos necesarios.</li>\n                           <li>\n                              Si necesita modificar la contraseña, colocarla en\n                              donde dice \"Nueva contraseña\" y volver a repetirla\n                              donde dice \"Confirmación de contraseña\".\n                           </li>\n                           <li>\n                              Hacer click en el botón Guardar Cambios{\" \"}\n                              <button className=\"btn btn-primary\">\n                                 <FaUserEdit />\n                                 &nbsp;Guardar Cambios\n                              </button>{\" \"}\n                              que se encuentra al final de la página y \"Aceptar\"\n                              en la pantalla emergente.\n                           </li>\n                        </ul>\n                     )}\n                  </>\n                  {(isAdmin ||\n                     userLogged.type === \"secretary\" ||\n                     userLogged.type === \"classManager\") && (\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setUsersAdmin((prev) => ({\n                                 ...prev,\n                                 search: !search,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {search ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Búsqueda de usuarios\n                           </h4>\n                        </div>\n                        {search && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Búsqueda\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Ir a la pestaña correspondiente dependiendo del\n                                 usuario que desea buscar.\n                              </li>\n                              <li>\n                                 Ingresar los datos del/los usuario/s para\n                                 buscarlos.\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Le aparecerá una lista de todos los usuarios\n                                 que cumplen con dichos filtros.\n                              </li>\n                              <li>\n                                 Si desea generar el pdf de la lista haga click\n                                 en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está al final a la derecha.\n                              </li>\n                              <li>\n                                 Si desea ver la info de un usuario, haga click\n                                 en el nombre del mismo.\n                              </li>\n                              <li>\n                                 En la pantalla aparecerá la información general\n                                 del usuario junto con su imágen si esta está\n                                 cargada y otra información dependiendo del tipo\n                                 de usuario.\n                              </li>\n                              <li>\n                                 Si es alumno mostrará la siguiente información:\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Tutores (solo si estos están previamente\n                                       cargados). Se puede ver la información de\n                                       estos usuarios haciendo click en \"Ver\n                                       Info\"{\" \"}\n                                       <button className=\"btn-text\">\n                                          Ver Info\n                                       </button>{\" \"}\n                                       que se encuentra a su derecha.\n                                    </p>\n                                    <p>\n                                       Todos los cursos a los que el alumno ha\n                                       asistitdo. Se pueden ver las notas,\n                                       inasistencias, clases y demás información\n                                       haciendo click en \"Ver Info\"{\" \"}\n                                       <button className=\"btn-text\">\n                                          Ver Info\n                                       </button>{\" \"}\n                                       que se encuentra a su derecha.\n                                    </p>\n                                    <p>\n                                       Los datos de la clase a la que está\n                                       asistiendo el corriente año. Del lado\n                                       izquierdo se puede acceder a la clase y\n                                       toda su información a través del botón\n                                       \"Ver Info\"{\" \"}\n                                       <button className=\"btn-text\">\n                                          Ver Info\n                                       </button>{\" \"}\n                                       que se encuentra debajo, y del lado\n                                       derecho se puede ver el profesor (se\n                                       puede acceder a su información haciendo\n                                       click en \"Ver Info\" que se encuentra\n                                       debajo) y horarios de la clase.\n                                    </p>\n                                    <p>\n                                       Las notas de los bimestres y finales si\n                                       estas se encuentran cargadas.\n                                    </p>\n                                    <p>Las inasistencias.</p>\n                                    <p>\n                                       Observaciones si es que el profesor las\n                                       ha cargado.\n                                    </p>\n                                    <p>Cuotas pendientes que el alumno debe.</p>\n                                    <p>\n                                       Y también se pueden ver los pagos\n                                       anteriores al hacer click en \"Facturas\n                                       Pagas\"{\" \"}\n                                       <button className=\"btn-text liner\">\n                                          Facturas Pagas\n                                       </button>\n                                       . Si se desea ver una factura en\n                                       particular, hacer click en la lupita{\" \"}\n                                       <button className=\"btn-text\">\n                                          <FaSearch />\n                                       </button>{\" \"}\n                                       que se encuentra al lado de la factura.\n                                    </p>\n                                 </div>\n                              </li>\n                              <li>\n                                 Si es tutor mostrará la siguiente información:\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Alumnos a cargo (solo si estos están\n                                       previamente cargados). Se puede ver la\n                                       información de estos usuarios haciendo\n                                       click en \"Ver Info\"{\" \"}\n                                       <button className=\"btn-text\">\n                                          Ver Info\n                                       </button>{\" \"}\n                                       que se encuentra a su derecha.\n                                    </p>\n                                 </div>\n                              </li>\n                              <li>\n                                 Si es profesor mostrará la siguiente\n                                 información:\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       El listado de los cursos que dicho\n                                       profesor tiene a cargo. Para ver la\n                                       información de estos haga click en \"Ver\"{\" \"}\n                                       <button className=\"btn-text\">Ver</button>{\" \"}\n                                       que se encuentra a su derecha.\n                                    </p>\n                                 </div>\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  )}\n                  <>\n                     <div\n                        className=\"list-second-heading\"\n                        onClick={() =>\n                           setUsersAdmin((prev) => ({\n                              ...prev,\n                              uploadImage: !uploadImage,\n                           }))\n                        }\n                     >\n                        <span className=\"pointer\">\n                           {uploadImage ? (\n                              <GoTriangleDown />\n                           ) : (\n                              <GoTriangleRight />\n                           )}\n                        </span>\n                        <h4 className=\"list-second-heading-title\">\n                           Subir imágen en el perfil\n                        </h4>\n                     </div>\n                     {uploadImage && (\n                        <ul>\n                           <li>\n                              Desde la página principal ir a \"Búsqueda\" en el\n                              menú de la izquierda o en el menú de la barra\n                              superior de color azul (tres líneas) que se\n                              encuentra arriba a la derecha.\n                           </li>\n                           <li>\n                              Ir a la pestaña correspondiente dependiendo del\n                              usuario que desea buscar.\n                           </li>\n                           <li>\n                              Ingresar los datos del usuario para buscarlo\n                              (nombre y/o apellido).\n                           </li>\n                           <li>\n                              Hacer click en el botón \"Buscar\"{\" \"}\n                              <button className=\"btn btn-light\">\n                                 <BiFilterAlt />\n                                 &nbsp;Buscar\n                              </button>\n                              .\n                           </li>\n                           <li>\n                              Seleccionar el usuario haciendo click sobre el\n                              nombre.\n                           </li>\n                           <li>\n                              Hacer click en el botón \"Editar\"{\" \"}\n                              <button className=\"btn btn-mix-secondary\">\n                                 <FaUserEdit />\n                                 &nbsp;Editar\n                              </button>{\" \"}\n                              que se encuentra debajo de los datos del usuario.\n                           </li>\n                           <li>\n                              Ir casi al final de la página donde se encuentra\n                              el botón que dice \"Subir imágen\"{\" \"}\n                              <div className=\"form\">\n                                 <div className=\"upl-img\">\n                                    <div className=\"fileUpload\">\n                                       <input\n                                          id=\"fileInput\"\n                                          className=\"upload\"\n                                       />\n                                       <span>\n                                          <FaCloudUploadAlt />\n                                          &nbsp;Subir imágen\n                                       </span>\n                                    </div>\n                                 </div>\n                              </div>{\" \"}\n                              y hacerle click.\n                           </li>\n                           <li>\n                              Buscar y seleccionar la imágen que se quiere subir\n                              y hacer click en \"Abrir\".\n                           </li>\n                           <li>\n                              Hacer click en el botón Guardar Cambios{\" \"}\n                              <button className=\"btn btn-primary\">\n                                 <FaUserEdit />\n                                 &nbsp;Guardar Cambios\n                              </button>{\" \"}\n                              que se encuentra al final de la página y en\n                              \"Aceptar\" en la pantalla emergente.\n                           </li>\n                        </ul>\n                     )}\n                  </>\n                  {(isAdmin || userLogged.type === \"secretary\") && (\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setUsersAdmin((prev) => ({\n                                 ...prev,\n                                 inactivateUser: !inactivateUser,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {inactivateUser ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Desactivar/Activar un usuario\n                           </h4>\n                        </div>\n                        {inactivateUser && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Búsqueda\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Ir a la pestaña correspondiente dependiendo del\n                                 usuario que desea buscar.\n                              </li>\n                              <li>\n                                 Ingresar los datos del usuario para buscarlo\n                                 (nombre y/o apellido).\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Seleccionar el usuario haciendo click sobre el\n                                 nombre.\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Editar\"{\" \"}\n                                 <button className=\"btn btn-mix-secondary\">\n                                    <FaUserEdit />\n                                    &nbsp;Editar\n                                 </button>{\" \"}\n                                 que se encuentra debajo de los datos del\n                                 usuario.\n                              </li>\n                              <li>\n                                 Ir casi al final de la página donde se\n                                 encuentra el checkbox \"Activo\" o \"Inactivo\"{\" \"}\n                                 <input\n                                    className=\"form-checkbox\"\n                                    type=\"checkbox\"\n                                    name=\"active\"\n                                    id=\"active\"\n                                 />\n                                 <label\n                                    className=\"checkbox-lbl\"\n                                    htmlFor=\"active\"\n                                 >\n                                    Activo\n                                 </label>{\" \"}\n                                 y hacerle click.\n                              </li>\n                              <li>Aceptar en la pantalla emergente.</li>\n                              <li>\n                                 Hacer click en el botón Guardar Cambios{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FaUserEdit />\n                                    &nbsp;Guardar Cambios\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  )}\n               </div>\n            )}\n         </div>\n         {(isAdmin || userLogged.type === \"secretary\") && (\n            <div className=\"list-first\">\n               <div\n                  className=\"list-first-heading\"\n                  onClick={() =>\n                     setAdminValues((prev) => ({\n                        ...prev,\n                        enrollments: !enrollments,\n                     }))\n                  }\n               >\n                  <span className=\"pointer\">\n                     {enrollments ? <FaHandPointDown /> : <FaHandPointRight />}\n                  </span>\n                  <p className=\"list-first-heading-title\">Inscripciones</p>\n               </div>\n\n               {enrollments && (\n                  <div className=\"list-second\">\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setEnrollAdmin((prev) => ({\n                                 ...prev,\n                                 enroll: !enroll,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {enroll ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Inscribir un alumno\n                           </h4>\n                        </div>\n                        {enroll && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Inscripción\" en\n                                 el menú de la izquierda o en el menú de la\n                                 barra superior de color azul (tres líneas) que\n                                 se encuentra arriba a la derecha.\n                              </li>\n                              <li>Buscar el alumno por apellido y/o nombre.</li>\n                              <li>\n                                 Seleccionar la categoría a la que va a asistir\n                                 el alumno.\n                              </li>\n                              <li>\n                                 Seleccione el año para el que es la inscripción\n                                 (en el caso de que se quiera inscribir para el\n                                 año siguiente).\n                              </li>\n                              <li>\n                                 Si es una inscripción para el año en curso, hay\n                                 que ingresar a partir de que mes se lo desea\n                                 inscribir (es para que el programa genere las\n                                 cuotas desde el mes correcto, sino puede\n                                 generar una cuota de más o de menos y habría\n                                 que hacerlo manualmente).\n                              </li>\n                              <li>\n                                 Hacer click en el botón Inscribir{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FaUserEdit />\n                                    &nbsp; Inscribir\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y\n                                 aceptar en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setEnrollAdmin((prev) => ({\n                                 ...prev,\n                                 editEnroll: !editEnroll,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {editEnroll ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Editar inscripción de un alumno\n                           </h4>\n                        </div>\n                        {editEnroll && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Inscripción\" en\n                                 el menú de la izquierda o en el menú de la\n                                 barra superior de color azul (tres líneas) que\n                                 se encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Ir al botón \"Listado\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <IoIosListBox />\n                                    &nbsp; Listado\n                                 </button>{\" \"}\n                                 que está en la parte superior derecha.\n                              </li>\n                              <li>\n                                 Buscar la inscripción rellenando los campos\n                                 necesarios de los filtros\n                                 (Nombre/Apellido/Categoría/Año/Fechas).\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Localizar la inscripción en la lista de abajo y\n                                 hacer click en el botón editar{\" \"}\n                                 <button className=\"btn btn-success\">\n                                    <FaEdit />\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha del mismo.\n                              </li>\n                              <li>\n                                 Modificar la categoría a la que se le quiere\n                                 cambiar.\n                              </li>\n                              <li>\n                                 Seleccionar el mes a partir del cual se quiere\n                                 hacer efectivo el cambio (esto es para que se\n                                 modifique el valor de la cuota\n                                 correspondiente).\n                              </li>\n                              <li>\n                                 Hacer click en el botón Guardar Cambios{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Guardar Cambios\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setEnrollAdmin((prev) => ({\n                                 ...prev,\n                                 deleteEnroll: !deleteEnroll,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {deleteEnroll ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Eliminar una inscripción\n                           </h4>\n                        </div>\n                        {deleteEnroll && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Inscripción\" en\n                                 el menú de la izquierda o en el menú de la\n                                 barra superior de color azul (tres líneas) que\n                                 se encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Ir al botón \"Listado\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <IoIosListBox />\n                                    &nbsp; Listado\n                                 </button>{\" \"}\n                                 que está en la parte superior derecha.\n                              </li>\n                              <li>\n                                 Buscar la inscripción rellenando los campos\n                                 necesarios de los filtros\n                                 (Nombre/Apellido/Categoría/Año/Fechas).\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Localizar la inscripción en la lista de abajo y\n                                 hacer click en el botón eliminar{\" \"}\n                                 <button className=\"btn btn-danger\">\n                                    <FaTrashAlt />\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha del mismo.Tener\n                                 en cuenta que cuando se elimina una\n                                 inscripción, también se elimina el alumno de la\n                                 clase, sus notas y asistencias y las cuotas\n                                 relacionadas con dicha inscripción.\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Aceptar\" en la ventana\n                                 emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setEnrollAdmin((prev) => ({\n                                 ...prev,\n                                 printEnroll: !printEnroll,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printEnroll ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Ver/Imprimir listado de inscripciones\n                           </h4>\n                        </div>\n                        {printEnroll && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Inscripción\" en\n                                 el menú de la izquierda o en el menú de la\n                                 barra superior de color azul (tres líneas) que\n                                 se encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Ir al botón \"Listado\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <IoIosListBox />\n                                    &nbsp; Listado\n                                 </button>{\" \"}\n                                 que está en la parte superior derecha.\n                              </li>\n                              <li>\n                                 Buscar la inscripción rellenando los campos\n                                 necesarios de los filtros\n                                 (Nombre/Apellido/Categoría/Año/Fechas).\n                              </li>\n                              <li>\n                                 Hacer click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Si desea generar el pdf de la lista haga click\n                                 en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está al final a la derecha.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  </div>\n               )}\n            </div>\n         )}\n         {userLogged.type !== \"guardian\" && userLogged.type !== \"student\" && (\n            <div className=\"list-first\">\n               <div\n                  className=\"list-first-heading\"\n                  onClick={() =>\n                     setAdminValues((prev) => ({\n                        ...prev,\n                        classes: !classes,\n                     }))\n                  }\n               >\n                  <span className=\"pointer\">\n                     {classes ? <FaHandPointDown /> : <FaHandPointRight />}\n                  </span>\n                  <p className=\"list-first-heading-title\">Clases</p>\n               </div>\n\n               {classes && (\n                  <div className=\"list-second\">\n                     {(isAdmin || userLogged.type === \"secretary\") && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setClassAdmin((prev) => ({\n                                    ...prev,\n                                    registerClass: !registerClass,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {registerClass ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Crear una clase\n                              </h4>\n                           </div>\n                           {registerClass && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Clases\" en\n                                    el menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    En la parte inferior de la pantalla, hacer\n                                    click en el botón \"Nueva Clase\"{\" \"}\n                                    <button className=\"btn btn-dark\">\n                                       <FaPlus />\n                                       &nbsp;Nueva Clase\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Seleccionar la categoría que va a tener la\n                                    clase nueva.\n                                 </li>\n                                 <li>\n                                    Hacer click en el botón \"Buscar\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Ir a la lista que aparece debajo y agregar\n                                    los alumnos que irían a dicha clase haciendo\n                                    click en el botón \"Agregar\"{\" \"}\n                                    <button className=\"btn btn-dark\">\n                                       <FaPlus />\n                                       &nbsp; Agregar\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha del mismo.\n                                 </li>\n                                 <li>Ir a la pesataña \"Clase\".</li>\n                                 <li>\n                                    Rellenar los datos de la clase como\n                                    profesor, aula, días y horarios.\n                                 </li>\n                                 <li>\n                                    Solo en el caso de que los días tengan\n                                    distintos horarios, hacer click sobre el\n                                    checkbox que dice{\" \"}\n                                    <div className=\"form\">\n                                       <input\n                                          className=\"form-checkbox\"\n                                          type=\"checkbox\"\n                                       />\n                                       <label\n                                          className=\"checkbox-lbl\"\n                                          htmlFor=\"active\"\n                                       >\n                                          Mismo Horario\n                                       </label>\n                                    </div>{\" \"}\n                                    .\n                                 </li>\n                                 <li>\n                                    Revisar que la lista de alumnos sea la\n                                    correcta.\n                                 </li>\n                                 <li>\n                                    Hacer click en el botón Registrar{\" \"}\n                                    <button className=\"btn btn-primary\">\n                                       <FiSave />\n                                       &nbsp;Registrar\n                                    </button>{\" \"}\n                                    que se encuentra al final de la página y\n                                    aceptar en la pantalla emergente.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     {(isAdmin || userLogged.type === \"secretary\") && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setClassAdmin((prev) => ({\n                                    ...prev,\n                                    editClass: !editClass,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {editClass ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Editar una clase / Agregar o quitar alumnos de\n                                 una clase\n                              </h4>\n                           </div>\n                           {editClass && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Clases\" en\n                                    el menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Si no encuentra la clase fácilmente, rellene\n                                    los campos del filtro necesarios en la\n                                    sección superior y haga click en el botón\n                                    \"Buscar\"\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Ubique la clase que desea modificar y haga\n                                    click en \"Ver\"{\" \"}\n                                    <button className=\"btn-text\">\n                                       Ver &rarr;\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha de dicha clase\n                                    (Si no encuentra la palabra ver, vaya al\n                                    final de la página y corra la lista hacia la\n                                    derecha con la barra celeste que está debajo\n                                    de la lista y busque nuevamente la clase).\n                                 </li>\n                                 <li>\n                                    En la próxima pantalla encontrará\n                                    información sobre la clase como ser\n                                    profesor, horarios, aula y la lista de\n                                    alumnos.\n                                 </li>\n                                 <li>\n                                    Al final de la página haga click en el botón\n                                    de editar{\" \"}\n                                    <button className=\"btn btn-mix-secondary\">\n                                       <FaEdit />\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha entre el botón\n                                    de eliminar y generar pdf.\n                                 </li>\n                                 <li>Modificar los datos necesarios.</li>\n                                 <li>\n                                    Si se necesita eliminar un alumno de dicha\n                                    clase, ir al final de la página y eliminarlo\n                                    de la lista de alumnos haciendo click en\n                                    \"Eliminar\"{\" \"}\n                                    <button className=\"btn btn-danger\">\n                                       <FaTrashAlt />\n                                       &nbsp; Eliminar\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha del mismo. .\n                                 </li>\n                                 <li>\n                                    Si se necesita agregar un nuevo alumno, ir a\n                                    la pestaña \"Alumnos\" y seleccionar el alumno\n                                    que aparece en la lista con el botón\n                                    \"Agregar\"{\" \"}\n                                    <button className=\"btn btn-dark\">\n                                       <FaPlus />\n                                       &nbsp; Agregar\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha del mismo. Si\n                                    el alumno no aparece en la lista, no se\n                                    encuentra inscripto (Deberá inscribirlo\n                                    previamente).\n                                 </li>\n                                 <li>\n                                    Si no se encuentra en la pestaña \"Clase\",\n                                    selecciónela.\n                                 </li>\n                                 <li>Vaya al final de la página </li>\n                                 <li>\n                                    Hacer click en el botón Guardar Cambios{\" \"}\n                                    <button className=\"btn btn-primary\">\n                                       <FaEdit />\n                                       &nbsp;Guardar Cambios\n                                    </button>{\" \"}\n                                    que se encuentra al final de la página y en\n                                    \"Aceptar\" en la pantalla emergente.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     {(isAdmin || userLogged.type === \"secretary\") && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setClassAdmin((prev) => ({\n                                    ...prev,\n                                    deleteClass: !deleteClass,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {deleteClass ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Eliminar una clase\n                              </h4>\n                           </div>\n                           {deleteClass && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Clases\" en\n                                    el menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Si no encuentra la clase fácilmente, rellene\n                                    los campos del filtro necesarios en la\n                                    sección superior y haga click en el botón\n                                    \"Buscar\"\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Ubique la clase que desea eliminar y haga\n                                    click en \"Ver\"{\" \"}\n                                    <button className=\"btn-text\">\n                                       Ver &rarr;\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha de dicha clase\n                                    (Si no encuentra la palabra ver, vaya al\n                                    final de la página y corra la lista hacia la\n                                    derecha con la barra celeste que está debajo\n                                    de la lista y busque nuevamente la clase).\n                                 </li>\n                                 <li>\n                                    En la próxima pantalla encontrará\n                                    información sobre la clase como ser\n                                    profesor, horarios, aula y la lista de\n                                    alumnos.\n                                 </li>\n                                 <li>\n                                    Al final de la página haga click en el botón\n                                    de eliminar{\" \"}\n                                    <button className=\"btn btn-danger\">\n                                       <FaTrashAlt />\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha. Tenga en\n                                    cuenta que al eliminar la clase, deberá\n                                    asignar los alumnos que pertenecían a esta a\n                                    una nueva clase.\n                                 </li>\n                                 <li>\n                                    Haga click en \"Aceptar\" en la pantalla\n                                    emergente.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 printClass: !printClass,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printClass ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Ver información de clase / generar pdf con listado\n                              de alumnos\n                           </h4>\n                        </div>\n                        {printClass && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase que desea eliminar y haga click\n                                 en \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Si desea generar el pdf de la lista haga click\n                                 en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está al final al lado de los botones editar\n                                 y eliminar.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 addGrades: !addGrades,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {addGrades ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Agregar/Modificar notas a una clase\n                           </h4>\n                        </div>\n                        {addGrades && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase a la que desea\n                                 agregar/modificar las notas y haga click en\n                                 \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Vaya al final de la página y haga click en el\n                                 botón \"Notas\"{\" \"}\n                                 <button className=\"btn btn-primar\">\n                                    <FaPenFancy />\n                                    &nbsp; Notas\n                                 </button>{\" \"}\n                                 que está al final a la izquierda.\n                              </li>\n                              <li>\n                                 Seleccione la pestaña correspondiente según las\n                                 notas del bimestre que desea agregar/modificar.\n                              </li>\n                              <li>\n                                 Si no están cargados los tipos de notas (no hay\n                                 ningun lugar para rellenar con las notas de los\n                                 alumnos):\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Haga click en el botón \"+ Nota\"{\" \"}\n                                       <button className=\"btn btn-dark\">\n                                          <FaPlus />\n                                          &nbsp; Nota\n                                       </button>{\" \"}\n                                       que está al final entre medio de los\n                                       botones de \"Guardar Cambios\" y de generar\n                                       el pdf.\n                                    </p>\n                                    <p>\n                                       Seleccione el tipo de nota que desea\n                                       agregar.\n                                    </p>\n                                    <p>Haga click en \"Aceptar\".</p>\n                                 </div>\n                              </li>\n                              <li>\n                                 Rellene los campos de las notas de los alumnos\n                                 correspondientes.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Guardar Cambios\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Guardar Cambios\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 printGrades: !printGrades,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printGrades ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Generar pdf de notas\n                           </h4>\n                        </div>\n                        {printGrades && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase que desea eliminar y haga click\n                                 en \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Vaya al final de la página y haga click en el\n                                 botón \"Notas\"{\" \"}\n                                 <button className=\"btn btn-primar\">\n                                    <FaPenFancy />\n                                    &nbsp; Notas\n                                 </button>{\" \"}\n                                 que está al final a la izquierda.\n                              </li>\n                              <li>\n                                 En la próxima pantalla donde se pueden cargar\n                                 las notas hay dos posibles pdfs que se pueden\n                                 generar.\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       El botón de arriba a la derecha que dice\n                                       \"Todas\"{\" \"}\n                                       <button className=\"btn btn-secondary\">\n                                          <ImFilePdf />\n                                          &nbsp;Todas\n                                       </button>{\" \"}\n                                       genera el pdf con todas las notas de\n                                       todos los bimestres y con las notas de\n                                       fin de año inclusive. Si las notas no\n                                       están cargadas pero están cargados los\n                                       tipos de notas, se generará un pdf con\n                                       los espacios vacíos.\n                                    </p>\n                                    <p>\n                                       El botón{\" \"}\n                                       <button className=\"btn btn-secondary\">\n                                          <ImFilePdf />\n                                       </button>{\" \"}\n                                       que se encuentra al final de la página a\n                                       la derecha genera un pdf con las notas\n                                       del bimestre en el que se encuentra. Si\n                                       desea imprimir las notas de otro\n                                       bimestre, busque la pestaña\n                                       correspondiente antes de hacer click en\n                                       el botón.\n                                    </p>\n                                 </div>\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 printCertificates: !printCertificates,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printCertificates ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Generar pdfs de certificados de fin de año\n                           </h4>\n                        </div>\n                        {printCertificates && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase que desea eliminar y haga click\n                                 en \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Vaya al final de la página y haga click en el\n                                 botón \"Notas\"{\" \"}\n                                 <button className=\"btn btn-primar\">\n                                    <FaPenFancy />\n                                    &nbsp; Notas\n                                 </button>{\" \"}\n                                 que está al final a la izquierda.\n                              </li>\n                              <li>\n                                 Vaya a la pestaña \"Final\" o \"Cambridge\"\n                                 dependiendo de que certificado quiere generar.\n                              </li>\n                              <li>\n                                 Haga click en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <FaGraduationCap />\n                                 </button>{\" \"}\n                                 que está al final a la derecha.\n                              </li>\n                              <li>\n                                 Ingrese la fecha para cuando quiere el\n                                 certificado (generalmente el día del acto),\n                                 seleccione los alumnos de los que quiere el\n                                 certificado y haga click en \"Aceptar\".\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setClassAdmin((prev) => ({\n                                    ...prev,\n                                    updateGradeType: !updateGradeType,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {updateGradeType ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Agregar/Modificar un TIPO de nota\n                              </h4>\n                           </div>\n                           {updateGradeType && (\n                              <ul>\n                                 <li>\n                                    Esto se utiliza en el caso de que se quiera\n                                    modificar el nombre, agregar un tipo de nota\n                                    nuevo para agregar en la clase o modificar a\n                                    que curso ese tipo de nota se puede agregar.\n                                 </li>\n                                 <li>\n                                    Desde la página principal ir a \"Clases\" en\n                                    el menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Ubique cualquier clase y haga click en \"Ver\"{\" \"}\n                                    <button className=\"btn-text\">\n                                       Ver &rarr;\n                                    </button>{\" \"}\n                                    que se encuentra a la derecha de esta. (Si\n                                    no encuentra la palabra ver, vaya al final\n                                    de la página y corra la lista hacia la\n                                    derecha con la barra celeste que está debajo\n                                    de la lista y busque nuevamente la clase).\n                                 </li>\n                                 <li>\n                                    En la próxima pantalla encontrará\n                                    información sobre la clase como ser\n                                    profesor, horarios, aula y la lista de\n                                    alumnos.\n                                 </li>\n                                 <li>\n                                    Vaya al final de la página y haga click en\n                                    el botón \"Notas\"{\" \"}\n                                    <button className=\"btn btn-primar\">\n                                       <FaPenFancy />\n                                       &nbsp; Notas\n                                    </button>{\" \"}\n                                    que está al final a la izquierda.\n                                 </li>\n                                 <li>\n                                    En la página para cargar notas haga click en\n                                    el botón \"+ Nota\"{\" \"}\n                                    <button className=\"btn btn-dark\">\n                                       <FaPlus />\n                                       &nbsp; Nota\n                                    </button>{\" \"}\n                                    que está al final entre \"Guardar Cambios\" y\n                                    el botón para generar pdf.\n                                 </li>\n                                 <li>\n                                    En la pantalla emergente haga click en el\n                                    botón editar{\" \"}\n                                    <button className=\"btn btn-mix-secondary\">\n                                       <FaEdit />\n                                    </button>{\" \"}\n                                    que está a la derecha de donde se selecciona\n                                    el tipo de nota.\n                                 </li>\n                                 <li>\n                                    Modifique el nombre o los cursos a las que\n                                    se le puede agregar agregando/sacando el\n                                    tick correspondiente.\n                                 </li>\n                                 <li>\n                                    Si desea agregar un tipo de nota nuevo, vaya\n                                    al final de la página y haga click en el\n                                    botón \"Agregar Tipo de Nota\"{\" \"}\n                                    <button className=\"btn btn-primary\">\n                                       <FaPlus />\n                                       &nbsp; Agregar Tipo de Nota\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>Ingrese los datos necesarios.</li>\n                                 <li>\n                                    Haga click en el botón \"Guardar\"{\" \"}\n                                    <button className=\"btn btn-primary\">\n                                       <FiSave />\n                                       &nbsp;Guardar\n                                    </button>\n                                    que se encuentra al final de la página y en\n                                    \"Aceptar\" en la pantalla emergente.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 updateAttendance: !updateAttendance,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {updateAttendance ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Modificar inasistencias en una clase\n                           </h4>\n                        </div>\n                        {updateAttendance && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase a la que desea\n                                 agregar/modificar las notas y haga click en\n                                 \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Vaya al final de la página y haga click en el\n                                 botón \"Inasistencias\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <IoCheckmarkCircleSharp />\n                                    &nbsp; Inasistencias\n                                 </button>{\" \"}\n                                 que está al final entre el botón de \"Notas\" y\n                                 \"Observaciones\".\n                              </li>\n                              <li>\n                                 Seleccione la pestaña correspondiente según las\n                                 inasistencias del bimestre que desea cargar.\n                              </li>\n                              <li>\n                                 Si no están cargadas las fechas del bimestre:\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Haga click en el botón \"+ Día\"{\" \"}\n                                       <button className=\"btn btn-dark\">\n                                          <FaPlus />\n                                          &nbsp; Día\n                                       </button>{\" \"}\n                                       que está al final entre medio de los\n                                       botones de \"Guardar\" y de generar el pdf.\n                                    </p>\n                                    <p>\n                                       {\" \"}\n                                       Seleccione la fecha desde cuando comienza\n                                       el bimestre y cuando finaliza.\n                                    </p>\n                                    <p>Haga click en \"Aceptar\".</p>\n                                 </div>\n                              </li>\n                              <li>\n                                 Si desea cargar una fecha que no está en el\n                                 listado de días:\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Haga click en el botón \"+ Día\"{\" \"}\n                                       <button className=\"btn btn-dark\">\n                                          <FaPlus />\n                                          &nbsp; Día\n                                       </button>{\" \"}\n                                       que está al final entre medio de los\n                                       botones de \"Guardar\" y de generar el pdf.\n                                    </p>\n                                    <p>Seleccione la fecha que desea cargar.</p>\n                                    <p>Haga click en \"Aceptar\".</p>\n                                 </div>\n                              </li>\n                              <li>\n                                 Deseleccione los alumnos en los días\n                                 correspondientes.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Guardar\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Guardar\n                                 </button>\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 printAttendances: !printAttendances,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printAttendances ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Generar pdf de inasistencias/lista de alumnos con\n                              las fechas del bimestre\n                           </h4>\n                        </div>\n                        {printAttendances && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase a la que desea\n                                 agregar/modificar las notas y haga click en\n                                 \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Vaya al final de la página y haga click en el\n                                 botón \"Inasistencias\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <IoCheckmarkCircleSharp />\n                                    &nbsp; Inasistencias\n                                 </button>{\" \"}\n                                 que está al final entre el botón de \"Notas\" y\n                                 \"Observaciones\".\n                              </li>\n                              <li>\n                                 Seleccione la pestaña correspondiente según el\n                                 pdf de inasistencias del bimestre que desea\n                                 generar.\n                              </li>\n                              <li>\n                                 Si desea generar el pdf de las inasistencias\n                                 haga click en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está al final de la página.\n                              </li>\n                              <li>\n                                 Si desea generar el pdf con la lista de alumnos\n                                 y las fechas del bimestre (para que el profe\n                                 cargue las inasistencias y/o notas), haga click\n                                 en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <FaScroll />\n                                 </button>{\" \"}\n                                 que está al final de la página a la derecha.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 observations: !observations,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {observations ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Agregar/Modificar observaciones de los alumnos de\n                              una clase (para la libreta)\n                           </h4>\n                        </div>\n                        {observations && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase a la que desea\n                                 agregar/modificar las notas y haga click en\n                                 \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Vaya al final de la página y haga click en el\n                                 botón \"Observaciones\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <CgNotes />\n                                    &nbsp; Observaciones\n                                 </button>{\" \"}\n                                 que está al final a la derecha.\n                              </li>\n                              <li>\n                                 Seleccione la pestaña correspondiente según las\n                                 observaciones del bimestre que desea cargar.\n                              </li>\n                              <li>\n                                 Escriba las observaciones en los lugares\n                                 correspondientes al lado de los alumnos.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Guardar\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Guardar\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setClassAdmin((prev) => ({\n                                 ...prev,\n                                 reportCard: !reportCard,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {reportCard ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Generar libretas\n                           </h4>\n                        </div>\n                        {reportCard && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Clases\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Si no encuentra la clase fácilmente, rellene\n                                 los campos del filtro necesarios en la sección\n                                 superior y haga click en el botón \"Buscar\"\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Ubique la clase que desea eliminar y haga click\n                                 en \"Ver\"{\" \"}\n                                 <button className=\"btn-text\">\n                                    Ver &rarr;\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha de dicha clase\n                                 (Si no encuentra la palabra ver, vaya al final\n                                 de la página y corra la lista hacia la derecha\n                                 con la barra celeste que está debajo de la\n                                 lista y busque nuevamente la clase).\n                              </li>\n                              <li>\n                                 En la próxima pantalla encontrará información\n                                 sobre la clase como ser profesor, horarios,\n                                 aula y la lista de alumnos.\n                              </li>\n                              <li>\n                                 Vaya al final de la página y haga click en el\n                                 botón \"Observaciones\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <CgNotes />\n                                    &nbsp; Observaciones\n                                 </button>{\" \"}\n                                 que está al final a la izquierda.\n                              </li>\n                              <li>\n                                 Seleccione la pestaña correspondiente según las\n                                 libretas del bimestre que desea generar.\n                              </li>\n                              <li>\n                                 Haga click en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <FaAddressCard />\n                                 </button>{\" \"}\n                                 que esta al final de la página a la derecha.\n                              </li>\n                              <li>\n                                 Seleccione los alumnos de los que quiere\n                                 generar la libreta y haga click en \"Aceptar\".\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  </div>\n               )}\n            </div>\n         )}\n         {(isAdmin || userLogged.type === \"secretary\") && (\n            <div className=\"list-first\">\n               <div\n                  className=\"list-first-heading\"\n                  onClick={() =>\n                     setAdminValues((prev) => ({\n                        ...prev,\n                        installments: !installments,\n                     }))\n                  }\n               >\n                  <span className=\"pointer\">\n                     {installments ? <FaHandPointDown /> : <FaHandPointRight />}\n                  </span>\n                  <p className=\"list-first-heading-title\">Cuotas/Facturación</p>\n               </div>\n               {installments && (\n                  <div className=\"list-second\">\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setInstallAdmin((prev) => ({\n                                 ...prev,\n                                 editInstall: !editInstall,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {editInstall ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Agregar/Modificar una cuota de un alumno\n                           </h4>\n                        </div>\n                        {editInstall && (\n                           <ul>\n                              <li>\n                                 (Solo utilizar para agregar una cuota a un\n                                 alumno si no se realiza la inscripción o es una\n                                 cuota especial como \"Clases Particulares\" o\n                                 \"Exámen Libre\".)\n                              </li>\n                              <li>\n                                 Desde la página principal ir a \"Cuotas\" en el\n                                 menú de la izquierda.\n                              </li>\n                              <li>\n                                 En la sección \"Búsqueda de alumnos\" ingrese el\n                                 apellido y/o nombre y seleccione el alumno al\n                                 que le desea agregar/modificar una cuota.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Ver Cuotas\"{\" \"}\n                                 <button className=\"btn btn-dark\">\n                                    <FaMoneyCheckAlt />\n                                    &nbsp; Ver Cuotas\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Si desea agregar una cuota nueva ir al final de\n                                 la página y hacer click en el botón \"Agregar\n                                 Cuota\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FaPlus />\n                                    &nbsp;Agregar cuota\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Si desea modificar una cuota hcer click en el\n                                 botón editar{\" \"}\n                                 <button className=\"btn btn-success\">\n                                    <FaEdit />\n                                 </button>{\" \"}\n                                 que está a la izquierda de la misma.\n                              </li>\n                              <li>\n                                 Agregar/Modificar los datos de la misma. El\n                                 botón \"Permitir Actualizar\" se debe sacar y\n                                 dejarlo en \"No Actualizar\" en el caso de que no\n                                 quiere que se modifique cuando se hace el\n                                 recargo por no pago o con la actualización de\n                                 precios.\n                              </li>\n                              <li>\n                                 En \"Estado de la Cuota\" es \"Válida\" si se\n                                 quiere crear pero que no se considere \"Deuda\"\n                                 todavía (Son deudas las cuotas del mes\n                                 corriente y vencidas las de meses anteriores).\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Guardar\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Guardar\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setInstallAdmin((prev) => ({\n                                 ...prev,\n                                 deleteInstall: !deleteInstall,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {deleteInstall ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Eliminar una cuota de un alumno\n                           </h4>\n                        </div>\n\n                        {deleteInstall && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Cuotas\" en el\n                                 menú de la izquierda.\n                              </li>\n                              <li>\n                                 En la sección \"Búsqueda de alumnos\" ingrese el\n                                 apellido y/o nombre y seleccione el alumno al\n                                 que le desea agregar/modificar una cuota.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Ver Cuotas\"{\" \"}\n                                 <button className=\"btn btn-dark\">\n                                    <FaMoneyCheckAlt />\n                                    &nbsp; Ver Cuotas\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Localizar la cuota en la lista de abajo y hacer\n                                 click en el botón eliminar{\" \"}\n                                 <button className=\"btn btn-danger\">\n                                    <FaTrashAlt />\n                                 </button>{\" \"}\n                                 que se encuentra a la derecha del mismo y hacer\n                                 click en el botón \"Aceptar\" en la ventana\n                                 emergente\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setInstallAdmin((prev) => ({\n                                 ...prev,\n                                 printInstall: !printInstall,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printInstall ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Ver/Imprimir pdf de cuotas adeudadas\n                           </h4>\n                        </div>\n                        {printInstall && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Cuotas\" en el\n                                 menú de la izquierda.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Listado Deudas\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <IoIosListBox />\n                                    Listado&nbsp;Deudas\n                                 </button>{\" \"}\n                                 que está arriba a la derecha .\n                              </li>\n                              <li>\n                                 Si desea filtrar las cuotas adeudadas (por\n                                 mes/apellido), ingrese los datos necesarios y\n                                 haga click en el botón \"Buscar\"{\" \"}\n                                 <button\n                                    type=\"submit\"\n                                    className=\"btn btn-light\"\n                                 >\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Si desea generar el pdf de la lista haga click\n                                 en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está al final a la derecha.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setInstallAdmin((prev) => ({\n                                 ...prev,\n                                 invoice: !invoice,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {invoice ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Facturación\n                           </h4>\n                        </div>\n                        {invoice && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Facturación\" en\n                                 el menú de la izquierda o en el menú de la\n                                 barra superior de color azul (tres líneas) que\n                                 se encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 En la sección \"Búsqueda de alumnos\" ingrese el\n                                 apellido y/o nombre y seleccione el alumno al\n                                 que le desea cancelar la/s cuota/s.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Ver Cuotas\"{\" \"}\n                                 <button className=\"btn btn-dark\">\n                                    <FaMoneyCheckAlt />\n                                    &nbsp; Ver Cuotas\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Seleccione la/las cuotas que se desean pagar\n                                 haciendo click en el botón{\" \"}\n                                 <button className=\"btn btn-success\">\n                                    <FaPlus />\n                                 </button>\n                                 .\n                              </li>\n                              <li>\n                                 Haga click en la pestaña \"Factura\" (arriba a la\n                                 derecha).\n                              </li>\n                              <li>\n                                 En \"Usuario a Pagar\" ingrese el apellido y/o\n                                 nombre y seleccione el usuario que paga la/s\n                                 cuota/s.\n                              </li>\n                              <li>\n                                 Si el pago es en efectivo, haga click en donde\n                                 dice \"Transferencia\" para que diga \"Contado\",\n                                 asi se aplica el % de descuento en efectivo. Si\n                                 el pago es en transferencia, no tocar el botón.\n                                 (Este lo que hace es aplicar el descuento. Si\n                                 se quiere cobrar un valor en particular aunque\n                                 este sea en efectivo, no le haga click).\n                              </li>\n                              <li>\n                                 En cada una de las cuotas ingresar el monto a\n                                 pagar.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Pagar\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FaFileInvoiceDollar />\n                                    &nbsp;Pagar\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  </div>\n               )}\n            </div>\n         )}\n         {(isAdmin || userLogged.type === \"secretary\") && (\n            <div className=\"list-first\">\n               <div\n                  className=\"list-first-heading\"\n                  onClick={() =>\n                     setAdminValues((prev) => ({\n                        ...prev,\n                        categories: !categories,\n                     }))\n                  }\n               >\n                  <span className=\"pointer\">\n                     {categories ? <FaHandPointDown /> : <FaHandPointRight />}\n                  </span>\n                  <p className=\"list-first-heading-title\">Categorías</p>\n               </div>\n               {categories && (\n                  <div className=\"list-second\">\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setCategoriesAdmin((prev) => ({\n                                 ...prev,\n                                 editCategories: !editCategories,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {editCategories ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Modificar valor de todas las categorías\n                           </h4>\n                        </div>\n                        {editCategories && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Categorías\" en\n                                 el menú de la izquierda.\n                              </li>\n                              <li>\n                                 Seleccione el mes desde el cual quiere que se\n                                 aplique el nuevo valor.\n                              </li>\n                              <li>\n                                 Modifique los valores correspondientes al lado\n                                 de cada categoría.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Actualizar\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Actualizar\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setCategoriesAdmin((prev) => ({\n                                 ...prev,\n                                 printCategories: !printCategories,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printCategories ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Imprimir pdf de categorías y sus valores\n                           </h4>\n                        </div>\n                        {printCategories && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Categorías\" en\n                                 el menú de la izquierda.\n                              </li>\n                              <li>\n                                 Al final de la página hacer click en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está más a la derecha para generar el pdf\n                                 con los precios de marzo o el del medio para el\n                                 pdf con los precios completos de las cuotas.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  </div>\n               )}\n            </div>\n         )}\n         {(isAdmin || userLogged.type === \"secretary\") && (\n            <div className=\"list-first\">\n               <div\n                  className=\"list-first-heading\"\n                  onClick={() =>\n                     setAdminValues((prev) => ({\n                        ...prev,\n                        register: !register,\n                     }))\n                  }\n               >\n                  <span className=\"pointer\">\n                     {register ? <FaHandPointDown /> : <FaHandPointRight />}\n                  </span>\n                  <p className=\"list-first-heading-title\">\n                     Movimientos de Caja\n                  </p>\n               </div>\n               {register && (\n                  <div className=\"list-second\">\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setRegisterAdmin((prev) => ({\n                                 ...prev,\n                                 closeRegister: !closeRegister,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {closeRegister ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Cerrar la caja diaria\n                           </h4>\n                        </div>\n\n                        {closeRegister && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Caja\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Cerrar Caja\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Cerrar Caja\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setRegisterAdmin((prev) => ({\n                                    ...prev,\n                                    balanceRegister: !balanceRegister,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {balanceRegister ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Hacer balance de dinero al final del día\n                              </h4>\n                           </div>\n                           {balanceRegister && (\n                              <ul>\n                                 <li>\n                                    Esto se puede realizar una vez que la caja\n                                    está cerrada. Si no sabe como hacerlo ir a\n                                    la explicación \"Cerrar la caja diaria\".\n                                 </li>\n                                 <li>\n                                    Desde la página principal ir a \"Caja\" en el\n                                    menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Hacer click en el botón que dice \"Cierre\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <IoIosListBox />\n                                       <span className=\"hide-sm\">\n                                          &nbsp;Cierre\n                                       </span>\n                                    </button>{\" \"}\n                                    que está a la derecha del valor que hay en\n                                    la caja.\n                                 </li>\n                                 <li>\n                                    Llenar con los valores correspondientes al\n                                    dinero que hay en cada lugar.\n                                 </li>\n                                 <li>\n                                    Haga click en el botón para guardar{\" \"}\n                                    <button className=\"btn btn-success\">\n                                       <FiSave />\n                                    </button>{\" \"}\n                                    que está a la derecha de la fila y en\n                                    \"Aceptar\" en la pantalla emergente.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setRegisterAdmin((prev) => ({\n                                 ...prev,\n                                 addExpences: !addExpences,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {addExpences ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Cargar egresos\n                           </h4>\n                        </div>\n\n                        {addExpences && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Caja\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Haga click en la pestaña \"Egreso\" (arriba a la\n                                 derecha).\n                              </li>\n                              <li>Elegir el tipo de movimiento.</li>\n                              <li>\n                                 Si desea pagarle a los empleados:\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Seleccione el tipo de moviemiento \"Pago a\n                                       Empleados\".\n                                    </p>\n                                    <p>\n                                       Seleccione el empleado a quien desea\n                                       pagar.\n                                    </p>\n                                    <p>\n                                       Las horas se calculan automáticamente\n                                       dependiendo de las horas de clases que\n                                       dicho profesor tenga a cargo. En el caso\n                                       de que haya dado menos o más horas,\n                                       modificar las horas o el importe\n                                       manualmente.\n                                    </p>\n                                 </div>\n                              </li>\n                              <li>\n                                 Agregar una descripción de ser necesario. (Ej:\n                                 Pago semana 4/5 al 7/5)\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Guardar\"{\" \"}\n                                 <button className=\"btn btn-primary\">\n                                    <FiSave />\n                                    &nbsp;Guardar\n                                 </button>{\" \"}\n                                 que se encuentra al final de la página y en\n                                 \"Aceptar\" en la pantalla emergente.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setRegisterAdmin((prev) => ({\n                                    ...prev,\n                                    updateTransactionType:\n                                       !updateTransactionType,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {updateTransactionType ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Modificar los tipos de movimientos\n                              </h4>\n                           </div>\n\n                           {updateTransactionType && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Caja\" en el\n                                    menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Haga click en la pestaña \"Egreso\" (arriba a\n                                    la derecha).\n                                 </li>\n                                 <li>\n                                    Haga click en el botón \"Tipo Movimiento\"{\" \"}\n                                    <button className=\"btn btn-mix-secondary\">\n                                       <FaEdit />\n                                       &nbsp; Tipo Movimiento\n                                    </button>{\" \"}\n                                    que se encuentra al final de la página.\n                                 </li>\n                                 <li>\n                                    Modifique el nombre del egreso que desea\n                                    modificar o agregue uno nuevo haciendo click\n                                    al botón que dice \"Agregar Tipo de Egreso\"\n                                    que se encuentra al final de la página e\n                                    ingresando los datos necesarios.\n                                 </li>\n                                 <li>\n                                    Haga click en el botón \"Guardar\"{\" \"}\n                                    <button className=\"btn btn-primary\">\n                                       <FiSave />\n                                       &nbsp;Guardar\n                                    </button>{\" \"}\n                                    que se encuentra al final de la página y en\n                                    \"Aceptar\" en la pantalla emergente.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setRegisterAdmin((prev) => ({\n                                 ...prev,\n                                 printIncome: !printIncome,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printIncome ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Ver/Imprimir listado de facturas o ingresos\n                           </h4>\n                        </div>\n\n                        {printIncome && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Caja\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Listado\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <IoIosListBox />\n                                    &nbsp;Listado\n                                 </button>{\" \"}\n                                 que está primero al lado del valor de\n                                 \"Ingresos\".\n                              </li>\n                              <li>\n                                 Ahi irá a la lista de ingresos. Aquellos que se\n                                 hicieron durante el día son los únicos que se\n                                 pueden borrar (aparece un tacho de basura a la\n                                 derecha de cada ingreso). Si no aparece ningún\n                                 tacho de basura es porque no se registraron\n                                 ingresos en el día.\n                              </li>\n                              <li>\n                                 Si desea filtrar por fecha o nombre de alumno,\n                                 ingréselos y haga click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 . Si no agrega ningún filtro, busca los\n                                 ingresos del corriente año solamente.\n                              </li>\n                              <li>\n                                 Si desea imprimir el listado de ingreso haga\n                                 click en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está al final de la página a la derecha.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setRegisterAdmin((prev) => ({\n                                 ...prev,\n                                 printExpences: !printExpences,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {printExpences ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Ver/Imprimir listado de egresos\n                           </h4>\n                        </div>\n\n                        {printExpences && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Caja\" en el\n                                 menú de la izquierda o en el menú de la barra\n                                 superior de color azul (tres líneas) que se\n                                 encuentra arriba a la derecha.\n                              </li>\n                              <li>\n                                 Haga click en el botón \"Listado\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <IoIosListBox />\n                                    &nbsp;Listado\n                                 </button>{\" \"}\n                                 que está segundo al lado del valor de\n                                 \"Egresos\".\n                              </li>\n                              <li>\n                                 Ahi irá a la lista de egresos. Aquellos que se\n                                 cargaron durante el día son los únicos que se\n                                 pueden borrar (aparece un tacho de basura a la\n                                 derecha de cada egreso). Si no aparece ningún\n                                 tacho de basura es porque no se registraron\n                                 egresos en el día.\n                              </li>\n                              <li>\n                                 Si desea filtrar por fecha ingrésela y haga\n                                 click en el botón \"Buscar\"{\" \"}\n                                 <button className=\"btn btn-light\">\n                                    <BiFilterAlt />\n                                    &nbsp;Buscar\n                                 </button>\n                                 . Si no agrega ningún filtro, solo busca los\n                                 egresos del corriente año solamente.\n                              </li>\n                              <li>\n                                 Si desea imprimir el listado de egresos haga\n                                 click en el botón{\" \"}\n                                 <button className=\"btn btn-secondary\">\n                                    <ImFilePdf />\n                                 </button>{\" \"}\n                                 que está al final de la página a la derecha.\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setRegisterAdmin((prev) => ({\n                                    ...prev,\n                                    printWithdrawals: !printWithdrawals,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {printWithdrawals ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Ver/Imprimir listado de retiros\n                              </h4>\n                           </div>\n\n                           {printWithdrawals && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Caja\" en el\n                                    menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Haga click en el botón \"Listado\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <IoIosListBox />\n                                       &nbsp;Listado\n                                    </button>{\" \"}\n                                    que está tercero al lado del valor de\n                                    \"Retiro de Dinero\".\n                                 </li>\n                                 <li>\n                                    Ahi irá a la lista de retiros. Aquellos que\n                                    se cargaron durante el día son los únicos\n                                    que se pueden borrar (aparece un tacho de\n                                    basura a la derecha de cada retiro). Si no\n                                    aparece ningún tacho de basura es porque no\n                                    se registraron retiros en el día.\n                                 </li>\n                                 <li>\n                                    Si desea filtrar por fecha y/o los retiros\n                                    de una persona en particular ingréselos y\n                                    haga click en el botón \"Buscar\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    . Si no agrega ningún filtro, solo busca los\n                                    retiros del corriente año solamente.\n                                 </li>\n                                 <li>\n                                    Si desea imprimir el listado de retiros haga\n                                    click en el botón{\" \"}\n                                    <button className=\"btn btn-secondary\">\n                                       <ImFilePdf />\n                                    </button>{\" \"}\n                                    que está al final de la página a la derecha.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setRegisterAdmin((prev) => ({\n                                    ...prev,\n                                    printMonthWithdrawals:\n                                       !printMonthWithdrawals,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {printMonthWithdrawals ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Ver/Imprimir listado de retiros mensuales\n                              </h4>\n                           </div>\n\n                           {printMonthWithdrawals && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Caja\" en el\n                                    menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Haga click en el botón \"Listado\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <IoIosListBox />\n                                       &nbsp;Listado\n                                    </button>{\" \"}\n                                    que está tercero al lado del valor de\n                                    \"Retiro de Dinero\".\n                                 </li>\n                                 <li>\n                                    Haga click en el botón que dice \"Listado\n                                    Mensual\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <IoIosListBox />\n                                       &nbsp;Listado&nbsp;Mensual\n                                    </button>{\" \"}\n                                    que está arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Ahi irá a la lista de retiros del corriente\n                                    año.\n                                 </li>\n                                 <li>\n                                    Si desea ver los retiros de otros años,\n                                    búsquelo en la lista desplegable y haga\n                                    click en el botón \"Buscar\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Si desea imprimir el listado de retiros haga\n                                    click en el botón{\" \"}\n                                    <button className=\"btn btn-secondary\">\n                                       <ImFilePdf />\n                                    </button>{\" \"}\n                                    que está al final de la página a la derecha.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setRegisterAdmin((prev) => ({\n                                    ...prev,\n                                    printTransactions: !printTransactions,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {printTransactions ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Ver/Imprimir listado de moviemientos diarios\n                              </h4>\n                           </div>\n\n                           {printTransactions && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Caja\" en el\n                                    menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Haga click en el botón \"Listado\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <IoIosListBox />\n                                       &nbsp;Listado\n                                    </button>{\" \"}\n                                    que está al final de la página al lado del\n                                    botón para abrir/cerrar la caja.\n                                 </li>\n                                 <li>\n                                    Ahi irá a la lista de movimientos diarios.\n                                 </li>\n                                 <li>\n                                    Ahí irá a la lista de movimientos diarios de\n                                    los últimos 10 días. Si desea ver los\n                                    movimientos anteriores, seleccione las\n                                    fechas desde y hasta y haga click en el\n                                    botón \"Buscar\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Si desea imprimir el listado de movimientos\n                                    haga click en el botón{\" \"}\n                                    <button className=\"btn btn-secondary\">\n                                       <ImFilePdf />\n                                    </button>{\" \"}\n                                    que está al final de la página a la derecha.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setRegisterAdmin((prev) => ({\n                                    ...prev,\n                                    printMonthTransactions:\n                                       !printMonthTransactions,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {printMonthTransactions ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Ver/Imprimir listado de movimientos mensuales\n                              </h4>\n                           </div>\n\n                           {printMonthTransactions && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Caja\" en el\n                                    menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Haga click en el botón \"Listado\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <IoIosListBox />\n                                       &nbsp;Listado\n                                    </button>{\" \"}\n                                    que está al final de la página al lado del\n                                    botón para abrir/cerrar la caja.\n                                 </li>\n                                 <li>\n                                    Haga click en el botón que dice \"Listado\n                                    Mensual\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <IoIosListBox />\n                                       &nbsp;Listado&nbsp;Mensual\n                                    </button>{\" \"}\n                                    que está arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Ahi irá a la lista de movimientos del\n                                    corriente año.\n                                 </li>\n                                 <li>\n                                    Si desea ver los movimientos de otros años,\n                                    búsquelo en la lista desplegable y haga\n                                    click en el botón \"Buscar\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Si desea imprimir el listado de movimientos\n                                    haga click en el botón{\" \"}\n                                    <button className=\"btn btn-secondary\">\n                                       <ImFilePdf />\n                                    </button>{\" \"}\n                                    que está al final de la página a la derecha.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                  </div>\n               )}\n            </div>\n         )}\n         {(isAdmin || userLogged.type === \"secretary\") && (\n            <div className=\"list-first\">\n               <div\n                  className=\"list-first-heading\"\n                  onClick={() =>\n                     setAdminValues((prev) => ({\n                        ...prev,\n                        other: !other,\n                     }))\n                  }\n               >\n                  <span className=\"pointer\">\n                     {other ? <FaHandPointDown /> : <FaHandPointRight />}\n                  </span>\n                  <p className=\"list-first-heading-title\">\n                     Modificación de valores y extras\n                  </p>\n               </div>\n\n               {other && (\n                  <div className=\"list-second\">\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setOtherAdmin((prev) => ({\n                                    ...prev,\n                                    updateSalaries: !updateSalaries,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {updateSalaries ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Modificar salarios\n                              </h4>\n                           </div>\n\n                           {updateSalaries && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Caja\" en el\n                                    menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Haga click en la pestaña \"Egreso\" (arriba a\n                                    la derecha).\n                                 </li>\n                                 <li>\n                                    Seleccione el tipo de moviemiento \"Pago a\n                                    Empleados\".\n                                 </li>\n                                 <li>\n                                    Haga click en el botón que apareció arriba a\n                                    la derecha que dice \"Salarios\"{\" \"}\n                                    <button className=\"btn btn-mix-secondary\">\n                                       <FaEdit /> &nbsp; Salarios\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Modifique los valores que desea modificar.\n                                 </li>\n                                 <li>Haga click en el botón \"Aceptar\".</li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setOtherAdmin((prev) => ({\n                                    ...prev,\n                                    updateDiscount: !updateDiscount,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {updateDiscount ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Modificar recargo y/o descuento (en efectivo)\n                              </h4>\n                           </div>\n\n                           {updateDiscount && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Cuotas\" en\n                                    el menú de la izquierda.\n                                 </li>\n                                 <li>\n                                    Haga click en la botón \"Recargo/Descuento\"{\" \"}\n                                    <button className=\"btn btn-secondary\">\n                                       <FaDollarSign />\n                                       &nbsp;Recargo/Descuento\n                                    </button>\n                                    , que se encuentra arriba a la derecha al\n                                    lado del botón del listado de deudas.\n                                 </li>\n                                 <li>\n                                    Ingrese el nuevo recargo y/o descuento en\n                                    los lugares correspondientes.\n                                 </li>\n                                 <li>Haga click en el botón \"Aceptar\".</li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     {isAdmin && (\n                        <>\n                           <div\n                              className=\"list-second-heading\"\n                              onClick={() =>\n                                 setOtherAdmin((prev) => ({\n                                    ...prev,\n                                    updateTowns: !updateTowns,\n                                 }))\n                              }\n                           >\n                              <span className=\"pointer\">\n                                 {updateTowns ? (\n                                    <GoTriangleDown />\n                                 ) : (\n                                    <GoTriangleRight />\n                                 )}\n                              </span>\n                              <h4 className=\"list-second-heading-title\">\n                                 Agregar o modificar barrios y/o localidades\n                              </h4>\n                           </div>\n\n                           {updateTowns && (\n                              <ul>\n                                 <li>\n                                    Desde la página principal ir a \"Búsqueda\" en\n                                    el menú de la izquierda o en el menú de la\n                                    barra superior de color azul (tres líneas)\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    Hacer click en el botón que dice \"Registrar\n                                    Usuario\"{\" \"}\n                                    <button className=\"btn btn-dark\">\n                                       <FaUserPlus /> &nbsp;Registrar Usuario\n                                    </button>{\" \"}\n                                    que se encuentra arriba a la derecha.\n                                 </li>\n                                 <li>\n                                    En la sección de dirección/localidad donde\n                                    vive hacer click en el botón editar{\" \"}\n                                    <button className=\"btn btn-mix-secondary\">\n                                       <FaEdit />\n                                    </button>{\" \"}\n                                    que se encuentra abajo a la derecha de donde\n                                    se coloca el barrio.\n                                 </li>\n                                 <li>\n                                    Seleccionar la pestaña correspondiente si se\n                                    desea modificar o agregar una localidad o\n                                    barrio.\n                                 </li>\n                                 <li>\n                                    Modificar el barrio o localidad o agregar\n                                    uno nuevo haciendo click en el botón que\n                                    dice \"Agregar Localidad/Barrio\"{\" \"}\n                                    <button className=\"btn btn-primary\">\n                                       <FaPlus />\n                                       &nbsp; Agregar Localidad\n                                    </button>{\" \"}\n                                    que se encuentra abajo a la derecha.\n                                 </li>\n                                 <li>\n                                    Hacer click en el botón Guardar Cambios{\" \"}\n                                    <button className=\"btn btn-primary\">\n                                       <FiSave />\n                                       &nbsp;Guardar\n                                    </button>{\" \"}\n                                    que se encuentra al final de la página y en\n                                    \"Aceptar\" en la pantalla emergente.\n                                 </li>\n                              </ul>\n                           )}\n                        </>\n                     )}\n                     <>\n                        <div\n                           className=\"list-second-heading\"\n                           onClick={() =>\n                              setOtherAdmin((prev) => ({\n                                 ...prev,\n                                 mentions: !mentions,\n                              }))\n                           }\n                        >\n                           <span className=\"pointer\">\n                              {mentions ? (\n                                 <GoTriangleDown />\n                              ) : (\n                                 <GoTriangleRight />\n                              )}\n                           </span>\n                           <h4 className=\"list-second-heading-title\">\n                              Generar las menciones de fin de año (Promedio y\n                              Asistencia)\n                           </h4>\n                        </div>\n\n                        {mentions && (\n                           <ul>\n                              <li>\n                                 Desde la página principal ir a \"Mensiones\" en\n                                 el menú de la izquierda.\n                              </li>\n                              <li>\n                                 Si desea buscar los mejores promedios quedese\n                                 en la pestaña que está.\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Ingrese si desea buscar los alumnos de\n                                       una categoría en especial, el año (si es\n                                       del corriente año, dejelo como está) y la\n                                       cantidad de alumno que desee que muestre\n                                       (generalmente al rededor de 10). La\n                                       cantidad de alumnos hay que ingresarlo\n                                       sino tira todos los alumnos desde el que\n                                       tiene el mejor promedio hasta el que\n                                       tiene el peor.\n                                    </p>\n                                 </div>\n                              </li>\n                              <li>\n                                 Si desea buscar las mejores asistencias o\n                                 asistencias perfectas, vaya a la pestaña\n                                 \"Asistencia\" que está arriba a la derecha.\n                                 <div className=\"list-inside\">\n                                    <p>\n                                       Ingrese si desea buscar los alumnos de\n                                       una categoría en especial, el año (si es\n                                       del corriente año, dejelo como está) y el\n                                       número de faltas que desee que tenga el\n                                       alumno (generalmente una para que\n                                       aparezcan los alumnos con asistencia\n                                       perfecta y casi perfecta, es decir, solo\n                                       una).\n                                    </p>\n                                 </div>\n                                 <li>\n                                    Haga click en el botón \"Buscar\"{\" \"}\n                                    <button className=\"btn btn-light\">\n                                       <BiFilterAlt />\n                                       &nbsp;Buscar\n                                    </button>\n                                    .\n                                 </li>\n                                 <li>\n                                    Si desea imprimir la lista, haga click en el\n                                    botón{\" \"}\n                                    <button className=\"btn btn-secondary\">\n                                       <ImFilePdf />\n                                    </button>{\" \"}\n                                    que está al final a la derecha.\n                                 </li>\n                              </li>\n                           </ul>\n                        )}\n                     </>\n                  </div>\n               )}\n            </div>\n         )}\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(Help);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({\r\n   type,\r\n   userType,\r\n   degree,\r\n   school,\r\n   cbvu,\r\n   alias,\r\n   onChange,\r\n}) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     onChange={onChange}\r\n                     value={cbvu}\r\n                     name=\"cbvu\"\r\n                     id=\"cbvu\"\r\n                     placeholder=\"CBU/CVU\"\r\n                  />\r\n                  <label htmlFor=\"cbvu\" className=\"form-label\">\r\n                     CBU/CVU\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"alias\"\r\n                     id=\"alias\"\r\n                     disabled={!isAdmin}\r\n                     value={alias}\r\n                     onChange={onChange}\r\n                     placeholder=\"Alias\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Alias\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      cbvu: \"\",\r\n      alias: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      cbvu,\r\n      alias,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               for (const x in prev)\r\n                  prev[x] =\r\n                     user[x] === undefined || user[x] === null\r\n                        ? prev[x]\r\n                        : x === \"dob\"\r\n                        ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                        : x === \"town\" || x === \"neighbourhood\"\r\n                        ? user[x]._id\r\n                        : user[x];\r\n               return prev;\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (\r\n            ![\"cbvu\", \"dni\"].includes(e.target.name) ||\r\n            !isNaN(e.target.value)\r\n         ) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n         case \"classManager\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     school={school}\r\n                     cbvu={cbvu}\r\n                     alias={alias}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"admin&teacher\":\r\n            return (\r\n               <EmployeeInfo\r\n                  type={type}\r\n                  userType={userLogged.type}\r\n                  cbvu={cbvu}\r\n                  alias={alias}\r\n                  onChange={onChange}\r\n               />\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           <option value=\"classManager\">Coordinador</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n      classManager: \"Coordinador\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   EXPENCES_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   EXPENCES_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   EXPENCES_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadExpences = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: EXPENCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/expence/withdrawal/bymonth?${filterData(formData)}`\r\n               : `/expence/withdrawal?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: EXPENCES_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCES_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scroll(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Egreso/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Egreso Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const expencesPDF = (expences, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const pdf = await api.post(\r\n         `/pdf/expence/${total === null ? \"withdrawal\" : \"list\"}`,\r\n         {\r\n            expences,\r\n            total,\r\n         },\r\n         {\r\n            responseType: \"blob\",\r\n         }\r\n      );\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearExpences = () => (dispatch) => {\r\n   dispatch({ type: EXPENCES_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\nimport api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\n\nimport { setAlert } from \"./alert\";\nimport {\n   updateLoadingSpinner,\n   filterData,\n   newObject,\n   setError,\n} from \"./global\";\n\nimport {\n   DAILIES_CLEARED,\n   DAILIES_ERROR,\n   DAILIES_LOADED,\n   DAILIES_PDF_ERROR,\n   DAILY_DELETED,\n   DAILY_ERROR,\n   DAILY_REGISTERED,\n} from \"./types\";\n\nexport const loadDailies = (formData, spinner) => async (dispatch) => {\n   if (spinner) dispatch(updateLoadingSpinner(true));\n   let error = false;\n\n   try {\n      const res = await api.get(`/daily?${filterData(formData)}`);\n      dispatch({\n         type: DAILIES_LOADED,\n         payload: res.data,\n      });\n   } catch (err) {\n      if (err.response.status !== 401) {\n         dispatch(setError(DAILIES_ERROR, err.response));\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n         window.scrollTo(0, 0);\n      } else error = true;\n   }\n\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\n};\n\nexport const registerDaily = (formData) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n\n   const daily = newObject(formData);\n\n   try {\n      const res = await api.post(\"/daily\", daily);\n\n      dispatch({\n         type: DAILY_REGISTERED,\n         payload: res.data,\n      });\n\n      dispatch(setAlert(\"Conteo de Caja Registrado\", \"success\", \"2\"));\n   } catch (err) {\n      if (err.response.status !== 401) {\n         dispatch(setError(DAILY_ERROR, err.response));\n\n         if (err.response.data.errors)\n            err.response.data.errors.forEach((error) => {\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\n            });\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      window.scroll(0, 0);\n      dispatch(updateLoadingSpinner(false));\n   }\n};\n\nexport const deleteDaily = (daily_id) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n\n   try {\n      await api.delete(`/daily/${daily_id}`);\n\n      dispatch({\n         type: DAILY_DELETED,\n         payload: daily_id,\n      });\n\n      dispatch(setAlert(\"Conteo de Caja Eliminado\", \"success\", \"2\"));\n   } catch (err) {\n      if (err.response.status !== 401) {\n         dispatch(setError(DAILY_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      window.scrollTo(0, 0);\n      dispatch(updateLoadingSpinner(false));\n   }\n};\n\nexport const dailyPDF = (dailies) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n\n   try {\n      const pdf = await api.post(\"/pdf/daily/list\", dailies, {\n         responseType: \"blob\",\n      });\n\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\n\n      saveAs(\n         pdfBlob,\n         `Lista de Cierres de Caja ${format(new Date(), \"dd-MM-yy\")}.pdf`\n      );\n\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\n   } catch (err) {\n      if (err.response.status !== 401) {\n         dispatch(setError(DAILIES_PDF_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      window.scrollTo(0, 0);\n      dispatch(updateLoadingSpinner(false));\n   }\n};\n\nexport const clearDailies = () => (dispatch) => {\n   dispatch({ type: DAILIES_CLEARED });\n};\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n   deleteRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearDailies } from \"../../../../../../../actions/daily\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearExpences,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   auth: { userLogged },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearExpences,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   deleteRegister,\r\n   togglePopup,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const { popupType } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"close\") {\r\n                  if (!register) createRegister({ difference, description });\r\n                  else closeRegister(formData);\r\n               } else {\r\n                  deleteRegister(register._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"close\" ? \"cerrar\" : \"reabrir\"\r\n            } la caja?`}\r\n         />\r\n         <form className=\"form\">\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearExpences();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/expence/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  {isAdmin && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Retiro de Dinero</td>\r\n                           <td>\r\n                              $\r\n                              {register &&\r\n                              register.temporary &&\r\n                              register.withdrawal\r\n                                 ? formatNumber(register.withdrawal)\r\n                                 : 0}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/withdrawal/list\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearExpences();\r\n                                    clearExpenceTypes();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Plata Caja</td>\r\n                           <td>\r\n                              $\r\n                              {register && formatNumber(register.registermoney)}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/daily\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearDailies();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Cierre</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center\">\r\n               {register && !register.temporary ? (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"reopen\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     className=\"btn btn-secondary\"\r\n                  >\r\n                     <FaTimes />\r\n                     <span className=\"hide-sm\">&nbsp; Reabrir Caja</span>\r\n                  </button>\r\n               ) : (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"close\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     disabled={!register && difference === \"\"}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <FiSave />\r\n                     <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n                  </button>\r\n               )}\r\n               {isAdmin && (\r\n                  <Link\r\n                     to=\"/register/list\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearRegisters();\r\n                     }}\r\n                     className=\"btn btn-light\"\r\n                  >\r\n                     <IoIosListBox />\r\n                     <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearExpences,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   clearDailies,\r\n   deleteRegister,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n   updateSalaries,\r\n} from \"../../../../../../../actions/global\";\r\nimport { getTeacherHours } from \"../../../../../../../actions/class\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   global: { salaries },\r\n   classes: {\r\n      otherValues: { teacherHours },\r\n   },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   updateSalaries,\r\n   getTeacherHours,\r\n   togglePopup,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      highHours: \"\",\r\n      lowHours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n      isTeacher: \"\",\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { highHours, lowHours, teacher, type, popupType, isTeacher } =\r\n      adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         highHours: \"\",\r\n         lowHours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   useEffect(() => {\r\n      if (teacher._id && isTeacher) getTeacherHours(teacher._id);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            highHours: \"\",\r\n            lowHours: \"\",\r\n         }));\r\n         setFormData((prev) => ({ ...prev, value: \"\" }));\r\n      }\r\n   }, [teacher, getTeacherHours, isTeacher]);\r\n\r\n   useEffect(() => {\r\n      if (teacherHours.lowHours !== undefined) {\r\n         setAdminValues((prev) => {\r\n            for (const x in teacherHours) prev[x] = teacherHours[x];\r\n            return prev;\r\n         });\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            value:\r\n               teacherHours.lowHours * salaries.lowerSalary +\r\n               teacherHours.highHours * salaries.higherSalary,\r\n         }));\r\n      }\r\n   }, [teacherHours, salaries]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      let newTeacher = users.find((user) => user._id === e.target.value);\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name !== \"teacher\"\r\n               ? e.target.value\r\n               : e.target.value !== \"\"\r\n               ? newTeacher\r\n               : {},\r\n         ...(newTeacher && {\r\n            isTeacher:\r\n               newTeacher.type !== \"secretary\" &&\r\n               newTeacher.type !== \"classManager\",\r\n         }),\r\n      }));\r\n\r\n      if (e.target.name === \"highHours\" || e.target.name === \"lowHours\") {\r\n         let value = 0;\r\n\r\n         switch (teacher.type) {\r\n            case \"secretary\":\r\n               value = e.target.value * salaries.adminSalary;\r\n               break;\r\n            case \"classManager\":\r\n               value = e.target.value * salaries.classManagerSalary;\r\n               break;\r\n            case \"teacher\":\r\n            case \"admin&teacher\":\r\n               if (e.target.name === \"highHours\")\r\n                  value =\r\n                     e.target.value * salaries.higherSalary +\r\n                     (lowHours !== \"\" ? lowHours * salaries.lowerSalary : 0);\r\n               else\r\n                  value =\r\n                     e.target.value * salaries.lowerSalary +\r\n                     (highHours !== \"\" ? highHours * salaries.higherSalary : 0);\r\n               break;\r\n            default:\r\n               break;\r\n         }\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            value,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            teacher,\r\n            description,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={\r\n               popupType === \"save\"\r\n                  ? confirm\r\n                  : (allSalaries) => updateSalaries(allSalaries)\r\n            }\r\n            info={\r\n               popupType === \"save\"\r\n                  ? \"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n                  : { salaries }\r\n            }\r\n            error={popupType === \"salary\"}\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n\r\n         {isAdmin && employeePaymentID === expencetype && (\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  onClick={() => {\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        popupType: \"salary\",\r\n                     }));\r\n                     togglePopup(\"salary\");\r\n                  }}\r\n                  className=\"btn btn-mix-secondary\"\r\n                  type=\"button\"\r\n               >\r\n                  <FaEdit /> &nbsp; Salarios\r\n               </button>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n\r\n               if (register) {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  {(isAdmin ||\r\n                     (register && register.registermoney <= 50000)) && (\r\n                     <tr>\r\n                        <td>Dinero en Caja</td>\r\n                        <td>\r\n                           $\r\n                           {register ? formatNumber(register.registermoney) : 0}\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n\r\n                  <tr>\r\n                     <td>Tipo de {isAdmin ? \"Movimiento\" : \"Egreso\"}</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de {isAdmin ? \"Movimiento\" : \"Egreso\"}\r\n                           </option>\r\n                           {expencetypes.map(\r\n                              (expty) =>\r\n                                 ((!isAdmin && expty.type === \"expence\") ||\r\n                                    isAdmin) && (\r\n                                    <option\r\n                                       key={expty._id}\r\n                                       name={expty.type}\r\n                                       value={expty._id}\r\n                                    >\r\n                                       {expty.name}\r\n                                    </option>\r\n                                 )\r\n                           )}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id ? teacher._id : \"\"}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value=\"\">* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       <option value={user._id}>\r\n                                          {user.lastname}, {user.name}\r\n                                       </option>\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>\r\n                              Horas\r\n                              {isTeacher ? \" Cursos Bajos\" : \"\"}\r\n                           </td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder={`Horas${\r\n                                    isTeacher ? \" Cursos Bajos\" : \"\"\r\n                                 }`}\r\n                                 value={lowHours}\r\n                                 name=\"lowHours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                        {isTeacher && (\r\n                           <tr>\r\n                              <td>Horas Cursos Altos</td>\r\n                              <td>\r\n                                 <input\r\n                                    type=\"number\"\r\n                                    onChange={onChangeAdmin}\r\n                                    placeholder=\"Horas Cursos Altos\"\r\n                                    value={highHours}\r\n                                    name=\"highHours\"\r\n                                 />\r\n                              </td>\r\n                           </tr>\r\n                        )}\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n   classes: state.classes,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n   updateSalaries,\r\n   getTeacherHours,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\nimport { loadSalaries } from \"../../../../../actions/global\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   global: { loading: loadingSalaries },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n   loadSalaries,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingSalaries) loadSalaries();\r\n   }, [loadingSalaries, loadSalaries]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && !loadingSalaries && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n   loadSalaries,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup, loadDiscount } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   global: { loading: loadingDiscount, discount },\r\n   togglePopup,\r\n   loadCategories,\r\n   loadDiscount,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(new Date(), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   useEffect(() => {\r\n      if (loadingDiscount) loadDiscount();\r\n   }, [loadDiscount, loadingDiscount]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories, discount.number, \"all\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories, discount.number, \"march\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con precios de marzo</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   loadDiscount,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            (format(new Date(classInfo.hourin1), \"HH:mm\") !==\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") ||\r\n               format(new Date(classInfo.hourout1), \"HH:mm\") !==\r\n                  format(new Date(classInfo.hourout2), \"HH:mm\"))\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: false }));\r\n\r\n         setFormData((prev) => {\r\n            let newClass = prev;\r\n\r\n            for (const x in classInfo) {\r\n               newClass[x] =\r\n                  classInfo[x] === null || classInfo[x] === undefined\r\n                     ? newClass[x]\r\n                     : x.substring(0, 4) === \"hour\"\r\n                     ? format(\r\n                          new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                          \"HH:mm\"\r\n                       )\r\n                     : x === \"teacher\"\r\n                     ? classInfo[x]._id\r\n                     : classInfo[x];\r\n            }\r\n            return newClass;\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport {\r\n   loadPenalty,\r\n   updateValues,\r\n   loadDiscount,\r\n} from \"../../../../../actions/global\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   global: { loading: loadingPenalty, penalty, discount },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updateValues,\r\n   loadDiscount,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) {\r\n         loadPenalty();\r\n         loadDiscount();\r\n      }\r\n   }, [loadingPenalty, loadPenalty, loadDiscount]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(values) => updateValues(values)}\r\n                  info={{ penalty, discount }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"values\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;<span className=\"hide-sm\">Recargo/Descuento</span>\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   global: state.global,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updateValues,\r\n   loadDiscount,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      status: \"\",\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, status, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  for (const x in prev)\r\n                     prev[x] =\r\n                        installment[x] === undefined || installment[x] === null\r\n                           ? prev[x]\r\n                           : installment[x];\r\n                  return prev;\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (\r\n         student &&\r\n         year !== \"\" &&\r\n         (loading || (enrollments[0] && enrollments[0].year !== year))\r\n      )\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n   }, [loadEnrollments, year, loading, student, enrollments]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...(number === 1 ||\r\n                        (number === 2 && {\r\n                           status: \"expired\",\r\n                           updatable: false,\r\n                        })),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <select\r\n                        className=\"form-input\"\r\n                        value={status}\r\n                        name=\"status\"\r\n                        id=\"status\"\r\n                        onChange={onChange}\r\n                     >\r\n                        <option value=\"\">* Estado de la cuota</option>\r\n                        <option value=\"valid\">Válida</option>\r\n                        <option value=\"debt\">Deuda</option>\r\n                        <option value=\"expired\">Vencida</option>\r\n                     </select>\r\n                     <label\r\n                        htmlFor=\"status\"\r\n                        className={`form-label ${status === \"\" ? \"lbl\" : \"\"}`}\r\n                     >\r\n                        Estado de la cuota\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \", \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2023</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" &&\r\n               userLogged.type !== \"classManager\" && (\r\n                  <Link\r\n                     to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                     onClick={() => {\r\n                        if (users.length !== 0) {\r\n                           window.scroll(0, 0);\r\n                           clearClass();\r\n                           clearSearch();\r\n                        }\r\n                     }}\r\n                     className={`btn ${\r\n                        users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                     }`}\r\n                  >\r\n                     <FaPlus />\r\n                     &nbsp;Nueva Clase\r\n                  </Link>\r\n               )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const month = new Date().getMonth() + 1;\n\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].filter(\n                  (item) => item.status !== \"expired\" && item.number > month\n               ).length > 2\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup, month]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   payCash,\r\n   payTransfer,\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   global: { discount },\r\n   categories: { categories },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n   payCash,\r\n   payTransfer,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n      totalDiscount: 0,\r\n      cash: false,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Part,Libre,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal, totalDiscount, cash } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n            totalDiscount: invoice.details.reduce(\r\n               (sum, detail) =>\r\n                  detail.discount ? +detail.discount + sum : sum,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : {\r\n                 [e.target.name]: e.target.value,\r\n              }),\r\n      }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n      setAdminValues((prev) => ({ ...prev, cash: e.target.checked }));\r\n\r\n      if (e.target.checked) payCash(discount.number, categories[0].value);\r\n      else payTransfer();\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() => {\r\n               let fullDiscount = 0;\r\n               let fullTotal = 0;\r\n               const newDetails = details.map((item) => {\r\n                  const payment = Number(\r\n                     item.payment.toString().replace(/,/g, \".\")\r\n                  );\r\n                  let discount = 0;\r\n                  let value = item.value;\r\n\r\n                  if (item.discount)\r\n                     if (item.value === payment) {\r\n                        discount = +item.discount;\r\n                        fullDiscount += discount;\r\n                     } else {\r\n                        discount = null;\r\n                        value = item.value + +item.discount;\r\n                     }\r\n\r\n                  fullTotal += value;\r\n                  return {\r\n                     ...item,\r\n                     payment,\r\n                     ...(discount !== 0 && {\r\n                        discount,\r\n                        value,\r\n                     }),\r\n                  };\r\n               });\r\n\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: fullTotal - total,\r\n                  discount: fullDiscount,\r\n                  details: newDetails,\r\n               });\r\n            }}\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <div className=\"text-right mt--1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={(e) => onChangeAdmin(e)}\r\n                  type=\"checkbox\"\r\n                  name=\"cash\"\r\n                  value={cash}\r\n                  id=\"cash\"\r\n               />\r\n\r\n               <label className=\"checkbox-lbl\" htmlFor=\"cash\">\r\n                  {cash ? \"Contado\" : \"Transferencia\"}\r\n               </label>\r\n            </div>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper mt-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           {(cash || invoice.added) && (\r\n                              <>\r\n                                 <th>Dto</th>\r\n                                 <th>A Pagar</th>\r\n                              </>\r\n                           )}\r\n                           {!invoice.added && (\r\n                              <th> {!cash ? \"A Pagar\" : \"Efectivo\"} </th>\r\n                           )}\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>\r\n                                       $\r\n                                       {formatNumber(\r\n                                          install.discount\r\n                                             ? +install.discount + install.value\r\n                                             : install.value\r\n                                       )}\r\n                                    </td>\r\n                                    {(cash || invoice.added) && (\r\n                                       <>\r\n                                          <td>\r\n                                             ${formatNumber(install.discount)}\r\n                                          </td>\r\n                                          <td>\r\n                                             ${formatNumber(install.value)}\r\n                                          </td>\r\n                                       </>\r\n                                    )}\r\n                                    {!invoice.added && (\r\n                                       <td>\r\n                                          <input\r\n                                             type=\"text\"\r\n                                             onChange={onChangeValue}\r\n                                             id={index}\r\n                                             placeholder=\"Monto\"\r\n                                             value={install.payment}\r\n                                          />\r\n                                       </td>\r\n                                    )}\r\n\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               {totalDiscount !== 0 && (\r\n                  <div className=\"invoice-detail\">\r\n                     <label htmlFor=\"total\">Descuento Total</label>\r\n                     <input\r\n                        type=\"number\"\r\n                        name=\"totalDiscount\"\r\n                        value={totalDiscount}\r\n                        disabled\r\n                     />\r\n                  </div>\r\n               )}\r\n               {invoice && !invoice.added && (\r\n                  <div className=\"invoice-detail\">\r\n                     <label htmlFor=\"remaining\">Saldo</label>\r\n                     <input\r\n                        type=\"number\"\r\n                        value={installmentTotal - total}\r\n                        disabled\r\n                        name=\"remaining\"\r\n                     />\r\n                  </div>\r\n               )}\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n   global: state.global,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n   payCash,\r\n   payTransfer,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\nimport { loadDiscount } from \"../../../../../../actions/global\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   loadDiscount,\r\n   loadCategories,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   categories: { loading: loadingCategories },\r\n   global: { loading },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadDiscount();\r\n   }, [loading, loadDiscount]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories();\r\n   }, [loadingCategories, loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   global: state.global,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   getInvoiceNumber,\r\n   loadDiscount,\r\n   loadCategories,\r\n})(InvoiceGeneration);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      discount: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user, discount } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            discount: invoice.details.reduce(\r\n               (sum, detail) =>\r\n                  detail.discount ? +detail.discount + sum : sum,\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           {discount !== 0 && (\r\n                              <>\r\n                                 <th>Descuento</th>\r\n                                 <th>A Pagar</th>\r\n                              </>\r\n                           )}\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>\r\n                                 $\r\n                                 {formatNumber(\r\n                                    invoice.discount\r\n                                       ? invoice.discount + invoice.value\r\n                                       : invoice.value\r\n                                 )}\r\n                              </td>\r\n                              {discount !== 0 && (\r\n                                 <>\r\n                                    <td>\r\n                                       {invoice.discount\r\n                                          ? \"$\" + formatNumber(invoice.discount)\r\n                                          : \"-\"}\r\n                                    </td>\r\n                                    <td>${formatNumber(invoice.value)}</td>\r\n                                 </>\r\n                              )}\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  {discount !== 0 && (\r\n                     <p>\r\n                        <span className=\"heading-tertiary text-dark\">\r\n                           Descuento Total:\r\n                        </span>\r\n                        <input\r\n                           className=\"value paragraph\"\r\n                           value={`$${formatNumber(discount)}`}\r\n                           disabled\r\n                        />\r\n                     </p>\r\n                  )}\r\n                  {remaining !== 0 && (\r\n                     <p>\r\n                        <span className=\"heading-tertiary text-dark\">\r\n                           Saldo:\r\n                        </span>\r\n                        <input\r\n                           className=\"value paragraph\"\r\n                           value={`$${formatNumber(remaining)}`}\r\n                           disabled\r\n                        />\r\n                     </p>\r\n                  )}\r\n\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF(\r\n                        { ...invoice, user, remaining, discount },\r\n                        \"invoice\"\r\n                     );\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Egreso</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Egreso\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               max={endDate !== \"\" ? endDate : \"\"}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               min={startDate !== \"\" ? startDate : \"\"}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   auth: { userLogged },\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: invoices.reduce((sum, invoice) => sum + invoice.total, 0),\r\n         }));\r\n      }\r\n   }, [loading, loadInvoices, invoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         {userLogged.type !== \"secretary\" && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadExpences,\r\n   deleteExpence,\r\n   expencesPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceList = ({\r\n   auth: { userLogged },\r\n   expences: { expences, loading },\r\n   registers: { register, loadingRegister },\r\n   loadExpences,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   expencesPDF,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: `${new Date().getFullYear()}-01-01`,\r\n      endDate: \"\",\r\n      expencetype: \"expence\",\r\n   });\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadExpences(filterData, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: expences.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loading, loadExpences, isAdmin, expences]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Egresos</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         {isAdmin && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadExpences(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Descripción</th>\r\n                     <th>Importe</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     expences.map(\r\n                        (expence, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 <tr key={expence._id}>\r\n                                    <td>\r\n                                       {format(\r\n                                          new Date(expence.date),\r\n                                          \"dd/MM/yy\"\r\n                                       )}\r\n                                    </td>\r\n                                    <td>{expence.expencetype.name}</td>\r\n                                    <td>{expence.description}</td>\r\n                                    <td>${formatNumber(expence.value)}</td>\r\n                                    <td>\r\n                                       {expence.register === register._id &&\r\n                                          register.temporary && (\r\n                                             <button\r\n                                                onClick={(e) => {\r\n                                                   e.preventDefault();\r\n                                                   setAdminValues((prev) => ({\r\n                                                      ...prev,\r\n                                                      toDelete: expence._id,\r\n                                                   }));\r\n                                                   togglePopup(\"default\");\r\n                                                }}\r\n                                                className=\"btn btn-danger\"\r\n                                             >\r\n                                                <FaTrashAlt />\r\n                                             </button>\r\n                                          )}\r\n                                    </td>\r\n                                 </tr>\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={expences}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => expencesPDF(expences)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpences,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   expencesPDF,\r\n})(ExpenceList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/installment\";\r\nimport { formatNumber, loadDiscount } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   installments: {\r\n      installments,\r\n      loading,\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   global: { discount, loading: loadingDiscount },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   loadDiscount,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (loadingDiscount) loadDiscount();\r\n   }, [loadingDiscount, loadDiscount]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Categoría</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td>\r\n                                    {installment.enrollment &&\r\n                                       installment.enrollment.category.name}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.status === \"expired\"\r\n                                          ? \"installment\"\r\n                                          : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() =>\r\n                  installmentsPDF(installments, discount.number)\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   global: state.global,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   loadDiscount,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst RegisterList = ({\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Caja Diaria</h2>\r\n         <div className=\"btn-right mb-1\">\r\n            <Link\r\n               to=\"/register/monthly-list\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearRegisters();\r\n               }}\r\n               className=\"btn btn-light\"\r\n            >\r\n               <IoIosListBox />\r\n               <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n            </Link>\r\n         </div>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           register.temporary === false && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   expencesPDF,\r\n   deleteExpence,\r\n   clearExpences,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { expences, loading, expencetypes, loadingET },\r\n   registers: { register, loadingRegister },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   loadRegister,\r\n   deleteExpence,\r\n   togglePopup,\r\n   clearExpences,\r\n   expencesPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { total, page, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading || (expences[0] && expences[0].month))\r\n         loadWithdrawals({}, true, false);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: expences.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, expences]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el retiro?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         <p className=\"heading-tertiary text-moved-right\">\r\n            Total: ${formatNumber(total)}\r\n         </p>\r\n         <div className=\"btn-right mb-1\">\r\n            <Link\r\n               to=\"/register/withdrawal/monthly-list\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearExpences();\r\n               }}\r\n               className=\"btn btn-light\"\r\n            >\r\n               <IoIosListBox />\r\n               <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"expencetype\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            {!loading &&\r\n               !loadingRegister &&\r\n               expences[0] &&\r\n               expences[0].month === undefined && (\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Fecha</th>\r\n                           <th>Tipo</th>\r\n                           <th>Importe</th>\r\n                           <th>Descripción</th>\r\n                           {expences[0].register &&\r\n                              expences[0].register === register._id &&\r\n                              register.temporary && <th>&nbsp;</th>}\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {expences.map(\r\n                           (expence, i) =>\r\n                              i >= page * 10 &&\r\n                              i < (page + 1) * 10 && (\r\n                                 <tr key={expence._id}>\r\n                                    <td>\r\n                                       {format(\r\n                                          new Date(expence.date),\r\n                                          \"dd/MM/yy\"\r\n                                       )}\r\n                                    </td>\r\n                                    <td>{expence.expencetype.name}</td>\r\n                                    <td>${formatNumber(expence.value)}</td>\r\n                                    <td>{expence.description}</td>\r\n                                    {expences[0].register &&\r\n                                       expences[0].register === register._id &&\r\n                                       register.temporary && (\r\n                                          <td>\r\n                                             {expence.register &&\r\n                                                expence.register ===\r\n                                                   register._id && (\r\n                                                   <button\r\n                                                      type=\"button\"\r\n                                                      onClick={(e) => {\r\n                                                         e.preventDefault();\r\n                                                         setAdminValues(\r\n                                                            (prev) => ({\r\n                                                               ...prev,\r\n                                                               toDelete:\r\n                                                                  expence._id,\r\n                                                            })\r\n                                                         );\r\n                                                         togglePopup(\"default\");\r\n                                                      }}\r\n                                                      className=\"btn btn-danger\"\r\n                                                   >\r\n                                                      <FaTrashAlt />\r\n                                                   </button>\r\n                                                )}\r\n                                          </td>\r\n                                       )}\r\n                                 </tr>\r\n                              )\r\n                        )}\r\n                     </tbody>\r\n                  </table>\r\n               )}\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={expences}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => expencesPDF(expences, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   loadRegister,\r\n   expencesPDF,\r\n   clearExpences,\r\n   togglePopup,\r\n   deleteExpence,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ImFilePdf } from \"react-icons/im\";\nimport { BiFilterAlt } from \"react-icons/bi\";\n\nimport {\n   loadWithdrawals,\n   expencesPDF,\n} from \"../../../../../../actions/expence\";\nimport { formatNumber } from \"../../../../../../actions/global\";\n\nconst WithdrawalXMonthList = ({\n   expences: { expences, loading },\n   loadWithdrawals,\n   expencesPDF,\n}) => {\n   const thisYear = new Date().getFullYear();\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\n\n   const [filterData, setFilterData] = useState({\n      year: thisYear,\n   });\n\n   const { year } = filterData;\n\n   useEffect(() => {\n      if (loading) loadWithdrawals({ year: thisYear }, true, true);\n   }, [loading, loadWithdrawals, thisYear]);\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData({\n         ...filterData,\n         [e.target.name]: e.target.value,\n      });\n   };\n\n   return (\n      <>\n         <h2>Retiros por Mes</h2>\n\n         <form\n            className=\"form\"\n            onSubmit={(e) => {\n               e.preventDefault();\n               loadWithdrawals(filterData, true, true);\n            }}\n         >\n            <div className=\"form-group\">\n               <select\n                  className=\"form-input\"\n                  id=\"year\"\n                  name=\"year\"\n                  onChange={onChange}\n                  value={year}\n               >\n                  <option value=\"\">* Seleccione el Año</option>\n                  {yearArray.map((item) => (\n                     <option key={item} value={item}>\n                        {item}\n                     </option>\n                  ))}\n               </select>\n               <label\n                  htmlFor=\"year\"\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\n               >\n                  Año\n               </label>\n            </div>\n            <div className=\"btn-right mb-1\">\n               <button type=\"submit\" className=\"btn btn-light\">\n                  <BiFilterAlt />\n                  &nbsp;Buscar\n               </button>\n            </div>\n         </form>\n\n         <div className=\"wrapper\">\n            <table className=\"my-2\">\n               <thead>\n                  <tr>\n                     <th className=\"blank\"></th>\n                     {!loading &&\n                        typeof expences[0] === \"object\" &&\n                        Object.keys(expences[0]).map(\n                           (item, index) =>\n                              item !== \"month\" && <th key={index}>{item}</th>\n                        )}\n                  </tr>\n               </thead>\n               <tbody>\n                  {!loading &&\n                     expences.map((expence, index1) => (\n                        <tr key={index1}>\n                           {Object.keys(expence).map((item, index) =>\n                              index === 0 ? (\n                                 <th key={index} className=\"small\">\n                                    {expence[item]}\n                                 </th>\n                              ) : (\n                                 <td key={index}>\n                                    {expence[item] === 0\n                                       ? \"-\"\n                                       : \"$\" + formatNumber(expence[item])}\n                                 </td>\n                              )\n                           )}\n                        </tr>\n                     ))}\n               </tbody>\n            </table>\n         </div>\n         {!loading && (\n            <div className=\"btn-right\">\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary tooltip\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        expencesPDF(expences, null);\n                     }}\n                  >\n                     <ImFilePdf />\n                  </button>\n                  <span className=\"tooltiptext\">PDF con retiros mensuales</span>\n               </div>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStatetoProps = (state) => ({\n   expences: state.expences,\n});\n\nexport default connect(mapStatetoProps, {\n   loadWithdrawals,\n   expencesPDF,\n})(WithdrawalXMonthList);\n","import React, { useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { connect } from \"react-redux\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaTrashAlt } from \"react-icons/fa\";\n\nimport { formatNumber } from \"../../../../../../actions/global\";\nimport { loadRegister } from \"../../../../../../actions/register\";\nimport { togglePopup } from \"../../../../../../actions/global\";\nimport {\n   loadDailies,\n   registerDaily,\n   deleteDaily,\n   dailyPDF,\n} from \"../../../../../../actions/daily\";\n\nimport ListButtons from \"../sharedComp/ListButtons\";\nimport DateFilter from \"../sharedComp/DateFilter\";\nimport Popup from \"../../../../../modal/PopUp\";\n\nconst DailyList = ({\n   dailies: { dailies, loading },\n   registers: { loadingRegister, register: lastRegister },\n   loadDailies,\n   loadRegister,\n   registerDaily,\n   deleteDaily,\n   dailyPDF,\n   togglePopup,\n}) => {\n   const [filterData, setFilterData] = useState({\n      startDate: \"\",\n      endDate: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      page: 0,\n      popupType: \"\",\n      toDelete: \"\",\n   });\n\n   const [formData, setFormData] = useState({\n      register: \"\",\n      box: \"\",\n      envelope: \"\",\n      home: \"\",\n      bank: \"\",\n      change: \"\",\n      difference: 0,\n   });\n\n   const { page, popupType, toDelete } = adminValues;\n\n   const { startDate, endDate } = filterData;\n\n   const { box, envelope, home, bank, change, difference } = formData;\n\n   useEffect(() => {\n      if (loading) loadDailies({}, true);\n   }, [loading, loadDailies]);\n\n   useEffect(() => {\n      if (loadingRegister) loadRegister(false);\n      else if (lastRegister)\n         setFormData((prev) => ({ ...prev, register: lastRegister._id }));\n   }, [loadingRegister, loadRegister, lastRegister]);\n\n   const onChangeFilter = (e) => {\n      e.persist();\n      setFilterData((prev) => ({\n         ...prev,\n         [e.target.name]: e.target.value,\n      }));\n   };\n\n   const onChange = (e) => {\n      e.persist();\n\n      const value = getNumber(e.target.value);\n      if (value !== null && value >= 0) {\n         const difference = -(\n            lastRegister.registermoney -\n            getNumber(box) -\n            getNumber(envelope) -\n            getNumber(home) -\n            getNumber(bank) -\n            getNumber(change) +\n            getNumber(formData[e.target.name]) -\n            value\n         );\n\n         setFormData((prev) => ({\n            ...prev,\n            difference,\n            [e.target.name]: e.target.value,\n         }));\n      }\n   };\n\n   const getNumber = (number) => {\n      number = Number(number.replace(/,/g, \".\"));\n      if (isNaN(number)) return null;\n      else return number;\n   };\n\n   return (\n      <>\n         <h2>Cierre de Caja</h2>\n         <Popup\n            confirm={() => {\n               if (popupType === \"save\") registerDaily(formData);\n               else deleteDaily(toDelete);\n            }}\n            info={`¿Está seguro que desea ${\n               popupType === \"save\"\n                  ? \"guardar los cambios\"\n                  : \"eliminar el cierre de caja\"\n            }?`}\n         />\n         <form\n            className=\"form\"\n            onSubmit={(e) => {\n               e.preventDefault();\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\n               loadDailies(filterData, true);\n            }}\n         >\n            <DateFilter\n               endDate={endDate}\n               startDate={startDate}\n               onChange={onChangeFilter}\n            />\n            <div className=\"btn-right my-1\">\n               <button type=\"submit\" className=\"btn btn-light\">\n                  <BiFilterAlt />\n                  &nbsp;Buscar\n               </button>\n            </div>\n         </form>\n         <div className=\"wrapper\">\n            <table className=\"my-2\">\n               <thead>\n                  <tr>\n                     <th>Fecha</th>\n                     <th>En Caja</th>\n                     <th>Negra</th>\n                     <th>Rosa</th>\n                     <th>Casa</th>\n                     <th>Cuenta</th>\n                     <th>Cambio</th>\n                     <th>Diferencia</th>\n                     <th></th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {lastRegister &&\n                     !lastRegister.temporary &&\n                     (!dailies[0] ||\n                        (dailies[0] &&\n                           dailies[0].register._id !== lastRegister._id)) && (\n                        <tr>\n                           <td>{format(new Date(), \"dd/MM/yy\")}</td>\n                           <td>${formatNumber(lastRegister.registermoney)}</td>\n                           <td>\n                              <input\n                                 type=\"text\"\n                                 name=\"box\"\n                                 value={box}\n                                 onChange={onChange}\n                                 placeholder=\"Negra\"\n                              />\n                           </td>\n                           <td>\n                              <input\n                                 type=\"text\"\n                                 name=\"envelope\"\n                                 value={envelope}\n                                 onChange={onChange}\n                                 placeholder=\"Rosa\"\n                              />\n                           </td>\n                           <td>\n                              <input\n                                 type=\"text\"\n                                 name=\"home\"\n                                 value={home}\n                                 onChange={onChange}\n                                 placeholder=\"Casa\"\n                              />\n                           </td>\n                           <td>\n                              <input\n                                 type=\"text\"\n                                 name=\"bank\"\n                                 value={bank}\n                                 onChange={onChange}\n                                 placeholder=\"Cuenta\"\n                              />\n                           </td>\n                           <td>\n                              <input\n                                 type=\"text\"\n                                 name=\"change\"\n                                 value={change}\n                                 onChange={onChange}\n                                 placeholder=\"Cambio\"\n                              />\n                           </td>\n                           <td>${formatNumber(difference)}</td>\n                           <td>\n                              <button\n                                 onClick={(e) => {\n                                    e.preventDefault();\n                                    setAdminValues((prev) => ({\n                                       ...prev,\n                                       popupType: \"save\",\n                                    }));\n                                    togglePopup(\"default\");\n                                 }}\n                                 className=\"btn btn-success\"\n                              >\n                                 <FiSave />\n                              </button>\n                           </td>\n                        </tr>\n                     )}\n                  {!loading &&\n                     dailies.map(\n                        (daily, i) =>\n                           i >= page * 10 &&\n                           i < (page + 1) * 10 &&\n                           daily && (\n                              <tr key={i}>\n                                 <td>\n                                    {format(new Date(daily.date), \"dd/MM/yy\")}\n                                 </td>\n                                 <td>\n                                    $\n                                    {formatNumber(daily.register.registermoney)}\n                                 </td>\n                                 <td>\n                                    {daily.box && \"$\" + formatNumber(daily.box)}\n                                 </td>\n                                 <td>\n                                    {daily.envelope &&\n                                       \"$\" + formatNumber(daily.envelope)}\n                                 </td>\n                                 <td>\n                                    {daily.home &&\n                                       \"$\" + formatNumber(daily.home)}\n                                 </td>\n                                 <td>\n                                    {daily.bank &&\n                                       \"$\" + formatNumber(daily.bank)}\n                                 </td>\n                                 <td>\n                                    {daily.change &&\n                                       \"$\" + formatNumber(daily.change)}\n                                 </td>\n                                 <td>${formatNumber(daily.difference)}</td>\n                                 <td>\n                                    <button\n                                       onClick={(e) => {\n                                          e.preventDefault();\n                                          setAdminValues((prev) => ({\n                                             ...prev,\n                                             popupType: \"delete\",\n                                             toDelete: daily._id,\n                                          }));\n                                          togglePopup(\"default\");\n                                       }}\n                                       className=\"btn btn-danger\"\n                                    >\n                                       <FaTrashAlt />\n                                    </button>\n                                 </td>\n                              </tr>\n                           )\n                     )}\n               </tbody>\n            </table>\n         </div>\n         {!loading && (\n            <ListButtons\n               items={dailies}\n               type=\"cajas diarias\"\n               page={page}\n               changePage={(page) =>\n                  setAdminValues((prev) => ({ ...prev, page }))\n               }\n               pdfGenerator={() => dailyPDF(dailies)}\n            />\n         )}\n      </>\n   );\n};\n\nconst mapStatetoProps = (state) => ({\n   auth: state.auth,\n   registers: state.registers,\n   dailies: state.dailies,\n});\n\nexport default connect(mapStatetoProps, {\n   loadDailies,\n   loadRegister,\n   registerDaily,\n   deleteDaily,\n   dailyPDF,\n   togglePopup,\n})(DailyList);\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\nimport Help from \"../../pages/registered/Help\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport ExpenceList from \"../../pages/registered/admin/lists/ExpenceList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\nimport WithdrawalXMonthList from \"../../pages/registered/admin/lists/WithdrawalXMonthList\";\r\nimport DailyList from \"../../pages/registered/admin/lists/DailyList\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"admin&teacher\",\r\n                  \"student\",\r\n                  \"guardian\",\r\n               ]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\r\n                  \"admin\",\r\n                  \"secretary\",\r\n                  \"teacher\",\r\n                  \"admin&teacher\",\r\n                  \"classManager\",\r\n               ]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/help\"\r\n               component={Help}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"guardian\", \"student\", \"teacher\", \"classManager\"]}\r\n               path=\"/help\"\r\n               component={Help}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expence/list\"\r\n               component={ExpenceList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/daily\"\r\n               component={DailyList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/monthly-list\"\r\n               component={WithdrawalXMonthList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}