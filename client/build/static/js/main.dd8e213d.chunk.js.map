{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/penalty.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","actions/register.js","actions/invoice.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","actions/penalty.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","estimatedProfit","penalty","observations","combineReducers","alert","state","action","type","payload","filter","id","auth","map","SingleClass","_id","item","category","students","student","monthlyDebt","expences","loadingTransactions","gradeType","value","studentsD","some","number","detail","payment","discount","details","global","nav","toggle","neighbourhood","penalties","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","setTimeout","updateLoadingSpinner","bool","toggleMenu","togglePopup","updateCurrentNav","setError","response","userType","data","errors","statusText","status","formatNumber","Intl","NumberFormat","format","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","async","api","get","err","attendancesPDF","header","post","pdf","responseType","pdfBlob","Blob","saveAs","teacher","Date","window","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","scrollTo","clearGrades","clearGradeTypes","loadClass","res","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","invoicesPDF","date","clearInvoice","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","findIndex","current","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","console","log","files","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","penaltyPercentage","setPenaltyPercentage","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","onChangeBackup","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","Math","round","Number","EPSILON","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","toDelete","expired","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","createBackup","blob","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","public_id","studentnumber","guardian","secretary","admin","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","salary","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","find","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","oldUser","isNaN","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadExpenceTypes","expenceType","transactionsPDF","total","clearExpenceTypes","closeRegister","createRegister","clearInvoices","clearTransactions","difference","withdrawal","registermoney","colSpan","registerExpence","expencetype","hours","options","selectedIndex","getAttribute","onChangeAdmin","expty","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","oldClass","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","oldInstallment","setfilterForm","addDiscount","reduce","curr","assign","every","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","sum","onChangeValue","newDetails","accum","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","getMonth","month","c","EditButtons","save","updateTowns","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","loadInvoices","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","transaction","getEstimatedProfit","installmentsPDF","installmentName","deleteRegister","register_id","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","loadWithdrawals","expT","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd8e213d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n\r\n//Penalty\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const PENALTY_REGISTERED = \"PENALTY_REGISTERED\";\r\nexport const PENALTY_CLEARED = \"PENALTY_CLEARED\";\r\nexport const PENALTY_ERROR = \"PENALTY_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\t\tcase ALERT_SETTED:\r\n\t\t\treturn [...state, payload];\r\n\t\tcase ALERT_REMOVED:\r\n\t\t\treturn state.filter((alert) => alert.id !== payload);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n               monthlyDebt: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2\r\n                  ? payload.value - (payload.value * 10) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  const value =\r\n                     item.number > 2\r\n                        ? item.value - (item.value * 10) / 100\r\n                        : item.value;\r\n\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: null,\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n      case PENALTY_REGISTERED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n         };\r\n      case PENALTY_CLEARED:\r\n         return initialState;\r\n      case PENALTY_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport penalties from \"./penalty\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   penalties,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { ALERT_REMOVED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n      dispatch({\r\n         type: ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n         },\r\n      });\r\n\r\n      setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         4000\r\n      );\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = () => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\");\r\n\r\n      const blob = await api.get(\"/backup/fetch\", {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || !info.students.some((item) => item.checked)) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  } ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.category} de ${info.teacher}`;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/money\");\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {users[teamNumber].type === \"admin&teacher\"\r\n                           ? `Director${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             } y Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : users[teamNumber].type === \"teacher\"\r\n                           ? `Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : `Secretari${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"o\"\r\n                             }`}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"search\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"classes\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let currentNav = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            switch (userLogged.type) {\r\n               case \"guardian\":\r\n                  if (path[3] !== \"0\")\r\n                     currentNav =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                  break;\r\n               case \"student\":\r\n                  if (enrollments.length > 0) {\r\n                     if (path[3] === \"0\") currentNav = \"class-\" + 0;\r\n                     else {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        currentNav = \"class-\" + index;\r\n                     }\r\n                  } else currentNav = \"index\";\r\n                  break;\r\n               default:\r\n                  currentNav = \"user\";\r\n                  break;\r\n            }\r\n         }\r\n\r\n         updateCurrentNav(currentNav, false);\r\n      }\r\n   }, [userLogged, updateCurrentNav, location.pathname, enrollments]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.percentage}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            {students.map((student, i) => (\n               <div className=\"student\" key={i}>\n                  <p className=\"name\">{student.name}</p>\n                  <input\n                     className=\"form-checkbox\"\n                     type=\"checkbox\"\n                     checked={student.checked}\n                     onChange={(e) => onChange(e, i)}\n                     name=\"student\"\n                     id={`cb${period}-${i}`}\n                  />\n                  <label\n                     className=\"checkbox-lbl\"\n                     id=\"check\"\n                     htmlFor={`cb${period}-${i}`}\n                  >\n                     {student.checked ? \"Si\" : \"No\"}\n                  </label>\n               </div>\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      console.log(\"hola\");\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"form restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark m-1\">\n            Seleccione el backup que desea restaurar\n         </h5>\n         <p className=\"text-lighter-primary restore-file\">\n            {selectedFile !== \"\" && (\n               <>\n                  {selectedFile.name}\n                  <button\n                     type=\"button\"\n                     onClick={() =>\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           selectedFile: \"\",\n                           fileIn: false,\n                        }))\n                     }\n                     className=\"btn-cancel\"\n                  >\n                     <FaTimes />\n                  </button>\n               </>\n            )}\n         </p>\n         <div className=\"upl-img\">\n            <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n               <input\n                  id=\"fileInput\"\n                  type=\"file\"\n                  name=\"image\"\n                  onChange={fileSelected}\n                  onClick={() => console.log(\"hola\")}\n                  className=\"upload\"\n               />\n               <span>\n                  <FaCloudUploadAlt />\n                  &nbsp;Subir Backup\n               </span>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup } from \"../../../actions/global\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\nimport RestoreDB from \"./RestoreDB\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info && info.students)\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: info.students.map((item) => {\r\n               return {\r\n                  ...item,\r\n                  name: item.lastname + \", \" + item.name,\r\n                  checked: false,\r\n               };\r\n            }),\r\n         }));\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return <RestoreDB onChange={onChangeBackup} setAlert={setAlert} />;\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               <div\r\n                  className={popupType === \"certificate\" ? \"wrapper both\" : \"\"}\r\n               >\r\n                  {chooseType(popupType)}\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     switch (popupType) {\r\n                        case \"penalty\":\r\n                           confirm(penaltyPercentage);\r\n                           setPenaltyPercentage(\"\");\r\n                           break;\r\n                        case \"certificate\":\r\n                           confirm(certificate);\r\n                           setCertificate({ date: \"\", students: [] });\r\n                           break;\r\n                        case \"new-date\":\r\n                           confirm(newDate);\r\n                           setNewDate({ fromDate: \"\", toDate: \"\", date: \"\" });\r\n                           break;\r\n                        case \"new-grade\":\r\n                           confirm(newGradeType);\r\n                           setNewGradeType(\"\");\r\n                           break;\r\n                        case \"backup\":\r\n                           confirm(backup);\r\n                           setBackup(\"\");\r\n                           break;\r\n                        default:\r\n                           confirm();\r\n                           break;\r\n                     }\r\n                     if (!error) togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Aceptar\r\n               </button>\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { togglePopup, setAlert })(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.expired &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && !loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && !loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (user.active && !loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               {!loadingInstallments && installments.length > 0 && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Cuotas Pendientes\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={false}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && userLogged.type !== \"secretary\") getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, userLogged]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ teacher: user._id }, false);\r\n   }, [user._id, loadClasses, loading]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={false}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return <>{(isAdmin || !_id) && <TeacherDashboard user={user} />}</>;\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup();\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                           {isOwner && whenNull(user.salary) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Salario: </span>\r\n                                 {user.salary}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" && (\r\n                              <>\r\n                                 <div className=\"tooltip\">\r\n                                    <Link\r\n                                       to={\r\n                                          classInfo.year === year\r\n                                             ? `/class/edit/${classInfo._id}`\r\n                                             : \"#\"\r\n                                       }\r\n                                       className={`btn ${\r\n                                          classInfo.year === year\r\n                                             ? \"btn-mix-secondary\"\r\n                                             : \"btn-black\"\r\n                                       }`}\r\n                                       onClick={() => {\r\n                                          if (classInfo.year === year) {\r\n                                             window.scroll(0, 0);\r\n                                             clearSearch();\r\n                                          }\r\n                                       }}\r\n                                    >\r\n                                       <FaEdit />\r\n                                    </Link>\r\n                                    <span className=\"tooltiptext\">Editar</span>\r\n                                 </div>\r\n\r\n                                 <div className=\"tooltip\">\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTrashAlt />\r\n                                    </button>\r\n                                    <span className=\"tooltiptext\">\r\n                                       Eliminar\r\n                                    </span>\r\n                                 </div>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete.date,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances[i] &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"checkbox\"\r\n                                       checked={!row.inassistance}\r\n                                       className=\"option-input\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues({\r\n                                             ...adminValues,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row,\r\n                                          });\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students: students.slice(0, -1),\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades[i] &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 {row.student ? (\r\n                                    <input\r\n                                       type=\"text\"\r\n                                       name={row.name}\r\n                                       onChange={(e) => onChange(e, i, key)}\r\n                                       value={row.value}\r\n                                       disabled={year !== classInfo.year}\r\n                                       placeholder=\"Nota\"\r\n                                    />\r\n                                 ) : (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                             toDelete: row.gradetype,\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTimes />\r\n                                    </button>\r\n                                 )}\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students:\r\n                                    year === classInfo.year\r\n                                       ? students.slice(0, -1)\r\n                                       : students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({ type, userType, salary, degree, school, onChange }) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isOwner && (\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  onChange={onChange}\r\n                  value={salary}\r\n                  name=\"salary\"\r\n                  id=\"salary\"\r\n                  placeholder=\"Salario por hora\"\r\n               />\r\n               <label htmlFor=\"salary\" className=\"form-label\">\r\n                  Salario por hora\r\n               </label>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      salary: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      salary,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               let oldUser = {};\r\n               for (const x in prev) {\r\n                  oldUser[x] = !user[x]\r\n                     ? prev[x]\r\n                     : x === \"dob\"\r\n                     ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                     : x === \"town\" || x === \"neighbourhood\"\r\n                     ? user[x]._id\r\n                     : user[x];\r\n               }\r\n               return {\r\n                  ...oldUser,\r\n                  discount: user.discount,\r\n                  active: user.active,\r\n               };\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (e.target.name !== \"dni\" || !isNaN(e.target.value)) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     salary={salary}\r\n                     school={school}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence/withdrawal?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Gasto/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Gasto Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF = (transactions, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (total)\r\n         await api.post(\"/pdf/expence/withdrawal-list\", {\r\n            transactions,\r\n            total,\r\n         });\r\n      else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n      const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   const confirm = () => {\r\n      if (!register) createRegister({ difference, description });\r\n      else closeRegister(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea cerrar la caja?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (!register || (register && register.temporary))\r\n                  togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Retiro de Dinero</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.withdrawal\r\n                           ? formatNumber(register.withdrawal)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/withdrawal/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Plata Caja</td>\r\n                     <td>\r\n                        ${register && formatNumber(register.registermoney)}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           to=\"/register/list\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearRegisters();\r\n                           }}\r\n                           className=\"btn btn-light\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  disabled={!register || (register && !register.temporary)}\r\n                  className={`btn ${\r\n                     (register && !register.temporary) || !register\r\n                        ? \"btn-black\"\r\n                        : \"btn-primary\"\r\n                  }`}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { setAlert } from \"../../../../../../../actions/alert\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../../sharedComp/Alert\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   togglePopup,\r\n   setAlert,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      hours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { hours, teacher, type } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         hours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name === \"teacher\"\r\n               ? users.find((user) => user._id === e.target.value)\r\n               : e.target.value,\r\n      }));\r\n\r\n      if (e.target.name === \"hours\") {\r\n         if (teacher.salary && teacher.salary !== \"\") {\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               value: e.target.value * teacher.salary,\r\n            }));\r\n         } else {\r\n            window.scroll(0, 0);\r\n            setAlert(\r\n               \"No está definido el salario del empleado seleccionado\",\r\n               \"danger\",\r\n               \"3\"\r\n            );\r\n         }\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            description: `${\r\n               expencetype === employeePaymentID && teacher._id\r\n                  ? `Pago a ${teacher.lastname}, ${teacher.name}. `\r\n                  : \"\"\r\n            }${description}`,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={confirm}\r\n            info=\"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               if (register) togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Dinero en Caja</td>\r\n                     <td>\r\n                        ${register ? formatNumber(register.registermoney) : 0}\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Tipo de Movimiento</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de Movimiento\r\n                           </option>\r\n                           {expencetypes.map((expty) => (\r\n                              <option\r\n                                 key={expty._id}\r\n                                 name={expty.type}\r\n                                 value={expty._id}\r\n                              >\r\n                                 {expty.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value={0}>* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       {user.type !== \"admin&teacher\" && (\r\n                                          <option value={user._id}>\r\n                                             {user.lastname}, {user.name}\r\n                                          </option>\r\n                                       )}\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Horas</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder=\"Horas\"\r\n                                 value={hours}\r\n                                 name=\"hours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   setAlert,\r\n   togglePopup,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(addMonths(new Date(), 1), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            format(new Date(classInfo.hourin1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") &&\r\n            format(new Date(classInfo.hourout1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourout2), \"HH:mm\")\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: true }));\r\n\r\n         setFormData((prev) => {\r\n            let oldClass = {};\r\n            for (const x in prev) {\r\n               oldClass[x] = !classInfo[x]\r\n                  ? prev[x]\r\n                  : x.substring(0, 4) === \"hour\"\r\n                  ? format(\r\n                       new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                       \"HH:mm\"\r\n                    )\r\n                  : x === \"teacher\"\r\n                  ? classInfo[x]._id\r\n                  : classInfo[x];\r\n            }\r\n            return {\r\n               ...oldClass,\r\n            };\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/penalty\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   penalties: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(percentage) => updatePenalty({ percentage })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   penalties: state.penalties,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError, togglePopup } from \"./global\";\r\n\r\nimport {\r\n   PENALTY_LOADED,\r\n   PENALTY_REGISTERED,\r\n   PENALTY_CLEARED,\r\n   PENALTY_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/penalty/last\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(PENALTY_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearPenalty = () => (dispatch) => {\r\n   dispatch({\r\n      type: PENALTY_CLEARED,\r\n   });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      expired: false,\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, expired, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  let oldInstallment = {};\r\n                  for (const x in prev) {\r\n                     oldInstallment[x] = !installment[x]\r\n                        ? prev[x]\r\n                        : installment[x];\r\n                  }\r\n                  return {\r\n                     ...oldInstallment,\r\n                     number: installment.number,\r\n                     value: installment.value,\r\n                  };\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (student && year !== \"\" && loading) {\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loadEnrollments, year, loading]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...((number === \"1\" || number === \"2\") && {\r\n                        expired: true,\r\n                        updatable: false,\r\n                     }),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={expired}\r\n                        onChange={onChange}\r\n                        name=\"expired\"\r\n                        id=\"expired\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"expired\">\r\n                        {expired ? \"Vencida\" : \"Vigente\"}\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \" \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" && (\r\n               <Link\r\n                  to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                  onClick={() => {\r\n                     if (users.length !== 0) {\r\n                        window.scroll(0, 0);\r\n                        clearClass();\r\n                        clearSearch();\r\n                     }\r\n                  }}\r\n                  className={`btn ${\r\n                     users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                  }`}\r\n               >\r\n                  <FaPlus />\r\n                  &nbsp;Nueva Clase\r\n               </Link>\r\n            )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].length > 2 &&\n               students[x].every((item) => !item.expired)\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Cl Pa,Ex Li,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() =>\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: installmentTotal - total,\r\n                  details: details.map((item) => {\r\n                     return {\r\n                        ...item,\r\n                        payment:\r\n                           typeof item.payment === \"number\"\r\n                              ? item.payment\r\n                              : Number(item.payment.replace(/,/g, \".\")),\r\n                     };\r\n                  }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          disabled={\r\n                                             install.discount !== undefined\r\n                                          }\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Gasto</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Gasto\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange, max }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               max={max}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n   }, [loading, loadInvoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Gasto\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadTransactions({}, true);\r\n   }, [loading, loadTransactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Movimientos</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"transactionType\"\r\n                  name=\"transactionType\"\r\n                  onChange={onChange}\r\n                  value={transactionType}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                  <option value=\"income\">Ingreso</option>\r\n                  <option value=\"expence\">Gasto</option>\r\n                  <option value=\"withdrawal\">Retiro</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${\r\n                     transactionType === \"\" ? \"lbl\" : \"\"\r\n                  }`}\r\n               >\r\n                  Tipo de Movimiento\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/enrollment\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   enrollments: {\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   installments: { installments, loading },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,,,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.expired ? \"installment\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() => installmentsPDF(installments)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst RegisterList = ({\r\n   auth: { userLogged },\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => deleteRegister(last._id)}\r\n            info=\"¿Está seguro que desea eliminar el cierre de caja?\"\r\n         />\r\n         <h2>Caja Diaria</h2>\r\n         {isAdmin && (\r\n            <div className=\"btn-right my-3\">\r\n               <Link\r\n                  to=\"/register/monthly-list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearRegisters();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n               </Link>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                     {!loadingRegister && !last.temporary && <th>&nbsp;</th>}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers[0] &&\r\n                     registers[0].temporary !== undefined &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           !register.temporary && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                                 {!loadingRegister && !last.temporary && (\r\n                                    <td>\r\n                                       {i === 0 && (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       )}\r\n                                    </td>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   deleteRegister,\r\n   clearRegisters,\r\n   togglePopup,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadWithdrawals({}, true);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n\r\n         <h4 className=\"m-1 heading-tertiary text-right\">\r\n            Total: ${formatNumber(total)}\r\n         </h4>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}