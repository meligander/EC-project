{"version":3,"sources":["img/logoSinLetras.png","img/canada.jpg","img/canada2.jpg","img/canada3.jpg","img/gallery-1.jpg","img/gallery-2.jpg","img/gallery-3.JPG","img/gallery-4.jpg","img/gallery-5.png","img/gallery-6.JPG","img/gallery-7.jpg","img/gallery-8.JPG","img/gallery-9.jpg","img/gallery-10.JPG","img/gallery-11.JPG","img/gallery-12.jpg","img/gallery-13.JPG","img/gallery-14.jpg","img/spinner.gif","img/cambridge.png","img/logo.png","img/fondoBlanco.png","actions/types.js","reducers/alert.js","reducers/user.js","reducers/auth.js","reducers/class.js","reducers/grade.js","reducers/attendance.js","reducers/installment.js","reducers/town.js","reducers/neighbourhood.js","reducers/register.js","reducers/category.js","reducers/expence.js","reducers/global.js","reducers/invoice.js","reducers/enrollment.js","reducers/observation.js","reducers/index.js","utils/store.js","utils/history.js","actions/alert.js","actions/global.js","actions/attendance.js","actions/grade.js","actions/class.js","actions/observation.js","actions/enrollment.js","actions/register.js","actions/invoice.js","actions/user.js","actions/installment.js","actions/auth.js","utils/api.js","utils/setAuthToken.js","components/pages/guest/About/Canada/index.js","components/pages/guest/About/Team/index.js","components/pages/guest/About/Gallery/index.js","components/modal/Loading/index.js","components/pages/guest/About/index.js","components/pages/guest/Landing/index.js","components/pages/guest/Contact/index.js","components/layouts/Navbar/usersLinks/GuestNavbar/index.js","components/layouts/Navbar/usersLinks/AdminNavbar/index.js","components/layouts/Navbar/usersLinks/StudentNavbar/index.js","components/layouts/Navbar/usersLinks/TeacherNavbar/index.js","components/layouts/Navbar/usersLinks/GuardianNavbar/index.js","components/layouts/Navbar/index.js","components/layouts/Footer/index.js","components/routing/PublicRoutes/index.js","components/pages/sharedComp/Alert/index.js","components/pages/guest/Login/index.js","actions/neighbourhood.js","actions/town.js","components/modal/PopUp/NewDate/index.js","components/modal/PopUp/PenaltyPercentage/index.js","components/modal/PopUp/Certificate/index.js","components/modal/PopUp/NewGradeType/index.js","components/modal/PopUp/RestoreDB/index.js","components/modal/PopUp/InvoiceList/index.js","components/modal/PopUp/Salaries/index.js","components/modal/PopUp/index.js","components/pages/registered/Dashboard/usersDashboards/RelativeDashboard/index.js","components/pages/registered/sharedComp/tables/StudentGradesTable/index.js","components/pages/registered/sharedComp/tables/InstallmentsTable/index.js","components/pages/registered/Dashboard/usersDashboards/StudentDashboard/index.js","actions/category.js","components/pages/registered/Dashboard/usersDashboards/AdminDashboard/index.js","components/pages/registered/sharedComp/tables/ClassesTable/index.js","components/pages/registered/Dashboard/usersDashboards/TeacherDashboard/index.js","components/pages/registered/Dashboard/index.js","components/pages/registered/admin/users/Credentials/index.js","components/pages/registered/sharedComp/ClassInfo/index.js","components/pages/registered/sharedComp/tables/StudentTable/index.js","components/pages/registered/admin/classes/SingleClass/index.js","components/pages/registered/Attendance/tabs/AttendanceTab/index.js","components/pages/registered/sharedComp/Tabs/index.js","components/pages/registered/Attendance/index.js","components/pages/registered/Grades/tabs/GradesTab/index.js","components/pages/registered/Grades/index.js","components/pages/registered/Observations/tabs/ObservationsTab/index.js","components/pages/registered/Observations/index.js","components/pages/registered/sharedComp/NameField/index.js","components/pages/registered/sharedComp/search/UsersSearch/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/TutorInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/EmployeeInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StudentInfo/index.js","components/pages/registered/admin/users/RegisterUser/usersInfo/StateInfo/index.js","components/pages/registered/admin/users/RegisterUser/index.js","components/pages/registered/sharedComp/tables/RestTable/index.js","components/pages/registered/Search/tabs/SearchTab/index.js","components/pages/registered/Search/index.js","actions/expence.js","components/pages/registered/admin/RegisterInfo/tabs/RegisterTab/index.js","components/pages/registered/admin/RegisterInfo/tabs/ExpenceTab/index.js","components/pages/registered/admin/RegisterInfo/index.js","components/pages/registered/admin/Categories/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/FilterClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/tabs/NewClassTab/index.js","components/pages/registered/admin/classes/RegisterClass/index.js","components/pages/registered/sharedComp/search/InstallmentsSearch/index.js","components/pages/registered/admin/Installments/index.js","components/pages/registered/admin/edit/EditInstallment/index.js","components/pages/registered/admin/classes/Classes/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InstallmentsSearchTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/tabs/InvoiceTab/index.js","components/pages/registered/admin/invoice/InvoiceGeneration/index.js","components/pages/registered/admin/invoice/Invoice/index.js","components/pages/registered/admin/Enrollment/index.js","components/pages/registered/admin/edit/sharedComp/EditButtons/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/TownsTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/tabs/NeighbourhoodTab/index.js","components/pages/registered/admin/edit/EditNeigTowns/index.js","components/pages/registered/admin/edit/EditExpenceType/index.js","components/pages/registered/admin/edit/EditGradeType/index.js","components/pages/registered/admin/lists/sharedComp/ListButtons/index.js","components/pages/registered/admin/lists/sharedComp/DateFilter/index.js","components/pages/registered/admin/lists/EnrollmentList/index.js","components/pages/registered/admin/lists/IncomeList/index.js","components/pages/registered/admin/lists/TransactionList/index.js","components/pages/registered/admin/lists/InstallmentList/index.js","components/pages/registered/admin/lists/RegisterList/index.js","components/pages/registered/admin/lists/MentionList/tabs/AverageTab/index.js","components/pages/registered/admin/lists/MentionList/tabs/AttendanceTab/index.js","components/pages/registered/admin/lists/MentionList/index.js","components/pages/registered/admin/lists/WithdrawalList/index.js","components/pages/registered/admin/lists/RegisterByMonth/index.js","components/routing/PrivateRoutes/index.js","components/layouts/NotFound/index.js","components/routing/Routes/index.js","App.js","index.js"],"names":["module","exports","initialState","users","loading","user","loadingUser","usersBK","loadingBK","otherValues","userSearchType","studentNumber","activeStudents","activeTeachers","error","token","localStorage","getItem","userLogged","isAuthenticated","classInfo","loadingClass","classes","activeClasses","teacherHours","grades","gradeTypes","loadingGT","attendances","installments","loadingInstallment","installment","totalDebt","estimatedProfit","towns","neighbourhoods","register","loadingRegister","registers","categories","loadingExpence","expence","transactions","expencetypes","loadingET","penalty","salaries","loadingSpinner","currentNav","menuToggle","popupToggle","popupType","footer","navbar","invoice","loadingInvoice","invoices","invoiceNumber","enrollments","enrollment","loadingEnrollment","yearEnrollments","year","length","observations","combineReducers","alert","state","action","type","payload","filter","id","map","item","oldId","auth","SingleClass","_id","category","students","student","expences","loadingTransactions","gradeType","value","studentsD","some","number","status","Math","round","Number","EPSILON","detail","payment","discount","details","global","nav","toggle","neighbourhood","town","info","undefined","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","currentState","subscribe","previousState","getState","setAuthToken","createBrowserHistory","setAlert","msg","alertType","dispatch","uuidv4","exists","find","clearTimeout","timer","setTimeout","createBackup","local","async","updateLoadingSpinner","res","api","post","blob","get","responseType","saveAs","Blob","data","format","Date","togglePopup","window","scrollTo","err","response","setError","bool","toggleMenu","updateCurrentNav","userType","errors","statusText","formatNumber","Intl","NumberFormat","whenNull","filterData","formData","filternames","Object","keys","x","name","newObject","prop","loadAttendances","class_id","user_id","attendancesPDF","header","pdf","pdfBlob","teacher","scroll","clearAttendances","loadGrades","loadGradeTypes","category_id","spinner","gradesPDF","period","clearGrades","clearGradeTypes","loadClass","loadClasses","classPDF","clearClass","clearClasses","loadObservations","clearObservations","getYearEnrollments","loadEnrollments","clearEnrollments","loadRegister","loadRegisters","byMonth","registerPDF","temporary","clearRegister","clearRegisters","getInvoiceNumber","loadInvoices","invoicesPDF","date","clearInvoice","clearInvoices","loadUser","loadUsers","primary","addUserToList","removeUserFromList","clearProfile","sameUser","clearInstallments","clearUser","clearUsers","clearSearch","loadInstallment","installment_id","getTotalDebt","loadInstallments","login","put","logOut","history","push","updateAuthUser","axios","create","baseURL","headers","interceptors","use","Promise","reject","defaults","common","setItem","removeItem","Canada","className","alt","src","canada1","canada2","canada3","connect","teamNumber","setTeamNumber","useState","useEffect","active","moveUp","onClick","e","preventDefault","img","url","lastname","sex","Gallery","setOtherValues","picture","changePicture","pic","gallery1","gallery2","gallery3","gallery4","gallery5","gallery6","gallery7","gallery8","gallery9","gallery10","gallery11","gallery12","gallery13","gallery14","style","width","display","margin","About","cambridge","minHeight","to","frameBorder","title","allowFullScreen","aria-hidden","tabIndex","allEnroll","setAllEnroll","classroom","sort","a","b","slice","index","key","substring","children","child","setNavbarHeight","height","withRouter","location","ref","useRef","isAdmin","path","pathname","split","findIndex","current","offsetHeight","onlyLogo","logo","setFooterHeight","getYear","component","Component","exact","alerts","Fragment","loginUser","forEach","setFormData","email","password","onChange","persist","target","onSubmit","placeholder","htmlFor","loadNeighbourhoods","town_id","clearNeighbourhoods","loadTowns","clearTowns","NewDate","fromDate","toDate","bimestre","getFullYear","min","max","disabled","PenaltyPercentage","percentage","Certificate","i","checked","NewGradeType","gradetype","gradetypes","RestoreDB","adminValues","setAdminValues","fileIn","selectedFile","handleFiles","file","validateFile","prev","FormData","append","indexOf","files","InvoiceList","total","Salaries","lowerSalary","higherSalary","adminSalary","confirm","newDate","setNewDate","newGradeType","setNewGradeType","certificate","setCertificate","setSalaries","penaltyPercentage","setPenaltyPercentage","backup","setBackup","onChangeCertificate","newStudents","onChangeNewDate","onChangeGradeType","onChangePenaltyPercentage","isNaN","onChangeBackup","onChangeSalary","question","chooseType","relatives","parent","StudentGradesTable","studentGrades","rows","finalGrades","getGrade","grade","kinderGraden","row","InstallmentsTable","forAdmin","addDetail","deleteInstallment","clearCategories","dash","toDelete","loadRelatives","match","loadingInstallments","loadingGrades","loadingObservations","loadingEnrollments","params","allowedUsers","hourin1","hourin2","hourout2","hourout1","day1","day2","attendance","description","loadCategories","activeUsers","getActiveUsers","getActiveClasses","clearGlobals","string","locale","es","toUpperCase","income","ClassesTable","all","classItem","deleteUser","self","delete","restoreBackup","reload","otherUser","popupRealType","relationTypes","mother","father","grandmother","grandfather","aunt","uncle","sibling","other","isOwner","studentId","public_id","studentnumber","guardian","secretary","admin","dni","toString","replace","tel","cel","relatedCellphones","relation","address","dob","birthtown","birthprov","degree","school","cbvu","alias","chargeday","dashboardType","updateCredentials","auth_id","password2","autoComplete","ClassInfo","StudentTable","actionWChild","years","differenceInYears","deleteClass","userCanSeeButtons","registerNewDate","periods","bimester","deleteDate","last","updateAttendances","newAttendances","setNewAttendances","day","inassistance","newA","Tabs","tablist","panellist","isActive","position","refs","useMemo","Array","fill","React","createRef","offsetWidth","offsetLeft","tab","changeActive","nb","left","Panel","typeF","AttendanceTab","registerNewGrade","newGrade","deleteGrades","updateGrades","certificatePDF","newInfo","newGrades","setNewGrades","getGradeTypes","formInfo","gt","newG","lenght","GradesTab","tabs","updateObservations","reportcardPDF","console","log","newObservations","setNewObservations","newO","observation","cols","ObservationsTab","NameField","nameAttribute","lastnameAttribute","namePlaceholder","lastnamePlaceholder","primaryUsers","primaryLoading","selectUser","selectedUser","usersType","onChangeForm","restore","button","actionForSelected","modalRef","setFilterData","searchDisplay","handler","event","contains","addEventListener","removeEventListener","chooseUser","TutorInfo","setChildren","setSelectedUser","loadingUsers","EmployeeInfo","StudentInfo","StateInfo","registerUpdateUser","getStudentNumber","loadingTowns","previewSource","fileInputState","includes","newArray","previewFile","reader","FileReader","readAsDataURL","onloadend","result","add","splice","changeType","onChangeImg","RestTable","userPDF","Alumnos","Tutores","Profesores","Administradores","filterForm","setFilterForm","studentname","studentlastname","searchTab","SearchTab","loadExpenceTypes","expenceType","transactionsPDF","clearExpenceTypes","closeRegister","createRegister","clearTransactions","deleteRegister","register_id","difference","withdrawal","registermoney","colSpan","registerExpence","updateSalaries","getTeacherHours","teacher_id","expencetype","highHours","lowHours","options","selectedIndex","getAttribute","onChangeAdmin","allSalaries","expty","loadSalaries","loadingSalaries","RegisterTab","ExpenceTab","updateCategories","categoriesPDF","addMonths","newValue","addStudent","updateClassCategory","setCategory","studentInfo","registerUpdateClass","newClass","removeStudent","sameSchedule","days","studentToDelete","loadingCategories","NewClass","FilterClassTab","changeStudent","newInvoice","clearInstallment","loadPenalty","updatePenalty","loadingPenalty","updateIntallment","loaded","item_id","thisYear","yearArray","setformData","updatable","setfilterForm","addDiscount","reduce","curr","assign","registerInvoice","fullName","removeDetail","installmentTotal","invoiceid","sum","onChangeValue","newDetails","accum","remaining","install","InstallmentsSearchTab","InvoiceTab","loadInvoice","invoice_id","registerUpdateEnrollment","loadEnrollment","enrollment_id","currentMonth","getMonth","month","c","EditButtons","save","updateTowns","deleteTown","newFormData","updateNeighbourhoods","deleteNeighbourhood","TownsTab","NeighbourhoodTab","updateExpenceTypes","deleteExpenceType","exptyp","updateGradeTypes","deleteGradeType","newRow","checks","JSON","parse","stringify","ListButtons","changePage","items","page","pdfGenerator","itemsNumber","sub","DateFilter","startDate","endDate","deleteEnrollment","enroll_id","clearEnrollment","enrollmentsPDF","enroll","deleteInvoice","arr","setName","loadTransactions","deleteExpence","expence_id","trClass","nameType","transactionType","isNotAdmin","transaction","getEstimatedProfit","installmentsPDF","installmentName","abs","loadGradesAv","quantity","average","loadAttendancesAv","Average","Attendance","loadWithdrawals","expT","types","Dashboard","NotFound","justifyContent","Login","RegisterUser","Credentials","Search","RegisterInfo","Categories","RegisterClass","Installments","EditInstallment","Classes","InvoiceGeneration","Invoice","Grades","Observations","Enrollment","EditNeigTowns","EditExpenceType","EditGradeType","EnrollmentList","IncomeList","TransactionList","InstallmentList","RegisterList","RegisterByMonth","MentionList","WithdrawalList","paddingTop","Landing","Contact","Routes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.469f3007.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoSinLetras.2a656172.png\";","module.exports = __webpack_public_path__ + \"static/media/canada.6d8851ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada2.991bbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/canada3.1089ddd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-1.bcb1404e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-2.12ffde38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-3.ee1d2b97.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-4.267ae822.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-5.ae97621f.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery-6.5578b874.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-7.d24ce789.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-8.954587b3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-9.df718658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-10.fd542dab.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-11.acf67813.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-12.4530f9ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-13.69094a8f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gallery-14.ce2d21cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.6b121394.gif\";","module.exports = __webpack_public_path__ + \"static/media/cambridge.53906724.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.200090ec.png\";","module.exports = __webpack_public_path__ + \"static/media/fondoBlanco.83a407ff.png\";","//Alerts\r\nexport const ALERT_SETTED = \"ALERT_SETTED\";\r\nexport const ALERT_REPLACED = \"ALERT_REPLACED\";\r\nexport const ALERT_REMOVED = \"ALERT_REMOVED\";\r\n\r\n//Global\r\nexport const LOADINGSPINNER_UPDATED = \"LOADINGSPINNER_UPDATED\";\r\nexport const CURRENTNAV_CHANGED = \"CURRENTNAV_CHANGED\";\r\nexport const MENU_TOGGLED = \"MENU_TOGGLED\";\r\nexport const POPUP_TOGGLED = \"POPUP_TOGGLED\";\r\nexport const GLOBAL_ERROR = \"GLOBAL_ERROR\";\r\nexport const GLOBAL_CLEARED = \"GLOBAL_CLEARED\";\r\nexport const BACKUP_GENERATED = \"BACKUP_GENERATED\";\r\nexport const BD_RESTORED = \"BD_RESTORED\";\r\nexport const FOOTER_HEIGHT_SETTED = \"FOOTER_HEIGHT_SETTED\";\r\nexport const NAVBAR_HEIGHT_SETTED = \"NAVBAR_HEIGHT_SETTED\";\r\nexport const PENALTY_LOADED = \"PENALTY_LOADED\";\r\nexport const SALARIES_LOADED = \"SALARIES_LOADED\";\r\nexport const PENALTY_UPDATED = \"PENALTY_UPDATED\";\r\nexport const SALARIES_UPDATED = \"SALARIES_UPDATED\";\r\n\r\n//User\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERSBK_LOADED = \"USERSBK_LOADED\";\r\nexport const OTHERVALUES_LOADED = \"OTHERVALUES_LOADED\";\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_UPDATED = \"USER_UPDATED\";\r\nexport const USER_DELETED = \"USER_DELETED\";\r\nexport const USERFORLIST_ADDED = \"USERFORLIST_ADDED\";\r\nexport const USERFROMLIST_REMOVED = \"USERFROMLIST_REMOVED\";\r\nexport const USERSEARCHTYPE_CHANGED = \"USERSEARCHTYPE_CHANGED\";\r\nexport const USER_CLEARED = \"USER_CLEARED\";\r\nexport const USERS_CLEARED = \"USERS_CLEARED\";\r\nexport const SEARCH_CLEARED = \"SEARCH_CLEARED\";\r\nexport const USERSBK_CLEARED = \"USERSBK_CLEARED\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USERS_ERROR = \"USERS_ERROR\";\r\nexport const USERSBK_ERROR = \"USERSBK_ERROR\";\r\n\r\n//Auth\r\nexport const USERAUTH_LOADED = \"USERAUTH_LOADED\";\r\nexport const USERAUTH_UPDATED = \"USERAUTH_UPDATED\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const STARTLOGOUT = \"STARTLOGOUT\";\r\nexport const FINISHLOGOUT = \"FINISHLOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n//Classes\r\nexport const CLASS_LOADED = \"CLASS_LOADED\";\r\nexport const CLASSES_LOADED = \"CLASSES_LOADED\";\r\nexport const ACTIVECLASSES_LOADED = \"ACTIVECLASSES_LOADED\";\r\nexport const TEACHERHOURS_LOADED = \"TEACHERHOURS_LOADED\";\r\nexport const CLASS_REGISTERED = \"CLASS_REGISTERED\";\r\nexport const CLASS_UPDATED = \"CLASS_UPDATED\";\r\nexport const CLASSCATEGORY_UPDATED = \"CLASSCATEGORY_UPDATED\";\r\nexport const CLASSSTUDENT_ADDED = \"CLASSSTUDENT_ADDED\";\r\nexport const CLASSSTUDENT_REMOVED = \"CLASSSTUDENT_REMOVED\";\r\nexport const CLASS_DELETED = \"CLASS_DELETED\";\r\nexport const CLASS_CLEARED = \"CLASS_CLEARED\";\r\nexport const CLASSES_CLEARED = \"CLASSES_CLEARED\";\r\nexport const CLASS_ERROR = \"CLASS_ERROR\";\r\nexport const CLASSES_ERROR = \"CLASSES_ERROR\";\r\nexport const CLASSES_PDF_ERROR = \"CLASSES_PDF_ERROR\";\r\n\r\n//Register\r\nexport const REGISTER_LOADED = \"REGISTER_LOADED\";\r\nexport const REGISTERS_LOADED = \"REGISTERS_LOADED\";\r\nexport const REGISTER_CLOSED = \"REGISTER_CLOSED\";\r\nexport const REGISTER_DELETED = \"REGISTER_DELETED\";\r\nexport const REGISTER_CLEARED = \"REGISTER_CLEARED\";\r\nexport const REGISTERS_CLEARED = \"REGISTERS_CLEARED\";\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\r\nexport const REGISTERS_ERROR = \"REGISTERS_ERROR\";\r\nexport const REGISTERS_PDF_ERROR = \"REGISTERS_PDF_ERROR\";\r\n\r\n//Grades\r\nexport const GRADES_LOADED = \"GRADES_LOADED\";\r\nexport const STUDENTGRADES_LOADED = \"STUDENTGRADES_LOADED\";\r\nexport const GRADETYPES_LOADED = \"GRADETYPES_LOADED\";\r\nexport const GRADES_UPDATED = \"GRADES_UPDATED\";\r\nexport const NEWGRADE_REGISTERED = \"NEWGRADE_REGISTERED\";\r\nexport const GRADES_DELETED = \"GRADES_DELETED\";\r\nexport const GRADETYPES_UPDATED = \"GRADETYPES_UPDATED\";\r\nexport const GRADETYPE_DELETED = \"GRADETYPE_DELETED\";\r\nexport const GRADES_CLEARED = \"GRADES_CLEARED\";\r\nexport const GRADETYPES_CLEARED = \"GRADETYPES_CLEARED\";\r\nexport const GRADES_ERROR = \"GRADES_ERROR\";\r\nexport const GRADETYPE_ERROR = \"GRADETYPE_ERROR\";\r\n\r\n//Expences\r\nexport const TRANSACTIONS_LOADED = \"TRANSACTIONS_LOADED\";\r\nexport const EXPENCETYPES_LOADED = \"EXPENCETYPES_LOADED\";\r\nexport const EXPENCE_REGISTERED = \"EXPENCE_REGISTERED\";\r\nexport const EXPENCE_DELETED = \"EXPENCE_DELETED\";\r\nexport const EXPENCETYPES_UPDATED = \"EXPENCETYPES_UPDATED\";\r\nexport const EXPENCETYPE_DELETED = \"EXPENCETYPE_DELETED\";\r\nexport const EXPENCE_CLEARED = \"EXPENCE_CLEARED\";\r\nexport const TRANSACTIONS_CLEARED = \"TRANSACTIONS_CLEARED\";\r\nexport const EXPENCETYPES_CLEARED = \"EXPENCETYPES_CLEARED\";\r\nexport const EXPENCE_ERROR = \"EXPENCE_ERROR\";\r\nexport const TRANSACTIONS_ERROR = \"TRANSACTIONS_ERROR\";\r\nexport const EXPENCETYPE_ERROR = \"EXPENCETYPE_ERROR\";\r\n\r\n//Invoices\r\nexport const INVOICE_LOADED = \"INVOICE_LOADED\";\r\nexport const INVOICES_LOADED = \"INVOICES_LOADED\";\r\nexport const INVOICENUMBER_LOADED = \"INVOICENUMBER_LOADED\";\r\nexport const INVOICE_REGISTERED = \"INVOICE_REGISTERED\";\r\nexport const INVOICEDETAIL_ADDED = \"INVOICEDETAIL_ADDED\";\r\nexport const INVOICEDETAIL_REMOVED = \"INVOICEDETAIL_REMOVED\";\r\nexport const DISCOUNT_ADDED = \"DISCOUNT_ADDED\";\r\nexport const INVOICE_DELETED = \"INVOICE_DELETED\";\r\nexport const INVOICE_CLEARED = \"INVOICE_CLEARED\";\r\nexport const INVOICES_CLEARED = \"INVOICES_CLEARED\";\r\nexport const INVOICE_ERROR = \"INVOICE_ERROR\";\r\nexport const INVOICES_ERROR = \"INVOICES_ERROR\";\r\n\r\n//Enrollments\r\nexport const ENROLLMENT_LOADED = \"ENROLLMENT_LOADED\";\r\nexport const ENROLLMENTS_LOADED = \"ENROLLMENTS_LOADED\";\r\nexport const YEARENROLLMENTS_LOADED = \"YEARENROLLMENTS_LOADED\";\r\nexport const ESTIMATEDPROFIT_LOADED = \"ESTIMATEDPROFIT_LOADED\";\r\nexport const ENROLLMENT_REGISTERED = \"ENROLLMENT_REGISTERED\";\r\nexport const ENROLLMENT_UPDATED = \"ENROLLMENT_UPDATED\";\r\nexport const ENROLLMENT_DELETED = \"ENROLLMENT_DELETED\";\r\nexport const ENROLLMENT_CLEARED = \"ENROLLMENT_CLEARED\";\r\nexport const ENROLLMENTS_CLEARED = \"ENROLLMENTS_CLEARED\";\r\nexport const ENROLLMENT_ERROR = \"ENROLLMENT_ERROR\";\r\nexport const ENROLLMENTS_ERROR = \"ENROLLMENTS_ERROR\";\r\n\r\n//Assistance\r\nexport const ATTENDANCES_LOADED = \"ATTENDANCES_LOADED\";\r\nexport const ATTENDANCES_UPDATED = \"ATTENDANCES_UPDATED\";\r\nexport const NEWDATE_REGISTERED = \"NEWDATE_REGISTERED\";\r\nexport const DATE_ERROR = \"DATE_ERROR\";\r\nexport const DATE_DELETED = \"DATE_DELETED\";\r\nexport const ATTENDANCES_CLEARED = \"ATTENDANCES_CLEARED\";\r\nexport const ATTENDANCES_ERROR = \"ATTENDANCES_ERROR\";\r\n\r\n//Installments\r\nexport const INSTALLMENT_LOADED = \"INSTALLMENT_LOADED\";\r\nexport const INSTALLMENTS_LOADED = \"INSTALLMENTS_LOADED\";\r\nexport const TOTALDEBT_LOADED = \"TOTALDEBT_LOADED\";\r\nexport const INSTALLMENT_REGISTERED = \"INSTALLMENT_REGISTERED\";\r\nexport const INSTALLMENT_ADDED = \"INSTALLMENT_ADDED\";\r\nexport const INSTALLMENT_UPDATED = \"INSTALLMENT_UPDATED\";\r\nexport const INSTALLMENT_DELETED = \"INSTALLMENT_DELETED\";\r\nexport const EXPIREDINSTALLMENTS_UPDATED = \"EXPIREDINSTALLMENTS_UPDATED\";\r\nexport const INSTALLMENT_CLEARED = \"INSTALLMENT_CLEARED\";\r\nexport const INSTALLMENTS_CLEARED = \"INSTALLMENTS_CLEARED\";\r\nexport const INSTALLMENTS_ERROR = \"INSTALLMENTS_ERROR\";\r\nexport const INSTALLMENT_ERROR = \"INSTALLMENT_ERROR\";\r\n\r\n//Towns\r\nexport const TOWNS_LOADED = \"TOWNS_LOADED\";\r\nexport const TOWNS_UPDATED = \"TOWNS_UPDATED\";\r\nexport const TOWN_DELETED = \"TOWN_DELETED\";\r\nexport const TOWNS_CLEARED = \"TOWNS_CLEARED\";\r\nexport const TOWNS_ERROR = \"TOWNS_ERROR\";\r\n\r\n//Neighbourhoods\r\nexport const NEIGHBOURHOODS_LOADED = \"NEIGHBOURHOODS_LOADED\";\r\nexport const NEIGHBOURHOODS_UPDATED = \"NEIGHBOURHOODS_UPDATED\";\r\nexport const NEIGHBOURHOOD_DELETED = \"NEIGHBOURHOOD_DELETED\";\r\nexport const NEIGHBOURHOODS_CLEARED = \"NEIGHBOURHOODS_CLEARED\";\r\nexport const NEIGHBOURHOODS_ERROR = \"NEIGHBOURHOODS_ERROR\";\r\nexport const NEIGHBOURHOOD_ERROR = \"NEIGHBOURHOOD_ERROR\";\r\n\r\n//Observations\r\nexport const OBSERVATIONS_LOADED = \"OBSERVATIONS_LOADED\";\r\nexport const OBSERVATIONS_UPDATED = \"OBSERVATIONS_UPDATED\";\r\nexport const OBSERVATIONS_CLEARED = \"OBSERVATIONS_CLEARED\";\r\nexport const OBSERVATIONS_ERROR = \"OBSERVATIONS_ERROR\";\r\n\r\n//Categories\r\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\r\nexport const CATEGORIES_UPDATED = \"CATEGORIES_UPDATED\";\r\nexport const CATEGORIES_CLEARED = \"CATEGORIES_CLEARED\";\r\nexport const CATEGORIES_ERROR = \"CATEGORIES_ERROR\";\r\n","import { ALERT_SETTED, ALERT_REMOVED, ALERT_REPLACED } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ALERT_SETTED:\r\n         return [...state, payload];\r\n      case ALERT_REMOVED:\r\n         return state.filter((alert) => alert.id !== payload);\r\n      case ALERT_REPLACED:\r\n         return state.map((item) =>\r\n            item.id === payload.oldId ? payload : item\r\n         );\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   SEARCH_CLEARED,\r\n   USERS_ERROR,\r\n   USER_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   users: [],\r\n   loading: true,\r\n   user: null,\r\n   loadingUser: true,\r\n   usersBK: [],\r\n   loadingBK: true,\r\n   otherValues: {\r\n      userSearchType: \"\",\r\n      studentNumber: \"\",\r\n      activeStudents: \"\",\r\n      activeTeachers: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingUser: false,\r\n            user: payload,\r\n            error: {},\r\n         };\r\n      case USERS_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            users: payload.users,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: payload.type,\r\n            },\r\n            error: {},\r\n         };\r\n      case USERSBK_LOADED:\r\n         return {\r\n            ...state,\r\n            loadingBK: false,\r\n            usersBK: payload,\r\n            error: {},\r\n         };\r\n      case OTHERVALUES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               [payload.type]: payload.info,\r\n            },\r\n         };\r\n      case USER_REGISTERED:\r\n      case USER_UPDATED:\r\n         return {\r\n            ...state,\r\n            user: payload,\r\n            loadingUser: false,\r\n            error: {},\r\n         };\r\n      case USER_DELETED:\r\n         return {\r\n            ...state,\r\n            user: null,\r\n            loading: true,\r\n         };\r\n      case USERFORLIST_ADDED:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, payload],\r\n            loading: false,\r\n         };\r\n      case USERFROMLIST_REMOVED:\r\n         return {\r\n            ...state,\r\n            users: state.users.filter((user) => user._id !== payload),\r\n         };\r\n      case USER_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERSBK_CLEARED:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            error: {},\r\n         };\r\n      case USERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            users: [],\r\n            usersBK: [],\r\n            loadingBK: true,\r\n            otherValues: {\r\n               userSearchType: \"\",\r\n               studentNumber: \"\",\r\n               activeStudents: \"\",\r\n               activeTeachers: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case SEARCH_CLEARED:\r\n         return {\r\n            ...state,\r\n            ...(payload === undefined\r\n               ? {\r\n                    users: [],\r\n                    loading: true,\r\n                    usersBK: [],\r\n                    loadingBK: true,\r\n                 }\r\n               : payload\r\n               ? { users: [], loading: true }\r\n               : { usersBK: [], loadingBK: true }),\r\n\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               userSearchType: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case USER_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingUser: true,\r\n            user: null,\r\n            error: payload,\r\n         };\r\n      case USERS_ERROR:\r\n         return {\r\n            ...state,\r\n            users: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case USERSBK_ERROR:\r\n         return {\r\n            ...state,\r\n            usersBK: [],\r\n            loadingBK: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   STARTLOGOUT,\r\n   FINISHLOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem(\"token\"),\r\n   userLogged: null,\r\n   loading: true,\r\n   isAuthenticated: false,\r\n   error: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case USERAUTH_UPDATED:\r\n      case USERAUTH_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            userLogged: payload,\r\n            isAuthenticated: true,\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            token: payload.token,\r\n         };\r\n      case STARTLOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: true,\r\n         };\r\n      case FINISHLOGOUT:\r\n         return {\r\n            ...state,\r\n            userLogged: null,\r\n         };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            userLogged: null,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASS_UPDATED,\r\n   CLASS_DELETED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n   TEACHERHOURS_LOADED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   classInfo: null,\r\n   loadingClass: true,\r\n   classes: [],\r\n   loading: true,\r\n   otherValues: {\r\n      activeClasses: \"\",\r\n      teacherHours: {},\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case CLASS_LOADED:\r\n         return {\r\n            ...state,\r\n            classInfo: payload,\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            classes: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ACTIVECLASSES_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               activeClasses: payload,\r\n            },\r\n         };\r\n      case TEACHERHOURS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               teacherHours: payload,\r\n            },\r\n         };\r\n      case CLASS_REGISTERED:\r\n         return {\r\n            ...state,\r\n            classes:\r\n               state.classes.length > 0\r\n                  ? [...state.classes, payload]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_UPDATED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.map((SingleClass) =>\r\n               SingleClass._id === payload._id ? payload : SingleClass\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASS_DELETED:\r\n         return {\r\n            ...state,\r\n            classes: state.classes.filter((item) => item._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CLASSCATEGORY_UPDATED:\r\n         return {\r\n            ...state,\r\n            classInfo: { category: payload, students: [] },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_ADDED:\r\n         return {\r\n            ...state,\r\n            classInfo: state.classInfo\r\n               ? {\r\n                    ...state.classInfo,\r\n                    students: [...state.classInfo.students, payload],\r\n                 }\r\n               : {\r\n                    students: [payload],\r\n                 },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASSSTUDENT_REMOVED:\r\n         return {\r\n            ...state,\r\n            classInfo: {\r\n               ...state.classInfo,\r\n               students: state.classInfo.students.filter(\r\n                  (student) => student._id !== payload\r\n               ),\r\n            },\r\n            loadingClass: false,\r\n            error: {},\r\n         };\r\n      case CLASS_CLEARED:\r\n         return {\r\n            ...state,\r\n            classInfo: null,\r\n            loadingClass: true,\r\n            error: {},\r\n         };\r\n      case CLASSES_CLEARED:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: true,\r\n            error: {},\r\n            otherValues: {\r\n               activeClasses: \"\",\r\n               teacherHours: {},\r\n            },\r\n         };\r\n      case CLASS_ERROR:\r\n         return {\r\n            ...state,\r\n            //classInfo: null,\r\n            loadingClass: false,\r\n            error: payload,\r\n         };\r\n      case CLASSES_ERROR:\r\n         return {\r\n            ...state,\r\n            classes: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               activeClasses: 0,\r\n               teacherHours: {},\r\n            },\r\n         };\r\n      case CLASSES_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   grades: [],\r\n   gradeTypes: [],\r\n   loadingGT: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case GRADES_DELETED:\r\n      case NEWGRADE_REGISTERED:\r\n      case GRADES_LOADED:\r\n         return {\r\n            ...state,\r\n            grades: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case GRADETYPES_LOADED:\r\n      case GRADETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: payload,\r\n            loadingGT: false,\r\n         };\r\n\r\n      case GRADES_UPDATED:\r\n         return state;\r\n      case GRADETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            gradeTypes: state.gradeTypes.filter(\r\n               (gradeType) => gradeType._id !== payload\r\n            ),\r\n            loadingGT: false,\r\n         };\r\n      case GRADES_CLEARED:\r\n         return {\r\n            ...state,\r\n            grades: [],\r\n            loading: true,\r\n         };\r\n      case GRADETYPES_CLEARED:\r\n         return { ...state, gradeTypes: [], loadingGT: true };\r\n      case GRADES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case GRADETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingGT: false,\r\n            gradeTypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ATTENDANCES_LOADED,\r\n   ATTENDANCES_UPDATED,\r\n   NEWDATE_REGISTERED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   attendances: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ATTENDANCES_LOADED:\r\n      case NEWDATE_REGISTERED:\r\n      case DATE_DELETED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            attendances: payload,\r\n            error: {},\r\n         };\r\n      case ATTENDANCES_UPDATED:\r\n         return state;\r\n      case ATTENDANCES_CLEARED:\r\n         return initialState;\r\n      case ATTENDANCES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case DATE_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INSTALLMENT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n   INSTALLMENT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   installments: [],\r\n   loadingInstallment: true,\r\n   installment: null,\r\n   otherValues: {\r\n      totalDebt: \"\",\r\n      estimatedProfit: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INSTALLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            installment: payload,\r\n            loadingInstallment: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            installments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOTALDEBT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               totalDebt: payload,\r\n            },\r\n         };\r\n      case INSTALLMENT_REGISTERED:\r\n      case INSTALLMENT_ADDED:\r\n         return {\r\n            ...state,\r\n            installments: [payload, ...state.installments],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.map((item) =>\r\n               item._id === payload._id ? payload : item\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INSTALLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            installments: state.installments.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ESTIMATEDPROFIT_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               estimatedProfit: payload,\r\n            },\r\n         };\r\n      case EXPIREDINSTALLMENTS_UPDATED:\r\n         return state;\r\n      case INSTALLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: true,\r\n         };\r\n      case INSTALLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            installment: [],\r\n            loading: true,\r\n            otherValues: {\r\n               totalDebt: \"\",\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case INSTALLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            installments: [],\r\n            // loading: false,\r\n            error: payload,\r\n         };\r\n      case INSTALLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            installment: null,\r\n            loadingInstallment: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   towns: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TOWNS_LOADED:\r\n      case TOWNS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            towns: payload,\r\n            error: {},\r\n         };\r\n      case TOWN_DELETED:\r\n         return {\r\n            ...state,\r\n            towns: state.towns.filter((town) => town._id !== payload),\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case TOWNS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case TOWNS_CLEARED:\r\n         return initialState;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   neighbourhoods: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case NEIGHBOURHOODS_LOADED:\r\n      case NEIGHBOURHOODS_UPDATED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            neighbourhoods: payload,\r\n         };\r\n      case NEIGHBOURHOOD_DELETED:\r\n         return {\r\n            ...state,\r\n            neighbourhoods: state.neighbourhoods.filter(\r\n               (neighbourhood) => neighbourhood._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case NEIGHBOURHOODS_CLEARED:\r\n         return initialState;\r\n      case NEIGHBOURHOODS_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n            neighbourhoods: [],\r\n         };\r\n      case NEIGHBOURHOOD_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_ERROR,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   register: null,\r\n   loadingRegister: true,\r\n   registers: [],\r\n   loading: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n\r\n   switch (type) {\r\n      case REGISTER_LOADED:\r\n         return {\r\n            ...state,\r\n            register: payload,\r\n            loadingRegister: false,\r\n            error: {},\r\n         };\r\n      case REGISTERS_LOADED:\r\n         return {\r\n            ...state,\r\n            registers: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case REGISTER_CLEARED:\r\n      case REGISTER_CLOSED:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_DELETED:\r\n         return {\r\n            ...state,\r\n            registers: state.registers.filter(\r\n               (register) => register._id !== payload\r\n            ),\r\n         };\r\n      case REGISTERS_CLEARED:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: true,\r\n            error: {},\r\n         };\r\n      case REGISTER_ERROR:\r\n         return {\r\n            ...state,\r\n            register: null,\r\n            loadingRegister: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_ERROR:\r\n         return {\r\n            ...state,\r\n            registers: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case REGISTERS_PDF_ERROR:\r\n         return {\r\n            ...state,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   categories: [],\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case CATEGORIES_LOADED:\r\n         return {\r\n            ...state,\r\n            categories: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CATEGORIES_UPDATED:\r\n         return state;\r\n      case CATEGORIES_CLEARED:\r\n         return initialState;\r\n      case CATEGORIES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loadingExpence: true,\r\n   expence: null,\r\n   transactions: [],\r\n   loading: true,\r\n   expencetypes: [],\r\n   loadingET: true,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case TRANSACTIONS_LOADED:\r\n         return {\r\n            ...state,\r\n            transactions: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_LOADED:\r\n         return {\r\n            ...state,\r\n            expencetypes: payload,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCETYPES_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            error: {},\r\n         };\r\n      case EXPENCE_REGISTERED:\r\n         return state;\r\n      case EXPENCE_DELETED:\r\n         return {\r\n            ...state,\r\n            transactions: state.transactions.filter(\r\n               (expence) => expence._id !== payload\r\n            ),\r\n            loadingTransactions: false,\r\n         };\r\n      case EXPENCETYPE_DELETED:\r\n         return {\r\n            ...state,\r\n            expencetypes: state.expencetypes.filter(\r\n               (item) => item._id !== payload\r\n            ),\r\n            loadingET: false,\r\n         };\r\n      case EXPENCE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingExpence: true,\r\n            expence: null,\r\n            error: {},\r\n         };\r\n      case TRANSACTIONS_CLEARED:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: true,\r\n         };\r\n      case EXPENCETYPES_CLEARED:\r\n         return {\r\n            ...state,\r\n            expencetypes: [],\r\n            loadingET: true,\r\n         };\r\n      case EXPENCE_ERROR:\r\n         return {\r\n            ...state,\r\n            expence: null,\r\n            loadingExpence: false,\r\n            error: payload,\r\n         };\r\n      case TRANSACTIONS_ERROR:\r\n         return {\r\n            ...state,\r\n            transactions: [],\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      case EXPENCETYPE_ERROR:\r\n         return {\r\n            ...state,\r\n            loadingET: false,\r\n            expencetypes: [],\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   LOADINGSPINNER_UPDATED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_CLEARED,\r\n   PENALTY_LOADED,\r\n   SALARIES_LOADED,\r\n   PENALTY_UPDATED,\r\n   SALARIES_UPDATED,\r\n   GLOBAL_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   penalty: \"\",\r\n   salaries: {},\r\n   loading: true,\r\n   loadingSpinner: false,\r\n   currentNav: \"\",\r\n   menuToggle: false,\r\n   popupToggle: false,\r\n   popupType: \"\",\r\n   footer: 0,\r\n   navbar: 0,\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case PENALTY_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            penalty: payload,\r\n            error: {},\r\n         };\r\n      case SALARIES_LOADED:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            salaries: payload,\r\n            error: {},\r\n         };\r\n      case PENALTY_UPDATED:\r\n         return {\r\n            ...state,\r\n            penalty: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case SALARIES_UPDATED:\r\n         return {\r\n            ...state,\r\n            salaries: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case CURRENTNAV_CHANGED:\r\n         return {\r\n            ...state,\r\n            currentNav: payload.nav,\r\n            ...(payload.toggle && { menuToggle: !state.menuToggle }),\r\n         };\r\n      case MENU_TOGGLED:\r\n         return {\r\n            ...state,\r\n            menuToggle: !state.menuToggle,\r\n         };\r\n      case POPUP_TOGGLED:\r\n         return {\r\n            ...state,\r\n            popupToggle: !state.popupToggle,\r\n            ...(payload.type && { popupType: payload.type }),\r\n         };\r\n      case LOADINGSPINNER_UPDATED:\r\n         return {\r\n            ...state,\r\n            loadingSpinner: payload,\r\n         };\r\n      case NAVBAR_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            navbar: payload,\r\n         };\r\n      case FOOTER_HEIGHT_SETTED:\r\n         return {\r\n            ...state,\r\n            footer: payload,\r\n         };\r\n      case GLOBAL_CLEARED:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            penalty: \"\",\r\n            salaries: {},\r\n            error: {},\r\n         };\r\n      case GLOBAL_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   DISCOUNT_ADDED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   invoice: null,\r\n   loadingInvoice: true,\r\n   invoices: [],\r\n   loading: true,\r\n   otherValues: {\r\n      invoiceNumber: \"\",\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case INVOICE_LOADED:\r\n         return {\r\n            ...state,\r\n            invoice: payload,\r\n            loadingInvoice: false,\r\n            error: {},\r\n         };\r\n      case INVOICES_LOADED:\r\n         return {\r\n            ...state,\r\n            invoices: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case INVOICENUMBER_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               invoiceNumber: payload,\r\n            },\r\n         };\r\n      case INVOICE_REGISTERED:\r\n         return state;\r\n      case INVOICEDETAIL_ADDED:\r\n         let value;\r\n         if (\r\n            state.invoice &&\r\n            state.invoice.studentsD &&\r\n            state.invoice.studentsD.some((item) => item === payload.student._id)\r\n         )\r\n            value =\r\n               payload.number > 2 && payload.status !== \"expired\"\r\n                  ? payload.value - (payload.value * 10) / 100\r\n                  : payload.status === \"expired\"\r\n                  ? Math.round(\r\n                       (payload.value * 0.90909 + Number.EPSILON) * 100\r\n                    ) / 100\r\n                  : payload.value;\r\n\r\n         const detail = {\r\n            ...payload,\r\n            _id: \"\",\r\n            installment: payload._id,\r\n            payment: \"\",\r\n            ...(value && {\r\n               value,\r\n               discount: payload.value - value,\r\n               payment: value,\r\n            }),\r\n         };\r\n\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice\r\n                  ? [...state.invoice.details, detail]\r\n                  : [detail],\r\n            },\r\n         };\r\n      case INVOICEDETAIL_REMOVED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...(state.invoice && state.invoice),\r\n               details: state.invoice.details.filter(\r\n                  (item) => item.installment !== payload\r\n               ),\r\n            },\r\n         };\r\n      case DISCOUNT_ADDED:\r\n         return {\r\n            ...state,\r\n            invoice: {\r\n               ...state.invoice,\r\n               studentsD: state.invoice.studentsD\r\n                  ? [...state.invoice.studentsD, payload]\r\n                  : [payload],\r\n               details: state.invoice.details.map((item) => {\r\n                  const value =\r\n                     item.number > 2 && item.status !== \"expired\"\r\n                        ? item.value - (item.value * 10) / 100\r\n                        : item.status === \"expired\"\r\n                        ? Math.round(\r\n                             (item.value * 0.90909 + Number.EPSILON) * 100\r\n                          ) / 100\r\n                        : item.value;\r\n\r\n                  return item.student._id === payload\r\n                     ? {\r\n                          ...item,\r\n                          value,\r\n                          payment: value,\r\n                          discount: item.number > 2 ? item.value - value : 0,\r\n                       }\r\n                     : item;\r\n               }),\r\n            },\r\n         };\r\n      case INVOICE_DELETED:\r\n         return {\r\n            ...state,\r\n            invoices: state.invoices.filter(\r\n               (invoice) => invoice._id !== payload\r\n            ),\r\n         };\r\n\r\n      case INVOICE_CLEARED:\r\n         return {\r\n            ...state,\r\n            loadingInvoice: true,\r\n            invoice: null,\r\n            error: {},\r\n         };\r\n      case INVOICES_CLEARED:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: true,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: {},\r\n         };\r\n      case INVOICE_ERROR:\r\n         return {\r\n            ...state,\r\n            //invoice: null,\r\n            loadingInvoice: false,\r\n            error: payload,\r\n         };\r\n      case INVOICES_ERROR:\r\n         return {\r\n            ...state,\r\n            invoices: [],\r\n            loading: false,\r\n            otherValues: {\r\n               invoiceNumber: \"\",\r\n            },\r\n            error: payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n   loading: true,\r\n   enrollments: [],\r\n   enrollment: null,\r\n   loadingEnrollment: true,\r\n   otherValues: {\r\n      yearEnrollments: {\r\n         year: \"\",\r\n         length: \"\",\r\n      },\r\n   },\r\n   error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case ENROLLMENT_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollment: payload,\r\n            loadingEnrollment: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            enrollments: payload,\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case YEARENROLLMENTS_LOADED:\r\n         return {\r\n            ...state,\r\n            otherValues: {\r\n               ...state.otherValues,\r\n               yearEnrollments: payload,\r\n            },\r\n         };\r\n      case ENROLLMENT_REGISTERED:\r\n         return {\r\n            ...state,\r\n            enrollments:\r\n               state.enrollments.length > 0\r\n                  ? [payload, ...state.enrollments]\r\n                  : [payload],\r\n            loading: false,\r\n            error: {},\r\n         };\r\n      case ENROLLMENT_UPDATED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.map((enrollment) =>\r\n               enrollment._id === payload._id ? payload : enrollment\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_DELETED:\r\n         return {\r\n            ...state,\r\n            enrollments: state.enrollments.filter(\r\n               (enrollment) => enrollment._id !== payload\r\n            ),\r\n            loading: false,\r\n         };\r\n      case ENROLLMENT_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: true,\r\n         };\r\n      case ENROLLMENTS_CLEARED:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: true,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      case ENROLLMENT_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollment: null,\r\n            loadingEnrollment: false,\r\n            error: payload,\r\n         };\r\n      case ENROLLMENTS_ERROR:\r\n         return {\r\n            ...state,\r\n            enrollments: [],\r\n            loading: false,\r\n            error: payload,\r\n            otherValues: {\r\n               yearEnrollments: {\r\n                  year: \"\",\r\n                  length: \"\",\r\n               },\r\n               estimatedProfit: \"\",\r\n            },\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"../actions/types\";\n\nconst initialState = {\n   loading: true,\n   observations: [],\n   error: {},\n};\n\nexport default function (state = initialState, action) {\n   const { type, payload } = action;\n   switch (type) {\n      case OBSERVATIONS_LOADED:\n         return {\n            ...state,\n            observations: payload,\n            loading: false,\n            error: {},\n         };\n      case OBSERVATIONS_UPDATED:\n         return state;\n      case OBSERVATIONS_CLEARED:\n         return initialState;\n      case OBSERVATIONS_ERROR:\n         return {\n            ...state,\n            loading: false,\n            error: payload,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport user from \"./user\";\r\nimport auth from \"./auth\";\r\nimport classes from \"./class\";\r\nimport grades from \"./grade\";\r\nimport attendances from \"./attendance\";\r\nimport installments from \"./installment\";\r\nimport towns from \"./town\";\r\nimport neighbourhoods from \"./neighbourhood\";\r\nimport registers from \"./register\";\r\nimport categories from \"./category\";\r\nimport expences from \"./expence\";\r\nimport global from \"./global\";\r\nimport invoices from \"./invoice\";\r\nimport enrollments from \"./enrollment\";\r\nimport observations from \"./observation\";\r\n\r\nexport default combineReducers({\r\n   alert,\r\n   attendances,\r\n   auth,\r\n   categories,\r\n   classes,\r\n   installments,\r\n   enrollments,\r\n   expences,\r\n   grades,\r\n   invoices,\r\n   global,\r\n   neighbourhoods,\r\n   observations,\r\n   registers,\r\n   towns,\r\n   users: user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n   trace: true,\r\n   traceLimit: 25,\r\n});\r\nconst store = createStore(\r\n   rootReducer,\r\n   initialState,\r\n   composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// prevent auth error on first run of subscription\r\nlet currentState = {\r\n   auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n   // keep track of the previous and current state to compare changes\r\n   let previousState = currentState;\r\n   currentState = store.getState();\r\n   // if the token changes set the value in localStorage and axios headers\r\n   if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAuthToken(token);\r\n   }\r\n});\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport store from \"../utils/store\";\r\n\r\nimport { ALERT_REMOVED, ALERT_REPLACED, ALERT_SETTED } from \"./types\";\r\n\r\nexport const setAlert =\r\n   (msg, alertType, type = \"2\") =>\r\n   (dispatch) => {\r\n      const id = uuidv4();\r\n\r\n      const exists = store.getState().alert.find((item) => item.msg === msg);\r\n\r\n      if (exists) clearTimeout(exists.timer);\r\n\r\n      const timer = setTimeout(\r\n         () =>\r\n            dispatch({\r\n               type: ALERT_REMOVED,\r\n               payload: id,\r\n            }),\r\n         5000\r\n      );\r\n\r\n      dispatch({\r\n         type: exists ? ALERT_REPLACED : ALERT_SETTED,\r\n         payload: {\r\n            id,\r\n            alertType,\r\n            msg,\r\n            type,\r\n            ...(exists && { oldId: exists.id }),\r\n            timer,\r\n         },\r\n      });\r\n   };\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   LOADINGSPINNER_UPDATED,\r\n   FOOTER_HEIGHT_SETTED,\r\n   NAVBAR_HEIGHT_SETTED,\r\n   CURRENTNAV_CHANGED,\r\n   MENU_TOGGLED,\r\n   POPUP_TOGGLED,\r\n   GLOBAL_ERROR,\r\n   BACKUP_GENERATED,\r\n   BD_RESTORED,\r\n   PENALTY_LOADED,\r\n   PENALTY_UPDATED,\r\n   GLOBAL_CLEARED,\r\n   SALARIES_LOADED,\r\n   SALARIES_UPDATED,\r\n} from \"./types\";\r\nimport { logOut } from \"./auth\";\r\n\r\nexport const loadPenalty = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/global/penalty\");\r\n      dispatch({\r\n         type: PENALTY_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadSalaries = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/global/salaries\");\r\n      dispatch({\r\n         type: SALARIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const checkBackup = () => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/backup/check\");\r\n\r\n      return res.data;\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n      return false;\r\n   }\r\n};\r\n\r\nexport const createBackup = (local) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.post(\"/backup\", { local });\r\n\r\n      const blob = await api.get(`/backup/fetch${local ? \"?local=true\" : \"\"}`, {\r\n         responseType: \"arraybuffer\",\r\n      });\r\n\r\n      saveAs(\r\n         new Blob([blob.data], { type: \"application/x-gzip\" }),\r\n         `BD-${format(new Date(), \"dd-MM-yy\")}`\r\n      );\r\n\r\n      dispatch({\r\n         type: BACKUP_GENERATED,\r\n      });\r\n\r\n      if (local) dispatch(togglePopup(\"default\"));\r\n      dispatch(setAlert(res.data.msg, \"success\", \"1\"));\r\n      window.scrollTo(0, 0);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const restoreBackup = (data) => async (dispatch) => {\r\n   let error = false;\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      if (data === \"\") {\r\n         const errorMessage = {\r\n            response: {\r\n               status: 402,\r\n               data: {\r\n                  msg: \"Debe seleccionar un archivo\",\r\n               },\r\n            },\r\n         };\r\n         throw errorMessage;\r\n      }\r\n      const res = await api.post(\"/backup/restore\", data);\r\n\r\n      dispatch({\r\n         type: BD_RESTORED,\r\n      });\r\n\r\n      window.location.reload();\r\n      dispatch(logOut());\r\n      dispatch(togglePopup(\"default\"));\r\n      window.scrollTo(0, 0);\r\n      dispatch(setAlert(res.data.msg, \"success\", \"0\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updatePenalty = (penalty) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/global/penalty\", penalty);\r\n\r\n      dispatch({\r\n         type: PENALTY_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Recargo Modificado\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateSalaries = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   const salaries = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/global/salaries\", salaries);\r\n\r\n      dispatch({\r\n         type: SALARIES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Salarios Modificados\", \"success\", \"2\"));\r\n      dispatch(togglePopup(\"default\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GLOBAL_ERROR, err.response));\r\n   }\r\n\r\n   window.scrollTo(0, 0);\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const clearGlobals = () => (dispatch) => {\r\n   dispatch({\r\n      type: GLOBAL_CLEARED,\r\n   });\r\n};\r\n\r\nexport const updateLoadingSpinner = (bool) => (dispatch) => {\r\n   dispatch({\r\n      type: LOADINGSPINNER_UPDATED,\r\n      payload: bool,\r\n   });\r\n};\r\n\r\nexport const toggleMenu = () => (dispatch) => {\r\n   dispatch({\r\n      type: MENU_TOGGLED,\r\n   });\r\n};\r\n\r\nexport const togglePopup = (type) => (dispatch) => {\r\n   dispatch({\r\n      type: POPUP_TOGGLED,\r\n      payload: {\r\n         type,\r\n      },\r\n   });\r\n};\r\n\r\nexport const updateCurrentNav = (currentNav, toggle) => (dispatch) => {\r\n   dispatch({\r\n      type: CURRENTNAV_CHANGED,\r\n      payload: {\r\n         nav: currentNav,\r\n         toggle,\r\n      },\r\n   });\r\n};\r\n\r\nexport const setFooterHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: FOOTER_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setNavbarHeight = (height) => (dispatch) => {\r\n   dispatch({\r\n      type: NAVBAR_HEIGHT_SETTED,\r\n      payload: height,\r\n   });\r\n};\r\n\r\nexport const setError = (type, response, userType) => (dispatch) => {\r\n   dispatch({\r\n      type: type,\r\n      payload: response.data.errors\r\n         ? response.data.errors\r\n         : {\r\n              type: response.statusText,\r\n              status: response.status,\r\n              msg: response.data.msg,\r\n              ...(userType && {\r\n                 userType:\r\n                    userType === \"student\"\r\n                       ? \"activeStudents\"\r\n                       : \"activeTeachers\",\r\n              }),\r\n           },\r\n   });\r\n};\r\n\r\nexport const formatNumber = (number) => {\r\n   if (number || number !== 0)\r\n      return new Intl.NumberFormat(\"de-DE\").format(number);\r\n   else return 0;\r\n};\r\n\r\nexport const whenNull = (value) => {\r\n   return value !== null && value !== undefined && value !== \"\";\r\n};\r\n\r\nexport const filterData = (formData) => {\r\n   let filter = \"\";\r\n   const filternames = Object.keys(formData);\r\n   for (let x = 0; x < filternames.length; x++) {\r\n      const name = filternames[x];\r\n      if (formData[name] !== \"\") {\r\n         if (filter !== \"\") filter += \"&\";\r\n         filter += name + \"=\" + formData[name];\r\n      }\r\n   }\r\n   return filter;\r\n};\r\n\r\nexport const newObject = (formData) => {\r\n   let newObject = {};\r\n   for (const prop in formData) {\r\n      if (formData[prop] !== \"\") newObject[prop] = formData[prop];\r\n   }\r\n   return newObject;\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   ATTENDANCES_LOADED,\r\n   NEWDATE_REGISTERED,\r\n   ATTENDANCES_UPDATED,\r\n   DATE_DELETED,\r\n   ATTENDANCES_CLEARED,\r\n   ATTENDANCES_ERROR,\r\n   DATE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadAttendances = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/attendance/${class_id}${user_id ? `/${user_id}` : \"\"}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadAttendancesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/attendance/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ATTENDANCES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewDate =\r\n   (formData, class_id, period, periods) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      const bimester = !periods[period - 1];\r\n\r\n      try {\r\n         if (period !== 1 && !periods[period - 2]) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos un día en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newDate = newObject(formData);\r\n\r\n         const res = await api.post(\r\n            `/attendance/${class_id}/${period}${bimester ? \"/bimester\" : \"\"}`,\r\n            newDate\r\n         );\r\n\r\n         dispatch({\r\n            type: NEWDATE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               bimester ? \"Días del Bimestre Agregados\" : \"Día Agregado\",\r\n               \"success\",\r\n               \"3\"\r\n            )\r\n         );\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateAttendances =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.put(`/attendance/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: ATTENDANCES_UPDATED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         dispatch(setAlert(\"Inasistencias Modificadas\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteDate =\r\n   (date, classroom, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última fecha del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n         const res = await api.delete(\r\n            `/attendance/${classroom}/${period}/${date}`\r\n         );\r\n\r\n         dispatch({\r\n            type: DATE_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Fecha eliminada\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(DATE_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const attendancesPDF =\r\n   (header, attendances, info) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         await api.post(`/pdf/attendance/${header ? \"list\" : \"best\"}`, {\r\n            header,\r\n            attendances,\r\n            info,\r\n         });\r\n\r\n         const pdf = await api.get(\"/pdf/attendance/fetch\", {\r\n            responseType: \"blob\",\r\n         });\r\n\r\n         const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n         saveAs(\r\n            pdfBlob,\r\n            header\r\n               ? `Asistencia ${info.category} de ${info.teacher}  ${format(\r\n                    new Date(),\r\n                    \"dd-MM-yy\"\r\n                 )}.pdf`\r\n               : `Mejores Asistencias ${info.year}`\r\n         );\r\n\r\n         dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ATTENDANCES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scroll(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const clearAttendances = () => (dispatch) => {\r\n   dispatch({\r\n      type: ATTENDANCES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   setError,\r\n   togglePopup,\r\n} from \"./global\";\r\n\r\nimport {\r\n   GRADES_LOADED,\r\n   GRADETYPES_LOADED,\r\n   GRADES_UPDATED,\r\n   NEWGRADE_REGISTERED,\r\n   GRADES_DELETED,\r\n   GRADETYPES_UPDATED,\r\n   GRADETYPE_DELETED,\r\n   GRADES_CLEARED,\r\n   GRADETYPES_CLEARED,\r\n   GRADES_ERROR,\r\n   GRADETYPE_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadGrades = (class_id, user_id) => async (dispatch) => {\r\n   if (!user_id) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade/${user_id ? \"student/\" : \"\"}${class_id}${\r\n            user_id ? `/${user_id}` : \"\"\r\n         }`\r\n      );\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (!user_id) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   if (!user_id) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradeTypes = (category_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\r\n         `/grade-type${category_id ? `/category/${category_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: GRADETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(GRADETYPE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadGradesAv = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   try {\r\n      const res = await api.get(`/grade/best?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: GRADES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerNewGrade =\r\n   (formData, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"Debe agregar por lo menos una nota en los bimestres anteriores\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newGrade = newObject(formData);\r\n\r\n         const res = await api.post(`/grade/${class_id}/${period}`, newGrade);\r\n\r\n         dispatch({\r\n            type: NEWGRADE_REGISTERED,\r\n            payload: res.data,\r\n         });\r\n         dispatch(setAlert(\"Nuevo Tipo de Nota Agregado\", \"success\", \"3\"));\r\n         dispatch(togglePopup(\"default\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"4\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGrades =\r\n   (formData, class_id, period) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.put(`/grade/${class_id}/${period}`, formData);\r\n         dispatch({\r\n            type: GRADES_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Calificaciones Modificadas\", \"success\", \"2\"));\r\n         dispatch({\r\n            type: GRADES_CLEARED,\r\n         });\r\n\r\n         history.push(`/class/single/${class_id}`);\r\n         window.scrollTo(0, 0);\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const deleteGrades =\r\n   (gradetype, class_id, period, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: \"No puede eliminar la última nota del bimestre\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         const res = await api.delete(\r\n            `/grade/${class_id}/${period}/${gradetype}`\r\n         );\r\n\r\n         dispatch({\r\n            type: GRADES_DELETED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"3\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateGradeTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/grade-type\", formData);\r\n\r\n      dispatch({\r\n         type: GRADETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Notas Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteGradeType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/grade-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: GRADETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Nota Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const gradesPDF = (header, grades, info) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const data = { header, grades, info };\r\n   try {\r\n      if (!header) await api.post(\"/pdf/grade/best\", { grades });\r\n      else {\r\n         if (info.period !== undefined)\r\n            await api.post(\"/pdf/grade/period-list\", data);\r\n         else await api.post(\"/pdf/grade/list\", data);\r\n      }\r\n\r\n      const name = !header\r\n         ? `Mejores Asistencias ${info.year}`\r\n         : `Notas de ${info.category} de ${info.teacher} ${format(\r\n              new Date(),\r\n              \"dd-MM-yy\"\r\n           )}`;\r\n\r\n      const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, name);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(GRADES_ERROR, err.response));\r\n         dispatch(\r\n            setAlert(\r\n               err.response.data.msg,\r\n               \"danger\",\r\n               info.period !== undefined && header ? \"3\" : \"2\"\r\n            )\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const certificatePDF =\r\n   (header, grades, date, info, last) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         if (last || !date || !info.students.some((item) => item.checked)) {\r\n            const errorMessage = {\r\n               response: {\r\n                  status: 402,\r\n                  data: {\r\n                     msg: !date\r\n                        ? \"Debe ingresar la fecha\"\r\n                        : last\r\n                        ? \"Las notas del final deben estar cargadas\"\r\n                        : \"Debe seleccionar al menos un alumno\",\r\n                  },\r\n               },\r\n            };\r\n            throw errorMessage;\r\n         }\r\n\r\n         let newInfo = {\r\n            header,\r\n            info,\r\n            date,\r\n         };\r\n\r\n         for (let x = 0; x < info.students.length; x++) {\r\n            if (info.students[x].checked) {\r\n               newInfo = {\r\n                  ...newInfo,\r\n                  student: info.students[x],\r\n                  grades: grades[x],\r\n               };\r\n\r\n               if (info.period === 5)\r\n                  await api.post(\"/pdf/grade/cambridge\", newInfo);\r\n               else await api.post(\"/pdf/grade/certificate\", newInfo);\r\n\r\n               const pdf = await api.get(\"/pdf/grade/fetch\", {\r\n                  responseType: \"blob\",\r\n               });\r\n\r\n               const pdfBlob = new Blob([pdf.data], {\r\n                  type: \"application/pdf\",\r\n               });\r\n\r\n               saveAs(\r\n                  pdfBlob,\r\n                  `Certificado ${info.category} ${\r\n                     info.period === 6 ? \"Cambridge\" : \"\"\r\n                  } ${info.students[x].name}.pdf`\r\n               );\r\n            }\r\n         }\r\n\r\n         dispatch(togglePopup(\"default\"));\r\n         dispatch(setAlert(\"Certificados Generados\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(GRADES_ERROR, err.response));\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"4\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const clearGrades = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADES_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearGradeTypes = () => (dispatch) => {\r\n   dispatch({\r\n      type: GRADETYPES_CLEARED,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\nimport store from \"../utils/store\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { addUserToList, clearUsers, removeUserFromList } from \"./user\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   CLASS_LOADED,\r\n   CLASSES_LOADED,\r\n   ACTIVECLASSES_LOADED,\r\n   CLASS_REGISTERED,\r\n   CLASSSTUDENT_ADDED,\r\n   CLASS_UPDATED,\r\n   CLASSSTUDENT_REMOVED,\r\n   CLASS_DELETED,\r\n   CLASS_CLEARED,\r\n   CLASSES_CLEARED,\r\n   CLASS_ERROR,\r\n   CLASSES_ERROR,\r\n   CLASSCATEGORY_UPDATED,\r\n   CLASSES_PDF_ERROR,\r\n   TEACHERHOURS_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadClass = (_id, spinner, user) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res;\r\n\r\n      if (_id !== \"0\")\r\n         res = await api.get(`/class/${user ? \"student/\" : \"\"}${_id}`);\r\n\r\n      dispatch({\r\n         type: CLASS_LOADED,\r\n         payload: _id === \"0\" ? null : res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getActiveClasses = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/class\");\r\n\r\n      dispatch({\r\n         type: ACTIVECLASSES_LOADED,\r\n         payload: res.data.length,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getTeacherHours = (teacher_id) => async (dispatch) => {\r\n   try {\r\n      dispatch(updateLoadingSpinner(true));\r\n\r\n      const res = await api.get(\"/class/teacher/\" + teacher_id);\r\n\r\n      dispatch({\r\n         type: TEACHERHOURS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadClasses = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/class?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: CLASSES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scrollTo(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateClass = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let newClass = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n\r\n      if (!newClass._id) res = await api.post(\"/class\", newClass);\r\n      else res = await api.put(`/class/${newClass._id}`, newClass);\r\n\r\n      if (store.getState().classes.loading) loadClasses({}, false);\r\n      else\r\n         dispatch({\r\n            type: !newClass._id ? CLASS_REGISTERED : CLASS_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !newClass._id ? \"Nueva Clase Creada\" : \"Clase Modificada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(\"/class/all\");\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addStudent = (student, classInfo) => (dispatch) => {\r\n   let exist = classInfo\r\n      ? classInfo.students.some((item) => item._id === student._id)\r\n      : false;\r\n\r\n   if (!exist) {\r\n      dispatch({\r\n         type: CLASSSTUDENT_ADDED,\r\n         payload: student,\r\n      });\r\n      dispatch(removeUserFromList(student._id));\r\n      dispatch(\r\n         setAlert(\"El alumno se ha agregado correctamente\", \"success\", \"3\")\r\n      );\r\n   } else {\r\n      dispatch(setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\"));\r\n   }\r\n};\r\n\r\nexport const removeStudent = (student) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSSTUDENT_REMOVED,\r\n      payload: student._id,\r\n   });\r\n   dispatch(addUserToList(student));\r\n};\r\n\r\nexport const updateClassCategory = (category) => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSCATEGORY_UPDATED,\r\n      payload: category,\r\n   });\r\n};\r\n\r\nexport const deleteClass = (class_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/class/${class_id}`);\r\n\r\n      if (store.getState().classes.loading) dispatch(loadClasses({}, false));\r\n      else\r\n         dispatch({\r\n            type: CLASS_DELETED,\r\n            payload: class_id,\r\n         });\r\n\r\n      history.push(\"/class/all\");\r\n      dispatch(setAlert(\"Clase Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const classPDF = (info, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let pdf;\r\n      let name = \"\";\r\n\r\n      switch (type) {\r\n         case \"classes\":\r\n            await api.post(\"/pdf/class/list\", info);\r\n\r\n            name = \"Clases\";\r\n            break;\r\n         case \"class\":\r\n            await api.post(\"/pdf/class/one\", info);\r\n\r\n            name = `Clase ${info.category} de ${info.teacher}`;\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      pdf = await api.get(\"/pdf/class/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `${name} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CLASSES_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearClass = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearClasses = () => (dispatch) => {\r\n   dispatch({\r\n      type: CLASSES_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\nimport { saveAs } from \"file-saver\";\nimport history from \"../utils/history\";\n\nimport { setAlert } from \"./alert\";\nimport { updateLoadingSpinner, setError } from \"./global\";\n\nimport {\n   OBSERVATIONS_CLEARED,\n   OBSERVATIONS_ERROR,\n   OBSERVATIONS_LOADED,\n   OBSERVATIONS_UPDATED,\n} from \"./types\";\n\nexport const loadObservations =\n   (class_id, user_id, spinner) => async (dispatch) => {\n      if (spinner) dispatch(updateLoadingSpinner(true));\n      try {\n         const res = await api.get(\n            `/observation/${class_id}${user_id ? \"/\" + user_id : \"\"}`\n         );\n         dispatch({\n            type: OBSERVATIONS_LOADED,\n            payload: res.data,\n         });\n      } catch (err) {\n         if (err.response.status !== 401)\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n      }\n      if (spinner) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const updateObservations =\n   (formData, class_id, period) => async (dispatch) => {\n      dispatch(updateLoadingSpinner(true));\n      let error = false;\n\n      try {\n         await api.put(`/observation/${class_id}/${period}`, formData);\n\n         dispatch({\n            type: OBSERVATIONS_UPDATED,\n         });\n\n         dispatch(setAlert(\"Observaciones Modificadas\", \"success\", \"2\"));\n\n         history.push(`/class/single/${class_id}`);\n         window.scrollTo(0, 0);\n      } catch (err) {\n         if (err.response.status !== 401) {\n            dispatch(setError(OBSERVATIONS_ERROR, err.response));\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\n         } else error = true;\n      }\n\n      if (!error) dispatch(updateLoadingSpinner(false));\n   };\n\nexport const reportcardPDF = (students, info) => async (dispatch) => {\n   dispatch(updateLoadingSpinner(true));\n   let error = false;\n   try {\n      if (students.length === 0) {\n         const errorMessage = {\n            response: {\n               status: 402,\n               data: {\n                  msg: \"Debe seleccionar al menos un alumno\",\n               },\n            },\n         };\n         throw errorMessage;\n      }\n      for (let x = 0; x < students.length; x++) {\n         if (students[x].checked) {\n            await api.post(\"/pdf/observation/report-card\", {\n               student: students[x],\n               info,\n            });\n\n            const pdf = await api.get(\"/pdf/observation/fetch\", {\n               responseType: \"blob\",\n            });\n\n            const pdfBlob = new Blob([pdf.data], {\n               type: \"application/pdf\",\n            });\n\n            saveAs(\n               pdfBlob,\n               `Certificado ${info.category} ${\n                  info.period === 6 ? \"Cambridge\" : \"\"\n               }  ${students[x].name}.pdf`\n            );\n         }\n      }\n\n      dispatch(setAlert(\"Libretas Generadas\", \"success\", \"2\"));\n   } catch (err) {\n      console.log(err);\n      if (err.response.status !== 401) {\n         dispatch(setError(OBSERVATIONS_ERROR, err.response));\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\n      } else error = true;\n   }\n\n   if (!error) {\n      dispatch(updateLoadingSpinner(false));\n      window.scrollTo(0, 0);\n   }\n};\n\nexport const clearObservations = () => (dispatch) => {\n   dispatch({ type: OBSERVATIONS_CLEARED });\n};\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\nimport { getTotalDebt } from \"./installment\";\r\n\r\nimport {\r\n   ENROLLMENT_LOADED,\r\n   ENROLLMENTS_LOADED,\r\n   YEARENROLLMENTS_LOADED,\r\n   ENROLLMENT_REGISTERED,\r\n   ENROLLMENT_UPDATED,\r\n   ENROLLMENT_DELETED,\r\n   ENROLLMENT_CLEARED,\r\n   ENROLLMENTS_CLEARED,\r\n   ENROLLMENT_ERROR,\r\n   ENROLLMENTS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadEnrollment = (enrollment_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/enrollment/one/${enrollment_id}`);\r\n      dispatch({\r\n         type: ENROLLMENT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getYearEnrollments = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/enrollment/year\");\r\n\r\n      dispatch({\r\n         type: YEARENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadEnrollments = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/enrollment?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENTS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENTS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerUpdateEnrollment =\r\n   (formData, loaded) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let enrollment = newObject(formData);\r\n\r\n      try {\r\n         if (!loaded)\r\n            dispatch(loadEnrollments({ year: new Date().getFullYear() }));\r\n\r\n         let res;\r\n         if (!enrollment._id) res = await api.post(\"/enrollment\", enrollment);\r\n         else res = await api.put(`/enrollment/${enrollment._id}`, enrollment);\r\n\r\n         dispatch({\r\n            type: !enrollment._id ? ENROLLMENT_REGISTERED : ENROLLMENT_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n         dispatch(\r\n            setAlert(\r\n               `Inscripción ${!enrollment._id ? \"Registrada\" : \"Modificada\"}`,\r\n               \"success\",\r\n               \"2\"\r\n            )\r\n         );\r\n         dispatch(getYearEnrollments());\r\n         dispatch(getTotalDebt());\r\n\r\n         history.push(\"/enrollment/list\");\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   };\r\n\r\nexport const deleteEnrollment = (enroll_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/enrollment/${enroll_id}`);\r\n\r\n      dispatch({\r\n         type: ENROLLMENT_DELETED,\r\n         payload: enroll_id,\r\n      });\r\n      dispatch(getYearEnrollments());\r\n      dispatch(setAlert(\"Inscripción Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const enrollmentsPDF = (enrollments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/enrollment/list\", enrollments);\r\n\r\n      const pdf = await api.get(\"/pdf/enrollment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Inscripciones ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(ENROLLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearEnrollment = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENT_CLEARED });\r\n};\r\n\r\nexport const clearEnrollments = () => (dispatch) => {\r\n   dispatch({ type: ENROLLMENTS_CLEARED });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   REGISTER_LOADED,\r\n   REGISTERS_LOADED,\r\n   REGISTER_CLOSED,\r\n   REGISTER_DELETED,\r\n   REGISTERS_CLEARED,\r\n   REGISTER_ERROR,\r\n   REGISTERS_ERROR,\r\n   REGISTER_CLEARED,\r\n   REGISTERS_PDF_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadRegister = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/register/last`);\r\n      dispatch({\r\n         type: REGISTER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadRegisters =\r\n   (formData, spinner, byMonth) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      try {\r\n         const res = await api.get(\r\n            byMonth\r\n               ? `/register/year/bymonth?${filterData(formData)}`\r\n               : `/register?${filterData(formData)}`\r\n         );\r\n         dispatch({\r\n            type: REGISTERS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(REGISTERS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const createRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let register = newObject(formData);\r\n\r\n   try {\r\n      await api.post(\"/register\", register);\r\n\r\n      dispatch(clearRegisters());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch(setAlert(\"Caja Abierta para Transacciones\", \"success\", \"1\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const closeRegister = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      let register = newObject(formData);\r\n\r\n      await api.put(\"/register\", register);\r\n\r\n      dispatch({\r\n         type: REGISTER_CLOSED,\r\n      });\r\n      dispatch(setAlert(\"Caja del día Cerrada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteRegister = (register_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/register/${register_id}`);\r\n\r\n      dispatch({\r\n         type: REGISTER_DELETED,\r\n         payload: register_id,\r\n      });\r\n\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Cierre de Caja Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const registerPDF = (registers) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/register/list\", registers);\r\n\r\n      const pdf = await api.get(\"/pdf/register/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         `${\r\n            registers[0].temporary !== undefined\r\n               ? \"Caja Diaria\"\r\n               : \"Cajas Mensuales\"\r\n         } ${format(new Date(), \"dd-MM-yy\")}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(REGISTERS_PDF_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearRegister = () => (dispatch) => {\r\n   dispatch({ type: REGISTER_CLEARED });\r\n};\r\n\r\nexport const clearRegisters = () => (dispatch) => {\r\n   dispatch({ type: REGISTERS_CLEARED });\r\n};\r\n","import api from \"../utils/api\";\r\nimport format from \"date-fns/format\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { clearRegister } from \"./register\";\r\nimport { getTotalDebt } from \"./installment\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport {\r\n   INVOICE_LOADED,\r\n   INVOICES_LOADED,\r\n   INVOICENUMBER_LOADED,\r\n   INVOICE_REGISTERED,\r\n   INVOICE_DELETED,\r\n   INVOICE_CLEARED,\r\n   INVOICES_CLEARED,\r\n   INVOICE_ERROR,\r\n   INVOICES_ERROR,\r\n   INVOICEDETAIL_ADDED,\r\n   INVOICEDETAIL_REMOVED,\r\n   INSTALLMENT_DELETED,\r\n   INSTALLMENT_ADDED,\r\n   DISCOUNT_ADDED,\r\n} from \"./types\";\r\n\r\nexport const loadInvoice = (invoice_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getInvoiceNumber = () => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      let res = await api.get(\"/invoice/last/invoiceid\");\r\n\r\n      dispatch({\r\n         type: INVOICENUMBER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n   dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadInvoices = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/invoice?${filterData(formData)}`);\r\n      dispatch({\r\n         type: INVOICES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const registerInvoice = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let invoice = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/invoice\", invoice);\r\n\r\n      dispatch({\r\n         type: INVOICE_REGISTERED,\r\n      });\r\n\r\n      let fullName = \"\";\r\n      if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n      else {\r\n         const lastname = invoice.user.user_id\r\n            ? invoice.user.user_id.lastname\r\n            : invoice.user.lastname;\r\n         const name = invoice.user.user_id\r\n            ? invoice.user.user_id.name\r\n            : invoice.user.name;\r\n         fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n            name ? name : \"\"\r\n         }`;\r\n      }\r\n\r\n      const email = invoice.user.user_id\r\n         ? invoice.user.user_id.email\r\n         : invoice.user.email\r\n         ? invoice.user.email\r\n         : \"\";\r\n      const cel = invoice.user.user_id\r\n         ? invoice.user.user_id.cel\r\n         : invoice.user.cel\r\n         ? invoice.user.cel\r\n         : \"\";\r\n\r\n      await dispatch(\r\n         invoicesPDF(\r\n            { ...res.data, user: { name: fullName, email, cel } },\r\n            \"invoice\"\r\n         )\r\n      );\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Registrada\", \"success\", \"1\"));\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\nexport const deleteInvoice = (invoice_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/invoice/${invoice_id}`);\r\n\r\n      dispatch({\r\n         type: INVOICE_DELETED,\r\n         payload: invoice_id,\r\n      });\r\n\r\n      dispatch(getTotalDebt());\r\n      dispatch(clearRegister());\r\n\r\n      dispatch(setAlert(\"Factura Eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const invoicesPDF = (formData, type) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (type === \"list\") await api.post(\"/pdf/invoice/list\", formData);\r\n      else await api.post(\"/pdf/invoice\", formData);\r\n\r\n      const pdf = await api.get(\"/pdf/invoice/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      const date = format(\r\n         new Date(type === \"list\" ? null : formData.date),\r\n         \"dd-MM-yy\"\r\n      );\r\n\r\n      saveAs(\r\n         pdfBlob,\r\n         type === \"list\"\r\n            ? `Ingresos ${date}.pdf`\r\n            : `Factura ${formData.user.name} ${date}.pdf`\r\n      );\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INVOICES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInvoice = () => (dispatch) => {\r\n   dispatch({ type: INVOICE_CLEARED });\r\n};\r\n\r\nexport const clearInvoices = () => (dispatch) => {\r\n   dispatch({ type: INVOICES_CLEARED });\r\n};\r\n\r\nexport const addDetail = (detail) => (dispatch) => {\r\n   dispatch(setAlert(\"Cuota agregada correctamente\", \"success\", \"3\"));\r\n   dispatch({ type: INVOICEDETAIL_ADDED, payload: detail });\r\n   dispatch({ type: INSTALLMENT_DELETED, payload: detail._id });\r\n};\r\n\r\nexport const addDiscount = (student) => (dispatch) => {\r\n   dispatch({ type: DISCOUNT_ADDED, payload: student });\r\n};\r\n\r\nexport const removeDetail = (item) => (dispatch) => {\r\n   const installment = {\r\n      ...item,\r\n      _id: item.installment,\r\n   };\r\n   dispatch({ type: INVOICEDETAIL_REMOVED, payload: installment._id });\r\n   dispatch({ type: INSTALLMENT_ADDED, payload: installment });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport history from \"../utils/history\";\r\nimport { saveAs } from \"file-saver\";\r\nimport api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   updateLoadingSpinner,\r\n   filterData,\r\n   newObject,\r\n   setError,\r\n} from \"./global\";\r\n\r\nimport { clearInstallments } from \"./installment\";\r\nimport { clearAttendances } from \"./attendance\";\r\nimport { clearGrades } from \"./grade\";\r\nimport { logOut, updateAuthUser } from \"./auth\";\r\nimport { clearClass } from \"./class\";\r\nimport { clearObservations } from \"./observation\";\r\nimport { clearEnrollments } from \"./enrollment\";\r\nimport { clearInvoices } from \"./invoice\";\r\n\r\nimport {\r\n   USER_LOADED,\r\n   USERS_LOADED,\r\n   USERSBK_LOADED,\r\n   USER_REGISTERED,\r\n   USER_UPDATED,\r\n   SEARCH_CLEARED,\r\n   USER_DELETED,\r\n   USERFORLIST_ADDED,\r\n   USERFROMLIST_REMOVED,\r\n   USERS_CLEARED,\r\n   USER_CLEARED,\r\n   USER_ERROR,\r\n   USERS_ERROR,\r\n   USERSBK_ERROR,\r\n   OTHERVALUES_LOADED,\r\n   USERSBK_CLEARED,\r\n} from \"./types\";\r\n\r\n//Load User\r\nexport const loadUser = (user_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user/${user_id}`);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USER_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const getStudentNumber = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/user/register/number\");\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload: {\r\n            type: \"studentNumber\",\r\n            info: res.data,\r\n         },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getActiveUsers = (type) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user?active=true&type=${type}`);\r\n      let payload = {\r\n         type: type === \"student\" ? \"activeStudents\" : \"activeTeachers\",\r\n         info: res.data.length,\r\n      };\r\n\r\n      dispatch({\r\n         type: OTHERVALUES_LOADED,\r\n         payload,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response, type));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\n//LoadUsers\r\nexport const loadUsers = (formData, spinner, primary) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/user?${filterData(formData)}`);\r\n\r\n      dispatch({\r\n         type: primary ? USERS_LOADED : USERSBK_LOADED,\r\n         payload: !primary\r\n            ? res.data\r\n            : {\r\n                 users: res.data,\r\n                 type: formData.type ? formData.type : \"\",\r\n              },\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         if (spinner) {\r\n            dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n            window.scrollTo(0, 0);\r\n         }\r\n         dispatch(\r\n            setError(primary ? USERS_ERROR : USERSBK_ERROR, err.response)\r\n         );\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\n//Load Relatives\r\nexport const loadRelatives = (user_id) => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(`/user/tutor/${user_id}`);\r\n\r\n      dispatch({\r\n         type: USERSBK_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(USERSBK_ERROR, err.response));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerUpdateUser = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      let res;\r\n      if (!user._id) res = await api.post(\"/user\", user);\r\n      else res = await api.put(`/user/${user._id}`, user);\r\n\r\n      if (!user.active || !user._id) {\r\n         dispatch(clearEnrollments());\r\n         dispatch(clearAttendances());\r\n         dispatch(clearGrades());\r\n         dispatch(clearClass());\r\n\r\n         if (!user._id) dispatch(clearInstallments());\r\n      }\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: !user._id ? USER_REGISTERED : USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            !user._id ? \"Usuario registrado\" : \"Usuario modificado\",\r\n            \"success\",\r\n            \"1\"\r\n         )\r\n      );\r\n\r\n      history.push(`/index/dashboard/${res.data._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      dispatch(updateLoadingSpinner(false));\r\n      window.scrollTo(0, 0);\r\n   }\r\n};\r\n\r\n//Update user's credentials\r\nexport const updateCredentials = (formData, auth_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   const user = newObject(formData);\r\n\r\n   try {\r\n      let res = await api.put(`/user/credentials/${user._id}`, user);\r\n\r\n      if (user._id === auth_id) dispatch(updateAuthUser(res.data));\r\n      else\r\n         dispatch({\r\n            type: USER_UPDATED,\r\n            payload: res.data,\r\n         });\r\n\r\n      dispatch(setAlert(\"Credenciales modificadas\", \"success\", \"1\"));\r\n\r\n      history.push(`/index/dashboard/${user._id}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USER_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const addUserToList = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFORLIST_ADDED,\r\n      payload: user,\r\n   });\r\n};\r\n\r\nexport const removeUserFromList = (user_id) => (dispatch) => {\r\n   dispatch({\r\n      type: USERFROMLIST_REMOVED,\r\n      payload: user_id,\r\n   });\r\n};\r\n\r\nexport const deleteUser = (user, self) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/user/${user._id}/${user.type}`);\r\n\r\n      if (self) dispatch(logOut());\r\n      else history.push(\"/index/dashboard/0\");\r\n\r\n      dispatch({\r\n         type: USER_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Usuario Eliminado\", \"success\", \"1\"));\r\n\r\n      dispatch(clearUsers());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const userPDF = (users, userSearchType) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/user/list\", { users, usersType: userSearchType });\r\n\r\n      const pdf = await api.get(\"/pdf/user/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      let type = \"\";\r\n\r\n      switch (userSearchType) {\r\n         case \"student\":\r\n            type = \"Alumnos\";\r\n            break;\r\n         case \"guardian\":\r\n            type = \"Tutores\";\r\n            break;\r\n         case \"teacher\":\r\n            type = \"Profesores\";\r\n            break;\r\n         case \"admin\":\r\n            type = \"Administradores\";\r\n            break;\r\n         default:\r\n            break;\r\n      }\r\n\r\n      saveAs(pdfBlob, `${type} ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(USERS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearProfile = (sameUser) => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n   dispatch(clearClass());\r\n   dispatch(clearGrades());\r\n   dispatch(clearInstallments());\r\n   dispatch(clearAttendances());\r\n   dispatch(clearObservations());\r\n   dispatch(clearInvoices());\r\n\r\n   if (!sameUser) {\r\n      dispatch(clearEnrollments());\r\n      dispatch({\r\n         type: USERSBK_CLEARED,\r\n      });\r\n   }\r\n};\r\n\r\nexport const clearUser = () => (dispatch) => {\r\n   dispatch({\r\n      type: USER_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearUsers = () => (dispatch) => {\r\n   dispatch({\r\n      type: USERS_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearSearch = (primary) => (dispatch) => {\r\n   dispatch({\r\n      type: SEARCH_CLEARED,\r\n      payload: primary,\r\n   });\r\n};\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearSearch } from \"./user\";\r\n\r\nimport {\r\n   INSTALLMENT_LOADED,\r\n   TOTALDEBT_LOADED,\r\n   ESTIMATEDPROFIT_LOADED,\r\n   INSTALLMENTS_LOADED,\r\n   INSTALLMENT_UPDATED,\r\n   INSTALLMENT_REGISTERED,\r\n   INSTALLMENT_DELETED,\r\n   EXPIREDINSTALLMENTS_UPDATED,\r\n   INSTALLMENT_CLEARED,\r\n   INSTALLMENTS_CLEARED,\r\n   INSTALLMENTS_ERROR,\r\n   INSTALLMENT_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadInstallment =\r\n   (installment_id, spinner) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      try {\r\n         const res = await api.get(`/installment/${installment_id}`);\r\n         dispatch({\r\n            type: INSTALLMENT_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"3\"));\r\n         }\r\n      }\r\n      if (spinner) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const getTotalDebt = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\"/installment/month/debts\");\r\n\r\n      dispatch({\r\n         type: TOTALDEBT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const getEstimatedProfit = () => async (dispatch) => {\r\n   try {\r\n      let res = await api.get(\r\n         `/installment/profit/${new Date().getMonth() + 1}`\r\n      );\r\n\r\n      dispatch({\r\n         type: ESTIMATEDPROFIT_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const loadInstallments =\r\n   (formData, spinner, student, type) => async (dispatch) => {\r\n      if (spinner) dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n      try {\r\n         let res;\r\n         if (student) {\r\n            if (!formData.student) {\r\n               const errorMessage = {\r\n                  response: {\r\n                     status: 402,\r\n                     data: {\r\n                        msg: \"Debe buscar un usuario primero\",\r\n                     },\r\n                  },\r\n               };\r\n               throw errorMessage;\r\n            } else {\r\n               res = await api.get(\r\n                  `/installment/student/${formData.student._id}/${type}`\r\n               );\r\n               if (spinner) dispatch(clearSearch());\r\n            }\r\n         } else res = await api.get(`/installment?${filterData(formData)}`);\r\n\r\n         dispatch({\r\n            type: INSTALLMENTS_LOADED,\r\n            payload: res.data,\r\n         });\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n            if (spinner)\r\n               dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (spinner && !error) dispatch(updateLoadingSpinner(false));\r\n   };\r\n\r\nexport const updateIntallment = (formData, loaded) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   let installment = newObject({\r\n      ...formData,\r\n      ...(formData.student._id && { student: formData.student._id }),\r\n   });\r\n\r\n   try {\r\n      if (!loaded) {\r\n         dispatch(\r\n            loadInstallments(\r\n               { student: { _id: installment.student } },\r\n               false,\r\n               true,\r\n               \"all\"\r\n            )\r\n         );\r\n      }\r\n\r\n      let res;\r\n      if (!installment._id) res = await api.post(\"/installment\", installment);\r\n      else res = await api.put(`/installment/${installment._id}`, installment);\r\n      dispatch({\r\n         type: installment._id ? INSTALLMENT_UPDATED : INSTALLMENT_REGISTERED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\r\n            installment._id ? \"Cuota Modificada\" : \"Cuota Agregada\",\r\n            \"success\",\r\n            \"2\"\r\n         )\r\n      );\r\n      history.push(`/index/installments/${installment.student}`);\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpiredIntallments = () => async (dispatch) => {\r\n   try {\r\n      await api.put(\"/installment\");\r\n\r\n      dispatch({\r\n         type: EXPIREDINSTALLMENTS_UPDATED,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"1\"));\r\n         window.scroll(0, 0);\r\n      }\r\n   }\r\n};\r\n\r\nexport const deleteInstallment = (_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/installment/${_id}`);\r\n\r\n      dispatch({\r\n         type: INSTALLMENT_DELETED,\r\n         payload: _id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Cuota eliminada\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENT_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const installmentsPDF = (installments) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/installment/list\", installments);\r\n\r\n      const pdf = await api.get(\"/pdf/installment/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Deudas ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(INSTALLMENTS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearInstallment = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENT_CLEARED,\r\n   });\r\n};\r\n\r\nexport const clearInstallments = () => (dispatch) => {\r\n   dispatch({\r\n      type: INSTALLMENTS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n   checkBackup,\r\n   togglePopup,\r\n} from \"./global\";\r\nimport { updateExpiredIntallments } from \"./installment\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   USERAUTH_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAIL,\r\n   LOGOUT,\r\n   USERAUTH_UPDATED,\r\n} from \"./types\";\r\n\r\nexport const loadUser = (login) => async (dispatch) => {\r\n   try {\r\n      const res = await api.get(\"/auth\");\r\n      dispatch({\r\n         type: USERAUTH_LOADED,\r\n         payload: res.data,\r\n      });\r\n\r\n      if (login) {\r\n         dispatch(updateLoadingSpinner(false));\r\n         dispatch(updateExpiredIntallments());\r\n         if (res.data.type === \"secretary\" && (await dispatch(checkBackup())))\r\n            dispatch(togglePopup(\"default\"));\r\n      }\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(AUTH_ERROR, err.response));\r\n      }\r\n   }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n\r\n   let user = newObject(formData);\r\n\r\n   try {\r\n      const res = await api.post(\"/auth\", user);\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser(true));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(LOGIN_FAIL, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"0\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n   dispatch({\r\n      type: LOGOUT,\r\n   });\r\n   dispatch(clearProfile());\r\n   history.push(\"/login\");\r\n};\r\n\r\nexport const updateAuthUser = (user) => (dispatch) => {\r\n   dispatch({\r\n      type: USERAUTH_UPDATED,\r\n      payload: user,\r\n   });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"./store\";\r\n\r\nimport { logOut } from \"../actions/auth\";\r\nimport { updateLoadingSpinner, setError } from \"../actions/global\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { AUTH_ERROR } from \"../actions/types\";\r\n\r\nconst api = axios.create({\r\n   baseURL: \"/api\",\r\n   headers: {\r\n      \"Content-Type\": \"application/json\",\r\n   },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n   (res) => res,\r\n   (err) => {\r\n      if (err.response.status === 401) {\r\n         store.dispatch(logOut());\r\n         if (\r\n            !store\r\n               .getState()\r\n               .alert.some((item) => item.msg === err.response.data.msg)\r\n         ) {\r\n            store.dispatch(setAlert(err.response.data.msg, \"danger\", \"0\"));\r\n            store.dispatch(setError(AUTH_ERROR, err.response));\r\n            store.dispatch(updateLoadingSpinner(false));\r\n            window.scrollTo(0, 0);\r\n         }\r\n      }\r\n      return Promise.reject(err);\r\n   }\r\n);\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      api.defaults.headers.common[\"x-auth-token\"] = token;\r\n      localStorage.setItem(\"token\", token);\r\n   } else {\r\n      delete api.defaults.headers.common[\"x-auth-token\"];\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React from \"react\";\r\n\r\nimport canada1 from \"../../../../../img/canada.jpg\";\r\nimport canada2 from \"../../../../../img/canada2.jpg\";\r\nimport canada3 from \"../../../../../img/canada3.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Canada = () => {\r\n   return (\r\n      <section className=\"section-canada\">\r\n         <h2 className=\"heading-secondary text-primary text-center\">\r\n            Viajes a Canada\r\n         </h2>\r\n         <div className=\"row\">\r\n            <div className=\"text-left section-canada-text\">\r\n               <p className=\"paragraph\">\r\n                  Desde el año 1998 organizamos viajes a Canadá en el mes de\r\n                  julio. Los alumnos tienen la posibilidad de vivir un mes en\r\n                  casas de familia, compartir con ellos el idioma, la cultura y\r\n                  las costumbres mientras perfeccionan el idioma. Además, cursan\r\n                  clases diarias, acordes a su nivel de inglés, en la\r\n                  prestigiosa escuela ILAC. Esta experiencia se convierte en\r\n                  imborrable para los alumnos tanto desde el punto de vista\r\n                  personal por el trato con personas de todo el mundo, como\r\n                  desde el punto de vista del idioma ya que se incorpora en sus\r\n                  vidas de una manera integral y natural.\r\n               </p>\r\n            </div>\r\n            <div className=\"composition\">\r\n               <img\r\n                  alt=\"Foto Canada 1\"\r\n                  className=\"composition-photo composition-photo--p1\"\r\n                  src={canada1}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 2\"\r\n                  className=\"composition-photo composition-photo--p2\"\r\n                  src={canada2}\r\n               />\r\n               <img\r\n                  alt=\"Foto Canada 3\"\r\n                  className=\"composition-photo composition-photo--p3\"\r\n                  src={canada3}\r\n               />\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Canada;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\n\r\n//import video from \"../../../../../img/entrance.mp4\";\r\nimport \"./style.scss\";\r\n\r\nconst Team = ({ users: { loading, users }, loadUsers }) => {\r\n   const [teamNumber, setTeamNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   const moveUp = () => {\r\n      if (teamNumber < users.length - 1) {\r\n         setTeamNumber(teamNumber + 1);\r\n      }\r\n   };\r\n\r\n   const moveDown = () => {\r\n      if (teamNumber > 0) {\r\n         setTeamNumber(teamNumber - 1);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-team\">\r\n         {/* <div className=\"bg-video\">\r\n            <video className=\"bg-video-content\" autoPlay muted loop>\r\n               <source src={video} type=\"video/mp4\" />\r\n               Your browser is not supported!\r\n            </video>\r\n         </div> */}\r\n         <h1 className=\"heading-secondary text-center text-primary mb-5\">\r\n            Conoce nuestro equipo\r\n         </h1>\r\n         {!loading && users.length > 0 && (\r\n            <div className=\"row\">\r\n               <div className=\"btns\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === 0 ? \"text-dark\" : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveDown();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleLeft />\r\n                     </h2>\r\n                  </button>\r\n                  <div className=\"show-md\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className={`btn-icon ${\r\n                           teamNumber === users.length - 1\r\n                              ? \"text-dark\"\r\n                              : \"text-primary\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           moveUp();\r\n                        }}\r\n                     >\r\n                        <h2>\r\n                           <HiOutlineChevronDoubleRight />\r\n                        </h2>\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n               <div className=\"person\">\r\n                  <figure className=\"person-shape\">\r\n                     <img\r\n                        src={\r\n                           users[teamNumber].img.url === \"\"\r\n                              ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                              : users[teamNumber].img.url\r\n                        }\r\n                        alt={\r\n                           users[teamNumber].type +\r\n                           \" of Villa de Merlo English Centre\"\r\n                        }\r\n                        className=\"person-img\"\r\n                     />\r\n                  </figure>\r\n                  <div className=\"person-text\">\r\n                     <h2 className=\"heading-secondary text-dark\">\r\n                        {users[teamNumber].name +\r\n                           \" \" +\r\n                           users[teamNumber].lastname}\r\n                     </h2>\r\n                     <h3 className=\"heading-tertiary\">\r\n                        {users[teamNumber].type === \"admin&teacher\"\r\n                           ? `Director${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             } y Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : users[teamNumber].type === \"teacher\"\r\n                           ? `Profesor${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"\"\r\n                             }`\r\n                           : `Secretari${\r\n                                users[teamNumber].sex === \"Femenino\" ? \"a\" : \"o\"\r\n                             }`}\r\n                     </h3>\r\n                  </div>\r\n               </div>\r\n               <div className=\"hide-md\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className={`btn-icon ${\r\n                        teamNumber === users.length - 1\r\n                           ? \"text-dark\"\r\n                           : \"text-primary\"\r\n                     }`}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        moveUp();\r\n                     }}\r\n                  >\r\n                     <h2>\r\n                        <HiOutlineChevronDoubleRight />\r\n                     </h2>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUsers })(Team);\r\n","import React, { useState } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport gallery1 from \"../../../../../img/gallery-1.jpg\";\r\nimport gallery2 from \"../../../../../img/gallery-2.jpg\";\r\nimport gallery3 from \"../../../../../img/gallery-3.JPG\";\r\nimport gallery4 from \"../../../../../img/gallery-4.jpg\";\r\nimport gallery5 from \"../../../../../img/gallery-5.png\";\r\nimport gallery6 from \"../../../../../img/gallery-6.JPG\";\r\nimport gallery7 from \"../../../../../img/gallery-7.jpg\";\r\nimport gallery8 from \"../../../../../img/gallery-8.JPG\";\r\nimport gallery9 from \"../../../../../img/gallery-9.jpg\";\r\nimport gallery10 from \"../../../../../img/gallery-10.JPG\";\r\nimport gallery11 from \"../../../../../img/gallery-11.JPG\";\r\nimport gallery12 from \"../../../../../img/gallery-12.jpg\";\r\nimport gallery13 from \"../../../../../img/gallery-13.JPG\";\r\nimport gallery14 from \"../../../../../img/gallery-14.jpg\";\r\nimport \"./style.scss\";\r\n\r\nconst Gallery = () => {\r\n   const [otherValues, setOtherValues] = useState({\r\n      toggle: false,\r\n      picture: \"\",\r\n   });\r\n\r\n   const { toggle, picture } = otherValues;\r\n\r\n   const changePicture = (pic) => {\r\n      if (!pic) {\r\n         setOtherValues({ ...otherValues, toggle: false, picture: \"\" });\r\n      } else {\r\n         setOtherValues({ ...otherValues, toggle: true, picture: pic });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <section className=\"gallery hide-sm\">\r\n         <button\r\n            type=\"button\"\r\n            className={`btn-cancel ${toggle ? \"show\" : \"\"}`}\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               changePicture();\r\n            }}\r\n         >\r\n            <FaTimes />\r\n         </button>\r\n         <figure\r\n            className={`gallery-item gallery-item--1 ${\r\n               toggle && picture === 1 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(1)}\r\n         >\r\n            <img src={gallery1} alt=\"Gallery 1\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--2 ${\r\n               toggle && picture === 2 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(2)}\r\n         >\r\n            <img src={gallery2} alt=\"Gallery 2\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--3 ${\r\n               toggle && picture === 3 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(3)}\r\n         >\r\n            <img src={gallery3} alt=\"Gallery 3\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--4 ${\r\n               toggle && picture === 4 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(4)}\r\n         >\r\n            <img src={gallery4} alt=\"Gallery 4\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--5 ${\r\n               toggle && picture === 5 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(5)}\r\n         >\r\n            <img src={gallery5} alt=\"Gallery 5\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--6 ${\r\n               toggle && picture === 6 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(6)}\r\n         >\r\n            <img src={gallery6} alt=\"Gallery 6\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--7 ${\r\n               toggle && picture === 7 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(7)}\r\n         >\r\n            <img src={gallery7} alt=\"Gallery 7\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--8 ${\r\n               toggle && picture === 8 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(8)}\r\n         >\r\n            <img src={gallery8} alt=\"Gallery 8\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--9 ${\r\n               toggle && picture === 9 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(9)}\r\n         >\r\n            <img src={gallery9} alt=\"Gallery 9\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--10 ${\r\n               toggle && picture === 10 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(10)}\r\n         >\r\n            <img src={gallery10} alt=\"Gallery 10\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--11 ${\r\n               toggle && picture === 11 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(11)}\r\n         >\r\n            <img src={gallery11} alt=\"Gallery 11\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--12 ${\r\n               toggle && picture === 12 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(12)}\r\n         >\r\n            <img src={gallery12} alt=\"Gallery 12\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--13 ${\r\n               toggle && picture === 13 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(13)}\r\n         >\r\n            <img src={gallery13} alt=\"Gallery 13\" className=\"gallery-img\" />\r\n         </figure>\r\n         <figure\r\n            className={`gallery-item gallery-item--14 ${\r\n               toggle && picture === 14 ? \"open\" : \"\"\r\n            }`}\r\n            onClick={() => changePicture(14)}\r\n         >\r\n            <img src={gallery14} alt=\"Gallery 14\" className=\"gallery-img\" />\r\n         </figure>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport spinner from \"../../../img/spinner.gif\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ global: { loadingSpinner } }) => {\r\n   return (\r\n      <>\r\n         {loadingSpinner && (\r\n            <div className=\"blurr-bg\">\r\n               <img\r\n                  src={spinner}\r\n                  style={{\r\n                     width: \"300px\",\r\n                     display: \"flex\",\r\n                     margin: \"0 auto\",\r\n                  }}\r\n                  alt=\"\"\r\n               />\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Loading);\r\n","import React from \"react\";\r\n\r\nimport Canada from \"./Canada\";\r\nimport BgVideo from \"./Team\";\r\nimport Gallery from \"./Gallery\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport cambridge from \"../../../../img/cambridge.png\";\r\nimport \"./style.scss\";\r\n\r\nconst About = () => {\r\n   return (\r\n      <>\r\n         <Loading />\r\n         <header className=\"header\">\r\n            <div className=\"header-textbox\">\r\n               <h2 className=\"heading-secondary text-white\">\r\n                  Instituto de Inglés en la Villa de Merlo\r\n               </h2>\r\n               <p className=\"heading-tertiary text-light\">\r\n                  Cursos de Inglés para todas las edades, con amplitud de\r\n                  horarios y con reconocido prestigio en la enseñanza del\r\n                  idioma.\r\n               </p>\r\n            </div>\r\n         </header>\r\n\r\n         <section className=\"section-history\">\r\n            <div className=\"row\">\r\n               <div className=\"history-container\">\r\n                  <div className=\"history-text\">\r\n                     <h2 className=\"heading-secondary text-primary mb-3\">\r\n                        Un poco de historia...\r\n                     </h2>\r\n                     <p className=\"paragraph\">\r\n                        <span className=\"indentation\">\r\n                           Nuestro instituto comienza en el año 1988, aunque\r\n                           como un simple emprendimiento de una docente que en\r\n                           su propia casa arma grupos de alumnos, ya que, en ese\r\n                           momento, Merlo era muy pequeño y no habían muchas\r\n                           opciones para el aprendizaje de idioma. Más adelante,\r\n                           como los grupos de alumnos seguían creciendo día a\r\n                           día, fueron dos las docentes que trabajaban desde sus\r\n                           propias casas trabajando en conjunto, con la\r\n                           asistencia de otras profesoras que las ayudaban en la\r\n                           enseñanza de los diferentes cursos. Surgió entonces\r\n                           la necesidad de aunar todos los cursos en un mismo\r\n                           edificio y con mucho esfuerzo se compró el actual\r\n                           inmueble en el año 1997.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Desde marzo del 1998 el actual edificio comenzó a\r\n                           funcionar y dos años después la totalidad de las\r\n                           aulas estuvieron terminadas.\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"indentation\">\r\n                           Las paredes del instituto muestran pinturas de muchas\r\n                           de las promociones que egresaron y dejaron sus\r\n                           recuerdos en las paredes para ser vistas por futuras\r\n                           generaciones.\r\n                        </span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <section className=\"section-cambridge\" id=\"cambridge\">\r\n            <div className=\"row\">\r\n               <img\r\n                  className=\"cmb-img\"\r\n                  src={cambridge}\r\n                  alt=\"Cambrige University\"\r\n               />\r\n\r\n               <div className=\"cmb-text\">\r\n                  <h2 className=\"heading-secondary text-light\">\r\n                     Examenes Internacionales\r\n                  </h2>\r\n                  <br />\r\n                  <p className=\"paragraph text-secondary\">\r\n                     <span className=\"indentation\">\r\n                        Nuestra institución es el único centro de exámenes\r\n                        Cambridge en la zona. Todos los años en el mes de\r\n                        diciembre nuestros alumnos y también los de otras\r\n                        entidades cercanas rinden los exámenes main suite de la\r\n                        Universidad de Cambridge (Ket, Pet, First y Cae).\r\n                     </span>\r\n                     <br />\r\n                     <span className=\"indentation\">\r\n                        Consideramos que la posibilidad que los alumnos tienen\r\n                        de poseer tales certificaciones son de vital importancia\r\n                        para incluir en sus CVs y para la obtención de puestos\r\n                        de trabajo meritorios en el futuro.\r\n                     </span>\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </section>\r\n\r\n         <Canada />\r\n\r\n         <BgVideo />\r\n\r\n         <Gallery />\r\n      </>\r\n   );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Landing = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"landing\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <div className=\"main-text\">\r\n            <h1 className=\"heading-primary fancy-heading\">\r\n               Villa de Merlo English Centre\r\n            </h1>\r\n            <br />\r\n            <p className=\"heading-tertiary\">\r\n               Instituto de inglés para todas las edades\r\n            </p>\r\n            <div className=\"btn-center pt-3\">\r\n               <Link to=\"/login\" className=\"btn btn-primary\">\r\n                  Iniciar Sesión\r\n               </Link>\r\n               <Link to=\"/contact\" className=\"btn btn-light\">\r\n                  Contáctanos\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImPhone } from \"react-icons/im\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaMapMarkedAlt } from \"react-icons/fa\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Contact = ({ global: { footer, navbar } }) => {\r\n   return (\r\n      <section\r\n         className=\"contact\"\r\n         style={{ minHeight: `calc(100vh - ${footer}px - ${navbar}px)` }}\r\n      >\r\n         <h1 className=\"text-primary heading-primary text-center\">\r\n            Contáctanos\r\n         </h1>\r\n         <div className=\"row\">\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <ImPhone />\r\n               </span>\r\n               <h3 className=\" mb-3\">Teléfono</h3>\r\n               <p className=\"heading-tertiary contact-box-text \">\r\n                  (02656) 476-661\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <MdEmail />\r\n               </span>\r\n               <h3 className=\" mb-3\">Email</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  vdmenglishcenter@gmail.com\r\n               </p>\r\n            </div>\r\n            <div className=\"contact-box heading-tertiary\">\r\n               <span className=\"contact-box-icon\">\r\n                  <FaMapMarkedAlt />\r\n               </span>\r\n               <h3 className=\" mb-3\">Dirección</h3>\r\n               <p className=\"heading-tertiary contact-box-text\">\r\n                  Coronel Mercau 783\r\n               </p>\r\n            </div>\r\n         </div>\r\n         <div className=\"google\">\r\n            <iframe\r\n               src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3370.9031683446124!2d-65.01416217090146!3d-32.34130900603453!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95d2e108fd55ebf5%3A0xb3c61067142f9884!2sInstituto%20English%20Centre%20-%20Villa%20de%20Merlo!5e0!3m2!1ses!2sus!4v1587586479934!5m2!1ses!2sus\"\r\n               frameBorder=\"0\"\r\n               title=\"English center map\"\r\n               allowFullScreen=\"\"\r\n               aria-hidden=\"false\"\r\n               tabIndex=\"0\"\r\n            ></iframe>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport { FaAddressBook } from \"react-icons/fa\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav, toggleMenu } from \"../../../../../actions/global\";\r\n\r\nconst GuestNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   toggleMenu,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"index\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"index\", true);\r\n               }}\r\n            >\r\n               <GoHome />\r\n               <span className=\"hide-md\">&nbsp;Página Principal</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"about\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/about\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"about\", true);\r\n                  clearSearch();\r\n               }}\r\n            >\r\n               <BsInfoCircleFill />\r\n               <span className=\"hide-md\">&nbsp;Acerca de Nosotros</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"contact\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/contact\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"contact\", true);\r\n               }}\r\n            >\r\n               <FaAddressBook />\r\n               <span className=\"hide-md\">&nbsp;Contáctanos</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"login\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/login\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  toggleMenu();\r\n               }}\r\n            >\r\n               <RiLoginCircleLine />\r\n               <span className=\"hide-md\">&nbsp;Iniciar Sesión</span>\r\n            </Link>\r\n         </li>\r\n      </ul>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n})(GuestNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport {\r\n   FaCashRegister,\r\n   FaChalkboardTeacher,\r\n   FaHandHoldingUsd,\r\n   FaUserEdit,\r\n} from \"react-icons/fa\";\r\n\r\nimport { getInvoiceNumber, clearInvoice } from \"../../../../../actions/invoice\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearInstallments } from \"../../../../../actions/installment\";\r\nimport { clearRegister } from \"../../../../../actions/register\";\r\nimport { clearSearch, clearUsers } from \"../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../actions/class\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearUsers,\r\n   clearInvoice,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"user\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp;Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"class\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  clearClasses();\r\n                  clearUsers();\r\n                  updateCurrentNav(\"class\", true);\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp;Clases</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"enrollment\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/enrollment/register\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  clearEnrollments();\r\n                  updateCurrentNav(\"enrollment\", true);\r\n               }}\r\n            >\r\n               <FaUserEdit />\r\n               <span className=\"hide-md\">&nbsp;Inscripción</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"invoice\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/invoice/register\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"invoice\", true);\r\n                  clearInstallments();\r\n                  getInvoiceNumber();\r\n                  clearSearch();\r\n                  clearInvoice();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaHandHoldingUsd />\r\n               <span className=\"hide-md\">&nbsp;Facturación</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item smaller${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"register\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/register/info\"\r\n               onClick={() => {\r\n                  updateCurrentNav(\"register\", true);\r\n                  clearRegister();\r\n                  clearUsers();\r\n                  window.scroll(0, 0);\r\n               }}\r\n            >\r\n               <FaCashRegister />\r\n               <span className=\"hide-md\">&nbsp;Caja</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearEnrollments,\r\n   updateCurrentNav,\r\n})(AdminNavbar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\nimport { loadEnrollments } from \"../../../../../actions/enrollment\";\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\n\r\nconst StudentNavbar = ({\r\n   auth: { userLogged },\r\n   global: { menuToggle, currentNav },\r\n   enrollments: { enrollments, loading },\r\n   clearProfile,\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n}) => {\r\n   const [allEnroll, setAllEnroll] = useState([]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadEnrollments({ classroom: false, student: userLogged._id }, false);\r\n      else setAllEnroll(enrollments);\r\n   }, [loading, loadEnrollments, userLogged, enrollments]);\r\n\r\n   return (\r\n      <>\r\n         {!loading && (\r\n            <>\r\n               {allEnroll\r\n                  .sort((a, b) => {\r\n                     if (a.date > b.date) return -1;\r\n                     if (a.date < b.date) return 1;\r\n                     return 0;\r\n                  })\r\n                  .slice(0, 4)\r\n                  .map((item, index) => (\r\n                     <li\r\n                        key={item._id}\r\n                        className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                           currentNav === \"class-\" + index ? \"current\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to={`/index/dashboard/${userLogged._id}/${item.classroom}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile(true);\r\n                              updateCurrentNav(\"class-\" + index, true);\r\n                           }}\r\n                        >\r\n                           <FaChalkboardTeacher />\r\n                           <span className=\"hide-md\">\r\n                              &nbsp; {item.category.name}\r\n                           </span>\r\n                           <span className=\"show-md\">\r\n                              &nbsp;{item.category.name.substring(0, 2)}\r\n                           </span>\r\n                        </Link>\r\n                     </li>\r\n                  ))}\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCurrentNav,\r\n   loadEnrollments,\r\n   clearProfile,\r\n})(StudentNavbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImSearch } from \"react-icons/im\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport { clearSearch } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst TeacherNavbar = ({\r\n   global: { currentNav, menuToggle },\r\n   clearSearch,\r\n   updateCurrentNav,\r\n}) => {\r\n   return (\r\n      <>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"search\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/user/search\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearSearch();\r\n                  updateCurrentNav(\"user\", true);\r\n               }}\r\n            >\r\n               <ImSearch />\r\n               <span className=\"hide-md\">&nbsp; Búsqueda</span>\r\n            </Link>\r\n         </li>\r\n         <li\r\n            className={`nav-item${menuToggle ? \" show\" : \"\"}${\r\n               currentNav === \"classes\" ? \" current\" : \"\"\r\n            }`}\r\n         >\r\n            <Link\r\n               className=\"nav-link\"\r\n               to=\"/class/all\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  updateCurrentNav(\"class\", true);\r\n               }}\r\n            >\r\n               <FaChalkboardTeacher />\r\n               <span className=\"hide-md\">&nbsp; Clases</span>\r\n            </Link>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearSearch,\r\n   updateCurrentNav,\r\n})(TeacherNavbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserCircle, FaRegUserCircle } from \"react-icons/fa\";\r\n\r\nimport { clearProfile } from \"../../../../../actions/user\";\r\nimport { updateCurrentNav } from \"../../../../../actions/global\";\r\n\r\nconst GuardianNavbar = ({\r\n   auth: { userLogged },\r\n   global: { currentNav, menuToggle },\r\n   updateCurrentNav,\r\n   clearProfile,\r\n}) => {\r\n   return (\r\n      <>\r\n         {userLogged.children.length > 0 &&\r\n            userLogged.children.map((child, index) => (\r\n               <li\r\n                  key={child._id}\r\n                  className={`nav-item ${menuToggle ? \"show\" : \"\"} ${\r\n                     currentNav === \"child\" + index ? \"current\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Link\r\n                     className=\"nav-link\"\r\n                     to={`/index/dashboard/${child._id}`}\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                        clearProfile();\r\n                        updateCurrentNav(`child${index}`, true);\r\n                     }}\r\n                  >\r\n                     {index % 2 === 0 ? <FaRegUserCircle /> : <FaUserCircle />}\r\n                     <span className=\"hide-md\">\r\n                        &nbsp; {child.lastname + \", \" + child.name}\r\n                     </span>\r\n                     <span className=\"show-md\">\r\n                        &nbsp;{child.lastname[0] + child.name[0]}\r\n                     </span>\r\n                  </Link>\r\n               </li>\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearProfile, updateCurrentNav })(\r\n   GuardianNavbar\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsClock } from \"react-icons/bs\";\r\nimport { GoHome } from \"react-icons/go\";\r\nimport { RiLogoutCircleRLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   toggleMenu,\r\n} from \"../../../actions/global\";\r\nimport { logOut } from \"../../../actions/auth\";\r\nimport { clearProfile } from \"../../../actions/user\";\r\n\r\nimport GuestNavbar from \"./usersLinks/GuestNavbar\";\r\nimport AdminNavbar from \"./usersLinks/AdminNavbar\";\r\nimport StudentNavbar from \"./usersLinks/StudentNavbar\";\r\nimport TeacherNavbar from \"./usersLinks/TeacherNavbar\";\r\nimport GuardianNavbar from \"./usersLinks/GuardianNavbar\";\r\n\r\nimport onlyLogo from \"../../../img/logoSinLetras.png\";\r\nimport logo from \"../../../img/logo.png\";\r\nimport \"./style.scss\";\r\n\r\nconst Navbar = ({\r\n   location,\r\n   auth: { userLogged, loading, isAuthenticated },\r\n   enrollments: { enrollments },\r\n   global: { currentNav, menuToggle },\r\n   logOut,\r\n   setNavbarHeight,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n}) => {\r\n   const ref = useRef();\r\n   const isAdmin =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" ||\r\n         userLogged.type === \"admin&teacher\" ||\r\n         userLogged.type === \"secretary\");\r\n\r\n   useEffect(() => {\r\n      if (userLogged) {\r\n         const path = location.pathname.split(\"/\");\r\n\r\n         let currentNav = path[1];\r\n\r\n         if (path[2] === \"dashboard\") {\r\n            switch (userLogged.type) {\r\n               case \"guardian\":\r\n                  if (path[3] !== \"0\")\r\n                     currentNav =\r\n                        \"child\" +\r\n                        userLogged.children.findIndex(\r\n                           (item) => item._id === path[3]\r\n                        );\r\n                  break;\r\n               case \"student\":\r\n                  if (enrollments.length > 0) {\r\n                     if (path[3] === \"0\") currentNav = \"class-\" + 0;\r\n                     else {\r\n                        const index = enrollments.findIndex(\r\n                           (item) => path[4] === item.classroom\r\n                        );\r\n                        currentNav = \"class-\" + index;\r\n                     }\r\n                  } else currentNav = \"index\";\r\n                  break;\r\n               default:\r\n                  currentNav = \"user\";\r\n                  break;\r\n            }\r\n         }\r\n\r\n         updateCurrentNav(currentNav, false);\r\n      }\r\n   }, [userLogged, updateCurrentNav, location.pathname, enrollments]);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setNavbarHeight(ref.current.offsetHeight);\r\n      }, 60);\r\n   }, [setNavbarHeight]);\r\n\r\n   const type = () => {\r\n      switch (userLogged.type) {\r\n         case \"student\":\r\n            return <StudentNavbar />;\r\n         case \"teacher\":\r\n            return <TeacherNavbar />;\r\n         case \"guardian\":\r\n            return <GuardianNavbar />;\r\n         case \"admin\":\r\n         case \"secretary\":\r\n         case \"admin&teacher\":\r\n            return <AdminNavbar />;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <nav className=\"navbar bg-primary\" ref={ref}>\r\n         <Link\r\n            className=\"navbar-home-btn\"\r\n            to={userLogged ? \"/index/dashboard/0\" : \"/\"}\r\n            onClick={() => {\r\n               updateCurrentNav(\"index\", false);\r\n               if (userLogged && userLogged.type === \"student\") clearProfile();\r\n               window.scroll(0, 0);\r\n            }}\r\n         >\r\n            <div className=\"navbar-logo\">\r\n               <img src={onlyLogo} alt=\"Logo English Centre\" />\r\n            </div>\r\n            <p className=\"navbar-heading hide-sm\">\r\n               Villa de Merlo English Centre\r\n            </p>\r\n         </Link>\r\n         {userLogged !== null && (\r\n            <h3 className=\"navbar-name\">Welcome {userLogged.name}</h3>\r\n         )}\r\n         <div\r\n            className={!menuToggle ? \"menu-btn\" : \"menu-btn close\"}\r\n            onClick={toggleMenu}\r\n         >\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n            <div className=\"btn-line\"></div>\r\n         </div>\r\n\r\n         <div className={!menuToggle ? \"menu\" : \"menu show\"}>\r\n            <div\r\n               className={!menuToggle ? \"menu-branding\" : \"menu-branding show\"}\r\n            >\r\n               <div className=\"logo\">\r\n                  <img src={logo} alt=\"English Centre logo\" />\r\n               </div>\r\n               <div className=\"address\">\r\n                  <h3 className=\"heading-tertiary\">\r\n                     Villa de Merlo English Centre\r\n                  </h3>\r\n                  <p className=\"paragraph\">\r\n                     Villa De Merlo - San Luis <br /> Argentina\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            {isAuthenticated ? (\r\n               loading ? (\r\n                  <ul className={`menu-nav${menuToggle ? \" show\" : \"\"}`}>\r\n                     <li\r\n                        className={\r\n                           !menuToggle ? \"nav-item\" : \"nav-item show current\"\r\n                        }\r\n                     >\r\n                        <p className=\"heading-tertiary\">\r\n                           <BsClock />\r\n                           <span className=\"hide-md\">&nbsp;Cargando...</span>\r\n                        </p>\r\n                     </li>\r\n                  </ul>\r\n               ) : (\r\n                  <ul\r\n                     className={`${isAdmin ? \"admin \" : \"\"}menu-nav${\r\n                        menuToggle ? \" show\" : \"\"\r\n                     }`}\r\n                  >\r\n                     {userLogged.type !== \"student\" && (\r\n                        <li\r\n                           className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                              menuToggle ? \" show\" : \"\"\r\n                           }${currentNav === \"index\" ? \" current\" : \"\"}`}\r\n                        >\r\n                           <Link\r\n                              className=\"nav-link\"\r\n                              to=\"/index/dashboard/0\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 if (\r\n                                    userLogged &&\r\n                                    userLogged.type === \"student\"\r\n                                 )\r\n                                    clearProfile();\r\n                                 updateCurrentNav(\"index\", true);\r\n                              }}\r\n                           >\r\n                              <GoHome />\r\n                              <span className=\"hide-md\">\r\n                                 &nbsp; Página Principal\r\n                              </span>\r\n                           </Link>\r\n                        </li>\r\n                     )}\r\n\r\n                     {type()}\r\n                     <li\r\n                        className={`nav-item${isAdmin ? \" smaller\" : \"\"}${\r\n                           menuToggle ? \" show\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <Link\r\n                           className=\"nav-link\"\r\n                           to=\"/login\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              updateCurrentNav(\"login\", true);\r\n                              logOut();\r\n                           }}\r\n                        >\r\n                           <RiLogoutCircleRLine />\r\n                           <span className=\"hide-md\">&nbsp;Cerrar Sesión</span>\r\n                        </Link>\r\n                     </li>\r\n                  </ul>\r\n               )\r\n            ) : (\r\n               <GuestNavbar />\r\n            )}\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   global: state.global,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setNavbarHeight,\r\n   logOut,\r\n   updateCurrentNav,\r\n   clearProfile,\r\n   toggleMenu,\r\n})(withRouter(Navbar));\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setFooterHeight } from \"../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Footer = ({ setFooterHeight }) => {\r\n   const ref = useRef();\r\n\r\n   useEffect(() => {\r\n      setFooterHeight(ref.current.offsetHeight);\r\n   }, [setFooterHeight]);\r\n\r\n   return (\r\n      <footer className=\"footer bg-primary\" ref={ref}>\r\n         <p>\r\n            <span className=\"hide-sm\">Villa de Merlo</span> English Centre\r\n            Copyright &copy;{getYear(new Date())}\r\n         </p>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default connect(null, { setFooterHeight })(Footer);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoutes = ({\r\n   component: Component,\r\n   auth: { isAuthenticated },\r\n   path,\r\n}) => {\r\n   if (isAuthenticated) {\r\n      return <Redirect to={\"/index/dashboard/0\"} />;\r\n   } else return <Route exact path={path} component={Component} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoutes);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Alert = ({ alerts, type }) =>\r\n   alerts !== null &&\r\n   alerts.map((alert) => (\r\n      <React.Fragment key={alert.id}>\r\n         {alert.type === type && (\r\n            <div className={`alert alert-${alert.alertType}`}>{alert.msg}</div>\r\n         )}\r\n      </React.Fragment>\r\n   ));\r\n\r\nconst mapStateToProps = (state) => ({\r\n   alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RiLoginCircleLine } from \"react-icons/ri\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\n\r\nimport { loginUser } from \"../../../../actions/auth\";\r\n\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Login = ({ loginUser }) => {\r\n   const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n   });\r\n\r\n   const { email, password } = formData;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      loginUser(formData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"inner-container login\">\r\n         <Loading />\r\n         <h3 className=\"heading-secondary text-primary\">Iniciar Sesión</h3>\r\n         <p className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUserAlt /> Inicie sesión en su cuenta\r\n         </p>\r\n         <form onSubmit={onSubmit} className=\"form\">\r\n            <Alert type=\"0\" />\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  placeholder=\"Dirección de correo electrónico\"\r\n               />\r\n               <label htmlFor=\"email\" className=\"form-label\">\r\n                  Dirección de correo electrónico\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  onChange={onChange}\r\n                  placeholder=\"Contraseña\"\r\n               />\r\n               <label htmlFor=\"name\" className=\"form-label\">\r\n                  Contraseña\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <RiLoginCircleLine />\r\n                  &nbsp;Iniciar Sesión\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default connect(null, {\r\n   loginUser,\r\n})(Login);\r\n","import api from \"../utils/api\";\r\n\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   NEIGHBOURHOODS_LOADED,\r\n   NEIGHBOURHOODS_UPDATED,\r\n   NEIGHBOURHOOD_DELETED,\r\n   NEIGHBOURHOODS_CLEARED,\r\n   NEIGHBOURHOODS_ERROR,\r\n   NEIGHBOURHOOD_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadNeighbourhoods = (town_id, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(\r\n         `/neighbourhood${town_id ? `/town/${town_id}` : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOODS_ERROR, err.response));\r\n         if (!town_id) window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateNeighbourhoods = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/neighbourhood\", formData);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOODS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrios Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scroll(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteNeighbourhood = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/neighbourhood/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: NEIGHBOURHOOD_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Barrio Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(NEIGHBOURHOOD_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearNeighbourhoods = () => (dispatch) => {\r\n   dispatch({\r\n      type: NEIGHBOURHOODS_CLEARED,\r\n   });\r\n};\r\n","import api from \"../utils/api\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearNeighbourhoods } from \"./neighbourhood\";\r\n\r\nimport {\r\n   TOWNS_LOADED,\r\n   TOWNS_UPDATED,\r\n   TOWN_DELETED,\r\n   TOWNS_CLEARED,\r\n   TOWNS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadTowns = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/town\");\r\n      dispatch({\r\n         type: TOWNS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         window.scrollTo(0, 0);\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateTowns = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/town\", formData);\r\n\r\n      dispatch({\r\n         type: TOWNS_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch(setAlert(\"Localidades Modificadas\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteTown = (town_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/town/${town_id}`);\r\n\r\n      dispatch(clearNeighbourhoods());\r\n\r\n      dispatch({\r\n         type: TOWN_DELETED,\r\n         payload: town_id,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(\"Localidad y Barrios Relacionados Eliminados\", \"success\", \"2\")\r\n      );\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TOWNS_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearTowns = () => (dispatch) => {\r\n   dispatch({\r\n      type: TOWNS_CLEARED,\r\n   });\r\n};\r\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst NewDate = ({ onChange, fromDate, toDate, date, bimestre }) => {\n   const year = new Date().getFullYear();\n   return (\n      <div className=\"new-date\">\n         {bimestre ? (\n            <>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"fromDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     min={`${year}-03-01`}\n                     max={`${year}-12-01`}\n                     onChange={onChange}\n                     value={fromDate}\n                  />\n                  <label htmlFor=\"fromDate\" className=\"form-label show\">\n                     Comienzo del bimestre\n                  </label>\n               </div>\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"toDate\"\n                     type=\"date\"\n                     name=\"both\"\n                     disabled={fromDate === \"\"}\n                     min={fromDate !== \"\" ? fromDate : null}\n                     max={`${year}-12-15`}\n                     onChange={onChange}\n                     value={toDate}\n                  />\n                  <label htmlFor=\"toDate\" className=\"form-label show\">\n                     Fin del bimestre\n                  </label>\n               </div>\n            </>\n         ) : (\n            <div className=\"form-group\">\n               <input\n                  className=\"form-input center\"\n                  id=\"date\"\n                  type=\"date\"\n                  name=\"one\"\n                  min={`${year}-03-01`}\n                  max={`${year}-12-15`}\n                  onChange={onChange}\n                  value={date}\n               />\n               <label htmlFor=\"date\" className=\"form-label show\">\n                  Nuevo día\n               </label>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewDate;\n","import React from \"react\";\nimport format from \"date-fns/format\";\n\nimport \"./style.scss\";\n\nconst PenaltyPercentage = ({ onChange, penalty, percentage }) => {\n   return (\n      <>\n         {penalty && (\n            <p className=\"posted-date\">\n               Última Actualización:{\" \"}\n               {format(new Date(penalty.date), \"dd/MM/yy\")}\n            </p>\n         )}\n\n         <h3>Actualización de Recargo</h3>\n\n         <div className=\"pt-2\">\n            <h4> Recargo Actual: {penalty && penalty.number}%</h4>\n\n            {!penalty && (\n               <h5 className=\"paragraph text-danger text-center\">\n                  No hay ningún recargo registrado\n               </h5>\n            )}\n         </div>\n\n         <h4>\n            <input\n               id=\"percentage\"\n               type=\"text\"\n               name=\"percentage\"\n               placeholder=\"Nuevo Recargo\"\n               value={percentage}\n               onChange={onChange}\n            />\n            %\n         </h4>\n      </>\n   );\n};\n\nexport default PenaltyPercentage;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Certificate = ({ onChange, date, students, period }) => {\n   return (\n      <div className=\"popup-certificate\">\n         <div className=\"form\">\n            <h4>Certificados a generar</h4>\n            {!period && (\n               <div className=\"form-group\">\n                  <input\n                     className=\"form-input\"\n                     id=\"date\"\n                     type=\"date\"\n                     name=\"date\"\n                     value={date}\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"category\" className=\"form-label\">\n                     Fecha para los certificados\n                  </label>\n               </div>\n            )}\n\n            <h5>Alumnos</h5>\n            <div className=\"wrapper both\">\n               {students.map((student, i) => (\n                  <div className=\"student\" key={i}>\n                     <p className=\"name\">{student.name}</p>\n                     <input\n                        className=\"form-checkbox\"\n                        type=\"checkbox\"\n                        checked={student.checked}\n                        onChange={(e) => onChange(e, i)}\n                        name=\"student\"\n                        id={`cb${period}-${i}`}\n                     />\n                     <label\n                        className=\"checkbox-lbl\"\n                        id=\"check\"\n                        htmlFor={`cb${period}-${i}`}\n                     >\n                        {student.checked ? \"Si\" : \"No\"}\n                     </label>\n                  </div>\n               ))}\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Certificate;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst NewGradeType = ({\n   gradetype,\n   gradetypes,\n   onChange,\n   clearGradeTypes,\n   isAdmin,\n   togglePopup,\n}) => {\n   return (\n      <div className=\" new-grade\">\n         <div className=\"new-grade-form\">\n            <select\n               className=\"form-input center\"\n               id=\"gradetype\"\n               value={gradetype}\n               onChange={onChange}\n            >\n               <option value=\"\">*Seleccione un tipo de nota</option>\n               {gradetypes.map((gradetype) => (\n                  <option key={gradetype._id} value={gradetype._id}>\n                     {gradetype.name}\n                  </option>\n               ))}\n            </select>\n            <label\n               htmlFor=\"new-category\"\n               className={`form-label ${gradetype === \"\" ? \"lbl\" : \"\"}`}\n            >\n               Tipo de nota\n            </label>\n         </div>\n         {isAdmin && (\n            <div className=\"tooltip\">\n               <Link\n                  to=\"/class/gradetypes/edit\"\n                  onClick={() => {\n                     window.scroll(0, 0);\n                     clearGradeTypes();\n                     togglePopup(\"default\");\n                  }}\n                  className=\"btn btn-mix-secondary\"\n               >\n                  <FaEdit />\n               </Link>\n               <span className=\"tooltiptext\">Editar tipo de nota</span>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default NewGradeType;\n","import React, { useState } from \"react\";\nimport { FaCloudUploadAlt, FaCloudDownloadAlt, FaTimes } from \"react-icons/fa\";\n\nimport \"./style.scss\";\n\nconst RestoreDB = ({ onChange, setAlert, createBackup }) => {\n   const [adminValues, setAdminValues] = useState({\n      fileIn: false,\n      selectedFile: \"\",\n   });\n\n   const { fileIn, selectedFile } = adminValues;\n\n   const fileSelected = (e) => {\n      e.persist();\n      if (e.target.value) {\n         const file = e.target.files[0];\n         handleFiles(file);\n         e.target.value = \"\";\n      }\n   };\n\n   const handleFiles = (file) => {\n      if (validateFile(file)) {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: true,\n            selectedFile: file,\n         }));\n         let data = new FormData();\n         data.append(\"file\", file);\n         onChange(data);\n      } else {\n         setAdminValues((prev) => ({\n            ...prev,\n            fileIn: false,\n            selectedFile: \"\",\n         }));\n         onChange(\"\");\n         setAlert(\"Tipo de archivo no admitido\", \"danger\", \"4\");\n      }\n   };\n\n   const validateFile = (file) => {\n      const validTypes = [\"application/x-gzip\"];\n      return validTypes.indexOf(file.type) !== -1;\n   };\n\n   return (\n      <div className=\"popup-restore\">\n         <h3 className=\"heading-tertiary text-left m-0\">\n            Restaurar Base de Datos\n         </h3>\n         <h5 className=\"paragraph text-dark\">\n            Seleccione el backup que desea restaurar o descargue el actual\n         </h5>\n         <div className=\"form\">\n            <p className=\"text-lighter-primary restore-file\">\n               {selectedFile !== \"\" && (\n                  <>\n                     {selectedFile.name}\n                     <button\n                        type=\"button\"\n                        onClick={() =>\n                           setAdminValues((prev) => ({\n                              ...prev,\n                              selectedFile: \"\",\n                              fileIn: false,\n                           }))\n                        }\n                        className=\"btn-cancel\"\n                     >\n                        <FaTimes />\n                     </button>\n                  </>\n               )}\n            </p>\n            <div className=\"upl-img\">\n               <div className={`fileUpload ${fileIn ? \"success\" : \"\"}`}>\n                  <input\n                     id=\"fileInput\"\n                     type=\"file\"\n                     name=\"image\"\n                     onChange={fileSelected}\n                     className=\"upload\"\n                  />\n                  <span>\n                     <FaCloudUploadAlt />\n                     &nbsp;Subir\n                  </span>\n               </div>\n               <button\n                  type=\"button\"\n                  onClick={() => createBackup(true)}\n                  className=\"btn btn-secondary restore-btn\"\n               >\n                  <FaCloudDownloadAlt />\n                  &nbsp;Descargar\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default RestoreDB;\n","import React from \"react\";\nimport format from \"date-fns/format\";\nimport { Link } from \"react-router-dom\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport { formatNumber } from \"../../../../actions/global\";\n\nconst InvoiceList = ({ invoices, clearInvoice, togglePopup }) => {\n   return (\n      <div className=\"popup-invoices\">\n         <h3 className=\"heading-tertiary text-left p-1 my-1\">\n            Listado de Facturas Pagas\n         </h3>\n         <div className=\"wrapper both\">\n            <table>\n               <tbody>\n                  {invoices.length > 0 ? (\n                     invoices.map((invoice, i) => (\n                        <React.Fragment key={i}>\n                           {\n                              <tr>\n                                 <td>\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\n                                 </td>\n                                 <td>${formatNumber(invoice.total)}</td>\n                                 <td>\n                                    <Link\n                                       to={`/invoice/single/${invoice._id}`}\n                                       onClick={() => {\n                                          window.scroll(0, 0);\n                                          clearInvoice();\n                                          togglePopup(\"default\");\n                                       }}\n                                       className=\"btn-text\"\n                                    >\n                                       <FaSearch />\n                                    </Link>\n                                 </td>\n                              </tr>\n                           }\n                        </React.Fragment>\n                     ))\n                  ) : (\n                     <p className=\"heading-tertiary text-center\">\n                        No hay facturas registradas\n                     </p>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </div>\n   );\n};\n\nexport default InvoiceList;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Salaries = ({ onChange, salaries }) => {\n   return (\n      <>\n         <h4 className=\"heading-tertiary text-left text-dark p-2\">\n            Actualización de Salarios\n         </h4>\n         <div className=\"form\">\n            <table className=\"salaries\">\n               <tbody>\n                  <tr>\n                     <td>Cursos Bajos:</td>\n                     <td>\n                        <input\n                           id=\"lowerSalary\"\n                           type=\"text\"\n                           name=\"lowerSalary\"\n                           placeholder=\"Cursos Bajos\"\n                           value={salaries.lowerSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Cursos Altos:</td>\n                     <td>\n                        <input\n                           id=\"higherSalary\"\n                           type=\"text\"\n                           name=\"higherSalary\"\n                           placeholder=\"Cursos Altos\"\n                           value={salaries.higherSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n                  <tr>\n                     <td>Administrativo:</td>\n                     <td>\n                        <input\n                           id=\"adminSalary\"\n                           type=\"text\"\n                           name=\"adminSalary\"\n                           placeholder=\"Administrativo\"\n                           value={salaries.adminSalary}\n                           onChange={onChange}\n                        />\n                     </td>\n                  </tr>\n               </tbody>\n            </table>\n         </div>\n      </>\n   );\n};\n\nexport default Salaries;\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport { togglePopup, createBackup } from \"../../../actions/global\";\r\nimport { clearInvoice } from \"../../../actions/invoice\";\r\nimport { setAlert } from \"../../../actions/alert\";\r\n\r\nimport NewDate from \"./NewDate\";\r\nimport PenaltyPercentage from \"./PenaltyPercentage\";\r\nimport Certificate from \"./Certificate\";\r\nimport NewGradeType from \"./NewGradeType\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\nimport RestoreDB from \"./RestoreDB\";\r\nimport InvoiceList from \"./InvoiceList\";\r\n\r\nimport logo from \"../../../img/logoSinLetras.png\";\r\nimport \"./style.scss\";\r\nimport Salaries from \"./Salaries\";\r\n\r\nconst PopUp = ({\r\n   global: { popupType, popupToggle },\r\n   togglePopup,\r\n   createBackup,\r\n   clearInvoice,\r\n   setAlert,\r\n   confirm,\r\n   info,\r\n   error,\r\n}) => {\r\n   const [newDate, setNewDate] = useState({\r\n      fromDate: \"\",\r\n      toDate: \"\",\r\n      date: \"\",\r\n   });\r\n\r\n   const [newGradeType, setNewGradeType] = useState(\"\");\r\n\r\n   const [certificate, setCertificate] = useState({\r\n      date: \"\",\r\n      students: [],\r\n   });\r\n\r\n   const [salaries, setSalaries] = useState({\r\n      lowerSalary: \"\",\r\n      higherSalary: \"\",\r\n      adminSalary: \"\",\r\n   });\r\n\r\n   const [penaltyPercentage, setPenaltyPercentage] = useState(\"\");\r\n\r\n   const [backup, setBackup] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (info) {\r\n         if (info.students)\r\n            setCertificate((prev) => ({\r\n               ...prev,\r\n               students: info.students.map((item) => {\r\n                  return {\r\n                     ...item,\r\n                     name: item.lastname + \", \" + item.name,\r\n                     checked: false,\r\n                  };\r\n               }),\r\n            }));\r\n         if (info.salaries) {\r\n            setSalaries((prev) => {\r\n               for (const x in info.salaries) prev[x] = info.salaries[x];\r\n               return prev;\r\n            });\r\n         }\r\n      }\r\n   }, [info]);\r\n\r\n   const onChangeCertificate = (e, i) => {\r\n      e.persist();\r\n      if (e.target.name === \"date\")\r\n         setCertificate((prev) => ({ ...prev, date: e.target.value }));\r\n      else {\r\n         let newStudents = [...certificate.students];\r\n         newStudents[i].checked = e.target.checked;\r\n\r\n         setCertificate((prev) => ({\r\n            ...prev,\r\n            students: newStudents,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const onChangeNewDate = (e) => {\r\n      e.persist();\r\n      setNewDate((prev) => ({\r\n         ...prev,\r\n         [e.target.id]: e.target.value,\r\n         ...(e.target.name === \"both\"\r\n            ? { date: \"\" }\r\n            : { fromDate: \"\", toDate: \"\" }),\r\n      }));\r\n   };\r\n\r\n   const onChangeGradeType = (e) => {\r\n      e.persist();\r\n      setNewGradeType(e.target.value);\r\n   };\r\n\r\n   const onChangePenaltyPercentage = (e) => {\r\n      e.persist();\r\n      if (!isNaN(e.target.value)) setPenaltyPercentage(e.target.value);\r\n   };\r\n\r\n   const onChangeBackup = (file) => {\r\n      setBackup(file);\r\n   };\r\n\r\n   const onChangeSalary = (e) => {\r\n      e.persist();\r\n      if (!isNaN(e.target.value))\r\n         setSalaries((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n   };\r\n\r\n   const chooseType = () => {\r\n      switch (popupType) {\r\n         case \"penalty\":\r\n            return (\r\n               <div className=\"popup-penalty\">\r\n                  {\r\n                     <PenaltyPercentage\r\n                        onChange={onChangePenaltyPercentage}\r\n                        penalty={info.penalty}\r\n                        percentage={penaltyPercentage}\r\n                     />\r\n                  }\r\n               </div>\r\n            );\r\n         case \"certificate\":\r\n            return typeof info === \"object\" ? (\r\n               <Certificate\r\n                  date={certificate.date}\r\n                  students={certificate.students}\r\n                  period={info.period}\r\n                  onChange={onChangeCertificate}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"active\":\r\n            return (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info.question}</h3>\r\n                  <p>{info.info}</p>\r\n               </div>\r\n            );\r\n         case \"new-date\":\r\n            return (\r\n               <NewDate\r\n                  fromDate={newDate.fromDate}\r\n                  toDate={newDate.toDate}\r\n                  date={newDate.date}\r\n                  onChange={onChangeNewDate}\r\n                  bimestre={info}\r\n               />\r\n            );\r\n         case \"new-grade\":\r\n            return typeof info === \"object\" ? (\r\n               <NewGradeType\r\n                  onChange={onChangeGradeType}\r\n                  gradetype={newGradeType}\r\n                  gradetypes={info.gradetypes}\r\n                  clearGradeTypes={info.clearGradeTypes}\r\n                  isAdmin={info.isAdmin}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            ) : (\r\n               <></>\r\n            );\r\n         case \"backup\":\r\n            return (\r\n               <RestoreDB\r\n                  onChange={onChangeBackup}\r\n                  createBackup={createBackup}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         case \"invoices\":\r\n            return (\r\n               <InvoiceList\r\n                  invoices={info}\r\n                  clearInvoice={clearInvoice}\r\n                  togglePopup={togglePopup}\r\n               />\r\n            );\r\n         case \"salary\":\r\n            return <Salaries onChange={onChangeSalary} salaries={salaries} />;\r\n         case \"default\":\r\n            return typeof info === \"string\" ? (\r\n               <div className=\"popup-text\">\r\n                  <h3>{info}</h3>\r\n               </div>\r\n            ) : (\r\n               <></>\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className={`popup ${!popupToggle ? \"hide\" : \"\"}`}>\r\n         <div className=\"popup-content text-center\">\r\n            <div className=\"popup-img\">\r\n               <img src={logo} alt=\"logo\" />\r\n               <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n                  className=\"btn-cancel\"\r\n               >\r\n                  <FaTimes />\r\n               </button>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n               <Alert type=\"4\" />\r\n               {chooseType(popupType)}\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               {popupType !== \"invoices\" && (\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-success\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        switch (popupType) {\r\n                           case \"penalty\":\r\n                              confirm(penaltyPercentage);\r\n                              setPenaltyPercentage(\"\");\r\n                              break;\r\n                           case \"certificate\":\r\n                              confirm(certificate);\r\n                              setCertificate({ date: \"\", students: [] });\r\n                              break;\r\n                           case \"new-date\":\r\n                              confirm(newDate);\r\n                              setNewDate({\r\n                                 fromDate: \"\",\r\n                                 toDate: \"\",\r\n                                 date: \"\",\r\n                              });\r\n                              break;\r\n                           case \"new-grade\":\r\n                              confirm(newGradeType);\r\n                              setNewGradeType(\"\");\r\n                              break;\r\n                           case \"backup\":\r\n                              confirm(backup);\r\n                              setBackup(\"\");\r\n                              break;\r\n                           case \"salary\":\r\n                              confirm(salaries);\r\n                              setSalaries({\r\n                                 lowerSalary: \"\",\r\n                                 higherSalary: \"\",\r\n                                 adminSalary: \"\",\r\n                              });\r\n                              break;\r\n                           default:\r\n                              confirm();\r\n                              break;\r\n                        }\r\n                        if (!error) togglePopup(\"default\");\r\n                     }}\r\n                  >\r\n                     Aceptar\r\n                  </button>\r\n               )}\r\n\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     togglePopup(\"default\");\r\n                  }}\r\n               >\r\n                  Cancelar\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   togglePopup,\r\n   setAlert,\r\n   createBackup,\r\n   clearInvoice,\r\n})(PopUp);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RelativeDashboard = ({\r\n   user,\r\n   users: { usersBK },\r\n   auth: { userLogged },\r\n   clearProfile,\r\n}) => {\r\n   const student = user && user.type === \"student\";\r\n\r\n   const relatives = (user) => {\r\n      return (\r\n         <>\r\n            <p>\r\n               {user.lastname}, {user.name}\r\n            </p>\r\n            <Link\r\n               className=\"btn-text\"\r\n               to={`/index/dashboard/${user._id}`}\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearProfile(userLogged.type !== \"student\");\r\n               }}\r\n            >\r\n               Ver Info\r\n            </Link>\r\n         </>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <div className=\" p-3 bg-lightest-secondary\">\r\n         <h3 className=\"heading-tertiary text-primary text-center\">\r\n            {student ? \"Tutores\" : \"Alumnos a Cargo\"}\r\n         </h3>\r\n         {usersBK.length !== 0 || user.children.length !== 0 ? (\r\n            <div className=\"relatives\">\r\n               {!student\r\n                  ? user.children.map((child, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(child)}\r\n                       </div>\r\n                    ))\r\n                  : usersBK.map((parent, index) => (\r\n                       <div key={index} className=\"relative\">\r\n                          {relatives(parent)}\r\n                       </div>\r\n                    ))}\r\n            </div>\r\n         ) : (\r\n            <p className=\"heading-tertiary text-center py-2\">\r\n               No hay {student ? \"tutores\" : \"alumnos\"} resgistrados\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearProfile,\r\n})(RelativeDashboard);\r\n","import React from \"react\";\r\n\r\nconst StudentGradesTable = ({\r\n   studentGrades: { headers, rows, finalGrades },\r\n   category,\r\n}) => {\r\n   const kinderGraden = (value) => {\r\n      switch (true) {\r\n         case value === \"\":\r\n            return <></>;\r\n         case value < 4:\r\n            return <>M</>;\r\n         case value >= 4 && value < 6:\r\n            return <>R</>;\r\n         case value >= 6 && value < 7.5:\r\n            return <>B</>;\r\n         case value >= 7.5 && value < 9:\r\n            return <>MB</>;\r\n         case value >= 9 && value <= 10:\r\n            return <>S</>;\r\n         default:\r\n            return \"\";\r\n      }\r\n   };\r\n\r\n   const getGrade = (grade, percentage) => {\r\n      if (category === \"Kinder\") return kinderGraden(grade);\r\n      if (percentage) return grade * 10 + \"%\";\r\n      if (grade % 1 !== 0)\r\n         return Math.round((grade + Number.EPSILON) * 100) / 100;\r\n      else return grade;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  <th className=\"inherit\">&nbsp;</th>\r\n                  <th>\r\n                     1° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     2° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     3° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n                  <th>\r\n                     4° B<span className=\"hide-sm\">imestre</span>\r\n                  </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map((row, index) => {\r\n                  return (\r\n                     <tr key={index}>\r\n                        <th>{headers[index]}</th>\r\n                        {row.map((item, i) => (\r\n                           <td key={i}>\r\n                              {item.value\r\n                                 ? getGrade(\r\n                                      item.value,\r\n                                      item.gradetype.percentage\r\n                                   )\r\n                                 : \"\"}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n\r\n         {finalGrades && (\r\n            <>\r\n               <h3 className=\"text-primary text-center mt-3 pb-1\">\r\n                  Exámenes Finales\r\n               </h3>\r\n               <table\r\n                  className={`final-grades ${\r\n                     finalGrades.length === 2 ? \"small\" : \"\"\r\n                  }`}\r\n               >\r\n                  <tbody>\r\n                     {finalGrades.map((rows, index) => (\r\n                        <tr key={index + \"rows\"}>\r\n                           {rows.map((item, i) => (\r\n                              <React.Fragment key={i + \"finals\"}>\r\n                                 {index % 2 === 0 ? (\r\n                                    <th>{item}</th>\r\n                                 ) : (\r\n                                    <td>\r\n                                       {getGrade(item.value, item.percentage)}\r\n                                    </td>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           ))}\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentGradesTable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEdit, FaPlus, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst InstallmentsTable = ({\r\n   forAdmin,\r\n   installments,\r\n   addDetail,\r\n   deleteInstallment,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   loadInstallment,\r\n   togglePopup,\r\n   dash,\r\n}) => {\r\n   const installment = [\r\n      \"Inscripción\",\r\n      \"Clase Particular\",\r\n      \"\",\r\n      \"Marzo\",\r\n      \"Abril\",\r\n      \"Mayo\",\r\n      \"Junio\",\r\n      \"Julio\",\r\n      \"Agosto\",\r\n      \"Septiembre\",\r\n      \"Octubre\",\r\n      \"Noviembre\",\r\n      \"Diciembre\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { toDelete } = adminValues;\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         {!addDetail && !dash && (\r\n            <PopUp\r\n               confirm={() => deleteInstallment(toDelete)}\r\n               info=\"¿Está seguro que desea eliminar la cuota?\"\r\n            />\r\n         )}\r\n\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               {forAdmin && (\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Cuota</th>\r\n                        <th>Año</th>\r\n                        <th>Categoría</th>\r\n                        <th>Importe</th>\r\n                        <th className=\"fit\">&nbsp;</th>\r\n                        {!addDetail && <th className=\"fit\">&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n               )}\r\n\r\n               <tbody>\r\n                  {installments.map((item, i) => (\r\n                     <React.Fragment key={i}>\r\n                        {\r\n                           <tr>\r\n                              <td>{installment[item.number]}</td>\r\n                              <td>{item.year}</td>\r\n                              <td>\r\n                                 {item.enrollment\r\n                                    ? item.enrollment.category.name\r\n                                    : \"\"}\r\n                              </td>\r\n                              <td\r\n                                 className={`${item.value === 0 ? \"paid\" : \"\"}${\r\n                                    item.value !== 0 &&\r\n                                    item.status === \"expired\" &&\r\n                                    item.number !== 1\r\n                                       ? \"debt\"\r\n                                       : \"\"\r\n                                 }`}\r\n                              >\r\n                                 {item.value === 0\r\n                                    ? \"Pagado\"\r\n                                    : \"$\" + formatNumber(item.value)}\r\n                              </td>\r\n                              {forAdmin && (\r\n                                 <>\r\n                                    <td>\r\n                                       {addDetail ? (\r\n                                          <button\r\n                                             type=\"button\"\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => addDetail(item)}\r\n                                          >\r\n                                             <FaPlus />\r\n                                          </button>\r\n                                       ) : (\r\n                                          <Link\r\n                                             to={`/index/installment/edit/${item._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearCategories();\r\n                                                clearEnrollments();\r\n                                                loadInstallment(item._id, true);\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       )}\r\n                                    </td>\r\n                                    {!addDetail && (\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: item._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    )}\r\n                                 </>\r\n                              )}\r\n                           </tr>\r\n                        }\r\n                     </React.Fragment>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default InstallmentsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\n\r\nimport { loadGrades } from \"../../../../../../actions/grade\";\r\nimport { loadAttendances } from \"../../../../../../actions/attendance\";\r\nimport { loadInstallments } from \"../../../../../../actions/installment\";\r\nimport { loadObservations } from \"../../../../../../actions/observation\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { clearProfile, loadRelatives } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\n\r\nimport RelativeDashboard from \"../RelativeDashboard\";\r\nimport StudentGradesTable from \"../../../sharedComp/tables/StudentGradesTable\";\r\nimport InstallmentsTable from \"../../../sharedComp/tables/InstallmentsTable\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst StudentDashboard = ({\r\n   match,\r\n   user,\r\n   auth: { userLogged },\r\n   classes: { classInfo, loadingClass },\r\n   users: { loadingBK },\r\n   attendances: { attendances, loading },\r\n   installments: { installments, loading: loadingInstallments },\r\n   grades: { grades, loading: loadingGrades },\r\n   observations: { observations, loading: loadingObservations },\r\n   enrollments: { enrollments, loading: loadingEnrollments },\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const class_id = match.params.class_id;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"admin\";\r\n\r\n   const allowedUsers =\r\n      isAdmin ||\r\n      (userLogged.type === \"student\" && user._id === userLogged._id) ||\r\n      (userLogged.type === \"guardian\" &&\r\n         userLogged.children.some((child) => child._id === user._id));\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadRelatives(user._id);\r\n   }, [loadingBK, loadRelatives, user]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingClass)\r\n         loadClass(!class_id ? user._id : class_id, class_id, !class_id);\r\n   }, [allowedUsers, loadingClass, loadClass, user, class_id]);\r\n\r\n   useEffect(() => {\r\n      if (allowedUsers && loadingInstallments)\r\n         loadInstallments(\r\n            { student: { _id: user._id } },\r\n            false,\r\n            true,\r\n            \"student\"\r\n         );\r\n   }, [allowedUsers, loadingInstallments, loadInstallments, user]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingGrades)\r\n         loadGrades(classInfo._id, user._id);\r\n   }, [loadingClass, loadingGrades, loadGrades, user, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (loadingEnrollments && allowedUsers)\r\n         loadEnrollments({ classroom: false, student: user._id }, false);\r\n   }, [loadEnrollments, user, loadingEnrollments, userLogged, allowedUsers]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loadingObservations)\r\n         loadObservations(classInfo._id, user._id, false);\r\n   }, [user, loadObservations, loadingObservations, loadingClass, classInfo]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && classInfo && loading)\r\n         loadAttendances(classInfo._id, user._id);\r\n   }, [loadingClass, loading, loadAttendances, user, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         {!loadingBK && <RelativeDashboard user={user} />}\r\n         {!loadingEnrollments && allowedUsers && enrollments.length > 0 && (\r\n            <div className=\"bg-white p-3\">\r\n               <h3 className=\"heading-tertiary text-primary text-center\">\r\n                  Cursos\r\n               </h3>\r\n               <div className=\"student-classes\">\r\n                  {enrollments.map((item) => (\r\n                     <div key={item._id} className=\"class-item\">\r\n                        <p>{item.category.name}</p>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}/${item.classroom}`}\r\n                           onClick={() => clearProfile(true)}\r\n                        >\r\n                           Ver Info\r\n                        </Link>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         )}\r\n         {!loadingClass && !(!classInfo && !user.active) && (\r\n            <>\r\n               <div\r\n                  className={`class row ${\r\n                     classInfo ? \"bg-lighter\" : \"bg-white\"\r\n                  }`}\r\n               >\r\n                  {classInfo ? (\r\n                     <>\r\n                        <div className=\"title \">\r\n                           <p className=\"heading-secondary text-primary\">\r\n                              Clase\r\n                           </p>\r\n                           <p className=\"heading-tertiary text-dark m-1\">\r\n                              Categoría:{\" \"}\r\n                              <small>{classInfo.category.name}</small>\r\n                           </p>\r\n                           <p className=\"text-dark m-1\">\r\n                              Año: <small>{classInfo.year}</small>\r\n                           </p>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classInfo._id}`}\r\n                           >\r\n                              Ver Info\r\n                           </Link>\r\n                        </div>\r\n                        <div className=\"description bg-white\">\r\n                           <div className=\"heading-tertiary\">\r\n                              <p className=\"text-dark\">\r\n                                 Profesor:{\" \"}\r\n                                 <small>\r\n                                    {classInfo.teacher.name}{\" \"}\r\n                                    {classInfo.teacher.lastname}\r\n                                 </small>\r\n                              </p>\r\n                              <Link\r\n                                 className=\"btn-text\"\r\n                                 to={`/index/dashboard/${classInfo.teacher._id}`}\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearProfile();\r\n                                 }}\r\n                              >\r\n                                 Ver Info\r\n                              </Link>\r\n                           </div>\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Aula: </span>\r\n                              {classInfo.classroom}\r\n                           </p>\r\n\r\n                           {classInfo.hourin1 === classInfo.hourin2 &&\r\n                           classInfo.hourout2 === classInfo.hourout1 ? (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Días:</span>{\" \"}\r\n                                    {classInfo.day1} y {classInfo.day2}{\" \"}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">Horario: </span>{\" \"}\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           ) : (\r\n                              <>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day1}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin1.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout1.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                                 <p>\r\n                                    <span className=\"text-dark\">\r\n                                       {classInfo.day2}:{\" \"}\r\n                                    </span>\r\n                                    {format(\r\n                                       new Date(classInfo.hourin2.slice(0, -1)),\r\n                                       \"HH:mm\"\r\n                                    )}{\" \"}\r\n                                    -{\" \"}\r\n                                    {format(\r\n                                       new Date(\r\n                                          classInfo.hourout2.slice(0, -1)\r\n                                       ),\r\n                                       \"HH:mm\"\r\n                                    )}\r\n                                 </p>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </>\r\n                  ) : (\r\n                     <div className=\"no-class\">\r\n                        <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                           Clase\r\n                        </h3>\r\n                        <p className=\"heading-tertiary pt-1 text-center\">\r\n                           El alumno no está registrado en ningua clase\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n               {/* Grades */}\r\n\r\n               {!loadingGrades && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Notas\r\n                     </h3>\r\n                     <div className=\"pb-2\">\r\n                        {grades.length === 0 ? (\r\n                           <p className=\"heading-tertiary text-center\">\r\n                              No hay notas registradas hasta el momento\r\n                           </p>\r\n                        ) : (\r\n                           <StudentGradesTable\r\n                              studentGrades={grades}\r\n                              category={classInfo.category.name}\r\n                           />\r\n                        )}\r\n                     </div>\r\n                  </div>\r\n               )}\r\n\r\n               {/* Attendance */}\r\n               {!loading && (\r\n                  <div className=\"bg-white p-3\">\r\n                     <h3 className=\"heading-tertiary text-primary p-1\">\r\n                        Inasistencias{\" \"}\r\n                        {attendances.length > 0 && (\r\n                           <span className=\"badge\">{attendances.length}</span>\r\n                        )}\r\n                     </h3>\r\n\r\n                     {attendances.length > 0 ? (\r\n                        <div className=\"absence\">\r\n                           {attendances.map((attendance, index) => (\r\n                              <div key={index} className=\"paragraph p-1\">\r\n                                 <FaTimesCircle />{\" \"}\r\n                                 {format(\r\n                                    new Date(attendance.date.slice(0, -1)),\r\n                                    `dd/MM${class_id ? \"/yy\" : \"\"}`\r\n                                 )}\r\n                              </div>\r\n                           ))}\r\n                        </div>\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">\r\n                           No hay inasistencias\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Observaciones */}\r\n               {!loading && (\r\n                  <div className=\"bg-lightest-secondary p-3\">\r\n                     <h3 className=\"heading-tertiary p-1 text-primary\">\r\n                        Observaciones\r\n                     </h3>\r\n                     {observations.length === 0 ? (\r\n                        <p className=\"heading-tertiary text-center \">\r\n                           No hay observaciones registradas\r\n                        </p>\r\n                     ) : (\r\n                        observations.map((item) => (\r\n                           <div className=\"observation\" key={item._id}>\r\n                              <h4>{item.period}° Bimestre</h4>\r\n                              <p>{item.description}</p>\r\n                           </div>\r\n                        ))\r\n                     )}\r\n                  </div>\r\n               )}\r\n\r\n               {/* Installments */}\r\n               <div className=\"bg-white p-3\">\r\n                  <h3 className=\"heading-tertiary m-0 text-primary p-1\">\r\n                     Cuotas Pendientes{\" \"}\r\n                  </h3>\r\n                  <button\r\n                     className=\"btn-text liner\"\r\n                     onClick={() => togglePopup(\"invoices\")}\r\n                  >\r\n                     Facturas Pagas\r\n                  </button>\r\n                  <div className=\"pb-2\">\r\n                     {!loadingInstallments && installments.length > 0 ? (\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={false}\r\n                           dash\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-center\">Al día</p>\r\n                     )}\r\n                  </div>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   attendances: state.attendances,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n   installments: state.installments,\r\n   observations: state.observations,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadAttendances,\r\n   loadInstallments,\r\n   loadClass,\r\n   loadRelatives,\r\n   loadObservations,\r\n   loadEnrollments,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(StudentDashboard));\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport history from \"../utils/history\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport { updateLoadingSpinner, setError } from \"./global\";\r\nimport { clearProfile } from \"./user\";\r\n\r\nimport {\r\n   CATEGORIES_LOADED,\r\n   CATEGORIES_UPDATED,\r\n   CATEGORIES_CLEARED,\r\n   CATEGORIES_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadCategories = (spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   try {\r\n      const res = await api.get(\"/category\");\r\n      dispatch({\r\n         type: CATEGORIES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      }\r\n   }\r\n   if (spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const updateCategories = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.put(\"/category\", formData);\r\n\r\n      dispatch({\r\n         type: CATEGORIES_UPDATED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Precios de Categorías Modificados\", \"success\", \"1\"));\r\n      dispatch(clearProfile());\r\n\r\n      history.push(\"/index/dashboard/0\");\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n\r\n         if (err.response.data.errors)\r\n            err.response.data.errors.forEach((error) => {\r\n               dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n            });\r\n         else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const categoriesPDF = (categories) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.post(\"/pdf/category/list\", categories);\r\n\r\n      const pdf = await api.get(\"/pdf/category/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Categorías ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(CATEGORIES_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearCategories = () => (dispatch) => {\r\n   dispatch({ type: CATEGORIES_CLEARED });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport es from \"date-fns/locale/es\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n   FaUserEdit,\r\n   FaUserCog,\r\n   FaHandHoldingUsd,\r\n   FaRegCalendarAlt,\r\n   FaLayerGroup,\r\n   FaCashRegister,\r\n   FaCalendarDay,\r\n   FaChalkboardTeacher,\r\n   FaGraduationCap,\r\n} from \"react-icons/fa\";\r\nimport { ImSearch } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadRegister,\r\n   clearRegister,\r\n} from \"../../../../../../actions/register\";\r\nimport {\r\n   getInvoiceNumber,\r\n   clearInvoice,\r\n} from \"../../../../../../actions/invoice\";\r\nimport {\r\n   clearInstallments,\r\n   getTotalDebt,\r\n} from \"../../../../../../actions/installment\";\r\nimport {\r\n   getYearEnrollments,\r\n   clearEnrollments,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   clearUsers,\r\n   clearSearch,\r\n   getActiveUsers,\r\n} from \"../../../../../../actions/user\";\r\nimport {\r\n   clearClasses,\r\n   getActiveClasses,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { clearGrades } from \"../../../../../../actions/grade\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n   clearGlobals,\r\n} from \"../../../../../../actions/global\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst AdminDashboard = ({\r\n   auth: { userLogged },\r\n   registers: { register, loadingRegister },\r\n   yearEnrollments,\r\n   totalDebt,\r\n   activeUsers,\r\n   activeClasses,\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   getInvoiceNumber,\r\n   clearInstallments,\r\n   clearRegister,\r\n   clearUsers,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearAttendances,\r\n   clearEnrollments,\r\n   clearGlobals,\r\n   clearGrades,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (yearEnrollments.year === \"\") getYearEnrollments();\r\n   }, [yearEnrollments.year, getYearEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeTeachers === \"\") getActiveUsers(\"teacher\");\r\n   }, [activeUsers.activeTeachers, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (activeUsers.activeStudents === \"\") getActiveUsers(\"student\");\r\n   }, [activeUsers.activeStudents, getActiveUsers]);\r\n\r\n   useEffect(() => {\r\n      if (totalDebt === \"\" && isAdmin) getTotalDebt();\r\n   }, [totalDebt, getTotalDebt, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (activeClasses === \"\") getActiveClasses();\r\n   }, [activeClasses, getActiveClasses]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const capitalize = (string) => {\r\n      return string && string[0].toUpperCase() + string.slice(1);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/invoice/register\"\r\n                        className=\"side-nav-link\"\r\n                        onClick={() => {\r\n                           clearInstallments();\r\n                           getInvoiceNumber();\r\n                           clearSearch();\r\n                           clearInvoice();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaHandHoldingUsd />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Facturación</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/installments/0\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearInstallments();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaRegCalendarAlt />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Cuotas</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/categories\"\r\n                        onClick={() => {\r\n                           clearCategories();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaLayerGroup />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Categorías</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        className=\"side-nav-link\"\r\n                        to=\"/register/info\"\r\n                        onClick={() => {\r\n                           clearRegister();\r\n                           clearUsers();\r\n                           clearGlobals();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaCashRegister />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Caja</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {!loadingRegister && (\r\n               <div className=\"info p-3\">\r\n                  <h3 className=\"heading-tertiary text-dark\">\r\n                     <FaCalendarDay />\r\n                     &nbsp;&nbsp;\r\n                     {capitalize(\r\n                        format(\r\n                           register && register.temporary\r\n                              ? new Date(register.date)\r\n                              : new Date(),\r\n                           \"EEEE, d 'de' LLLL 'de' yyyy\",\r\n                           {\r\n                              locale: es,\r\n                           }\r\n                        )\r\n                     )}\r\n                  </h3>\r\n                  {register && (\r\n                     <div className=\"register-info-money my-5 pt-2 text-center\">\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Ingresos: </span>$\r\n                           {register.income && register.temporary\r\n                              ? formatNumber(register.income)\r\n                              : 0}\r\n                        </p>\r\n                        <p className=\" heading-tertiary\">\r\n                           <span className=\"text-dark\">Egresos: </span>$\r\n                           {register.expence && register.temporary\r\n                              ? formatNumber(register.expence)\r\n                              : 0}\r\n                        </p>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </section>\r\n         <section className=\"section-sidebar\">\r\n            <div className=\"sidebar\">\r\n               <ul className=\"side-nav\">\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/user/search\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <ImSearch />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Búsqueda</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/class/all\"\r\n                        onClick={() => {\r\n                           clearClasses();\r\n                           clearUsers();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaChalkboardTeacher />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Clases</span>\r\n                     </Link>\r\n                  </li>\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/enrollment/register\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearEnrollments();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaUserEdit />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Inscripción</span>\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"side-nav-item\">\r\n                     <Link\r\n                        to=\"/index/mentions-list\"\r\n                        onClick={() => {\r\n                           clearSearch();\r\n                           clearAttendances();\r\n                           clearGrades();\r\n                           window.scroll(0, 0);\r\n                        }}\r\n                        className=\"side-nav-link\"\r\n                     >\r\n                        <span className=\"side-nav-icon\">\r\n                           <FaGraduationCap />\r\n                        </span>\r\n                        <span className=\"hide-sm\">Menciones</span>\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            <div className=\"info p-3\">\r\n               <h3 className=\"heading-tertiary text-dark\">\r\n                  <FaUserCog />\r\n                  &nbsp; Administración de Usuarios\r\n               </h3>\r\n               <div className=\"text-center mt-4\">\r\n                  {totalDebt !== \"\" && isAdmin && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Deuda: </span>$\r\n                        {formatNumber(totalDebt)}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeStudents !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Alumnos Activos: </span>\r\n                        {activeUsers.activeStudents}\r\n                     </p>\r\n                  )}\r\n                  {yearEnrollments.year !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">\r\n                           Inscripciones{\" \"}\r\n                           {yearEnrollments.year !== 0\r\n                              ? yearEnrollments.year\r\n                              : date.getFullYear()}\r\n                           :{\" \"}\r\n                        </span>\r\n                        {yearEnrollments.length}\r\n                     </p>\r\n                  )}\r\n                  {activeUsers.activeTeachers !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Profesores: </span>\r\n                        {activeUsers.activeTeachers}\r\n                     </p>\r\n                  )}\r\n                  {activeClasses !== \"\" && (\r\n                     <p className=\"heading-tertiary\">\r\n                        <span className=\"text-dark\">Clases: </span>\r\n                        {activeClasses}\r\n                     </p>\r\n                  )}\r\n                  {isAdmin && (\r\n                     <div className=\"btn-right\">\r\n                        <button\r\n                           className=\"btn btn-secondary\"\r\n                           onClick={() => {\r\n                              togglePopup(\"backup\");\r\n                           }}\r\n                           type=\"button\"\r\n                        >\r\n                           Restaurar BD\r\n                        </button>\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   yearEnrollments: state.enrollments.otherValues.yearEnrollments,\r\n   totalDebt: state.installments.otherValues.totalDebt,\r\n   activeUsers: state.users.otherValues,\r\n   activeClasses: state.classes.otherValues.activeClasses,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   getTotalDebt,\r\n   getYearEnrollments,\r\n   getActiveUsers,\r\n   getActiveClasses,\r\n   clearInstallments,\r\n   getInvoiceNumber,\r\n   clearRegister,\r\n   clearSearch,\r\n   clearClasses,\r\n   clearCategories,\r\n   clearInvoice,\r\n   clearUsers,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearEnrollments,\r\n   clearGlobals,\r\n   togglePopup,\r\n})(AdminDashboard);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassesTable = ({\r\n   classes,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   all = true,\r\n}) => {\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <table>\r\n            <thead>\r\n               <tr>\r\n                  {all && <th>&nbsp; Profesor &nbsp;</th>}\r\n                  <th>Categoría</th>\r\n                  <th>Día 1</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>Día 2</th>\r\n                  <th>Comienzo</th>\r\n                  <th>Fin</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {classes.map((classItem) => {\r\n                  return (\r\n                     <tr key={classItem._id}>\r\n                        {all && (\r\n                           <td>\r\n                              <Link\r\n                                 to={`/index/dashboard/${classItem.teacher._id}`}\r\n                                 className=\"btn-text\"\r\n                                 onClick={() => {\r\n                                    clearProfile();\r\n                                    clearClasses();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 {classItem.teacher.lastname +\r\n                                    \", \" +\r\n                                    classItem.teacher.name}\r\n                              </Link>\r\n                           </td>\r\n                        )}\r\n                        <td>{classItem.category.name}</td>\r\n                        <td>{classItem.day1}</td>\r\n                        <td>\r\n                           {classItem.hourin1 &&\r\n                              format(\r\n                                 new Date(classItem.hourin1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout1 &&\r\n                              format(\r\n                                 new Date(classItem.hourout1.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>{classItem.day2}</td>\r\n                        <td>\r\n                           {classItem.hourin2 &&\r\n                              format(\r\n                                 new Date(classItem.hourin2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           {classItem.hourout2 &&\r\n                              format(\r\n                                 new Date(classItem.hourout2.slice(0, -1)),\r\n                                 \"HH:mm\"\r\n                              )}\r\n                        </td>\r\n                        <td>\r\n                           <Link\r\n                              onClick={() => {\r\n                                 clearClass();\r\n                                 window.scroll(0, 0);\r\n                              }}\r\n                              to={`/class/single/${classItem._id}`}\r\n                              className=\"btn-text\"\r\n                           >\r\n                              Ver &rarr;\r\n                           </Link>\r\n                        </td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n         {classes.length === 0 && (\r\n            <p className=\"heading-tertiary text-center text-dark m-2\">\r\n               No se han encontrado clases\r\n            </p>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassesTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { clearClass, loadClasses } from \"../../../../../../actions/class\";\r\nimport { clearSearch } from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst TeacherDashboard = ({\r\n   classes: { classes, loading },\r\n   user,\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ teacher: user._id }, false);\r\n   }, [user._id, loadClasses, loading]);\r\n\r\n   return (\r\n      <div className=\"p-4 bg-white\">\r\n         <h3 className=\"heading-secondary text-dark p-1\">Clases</h3>\r\n         {!loading && (\r\n            <>\r\n               {classes.length > 0 ? (\r\n                  <ClassesTable\r\n                     classes={classes}\r\n                     all={false}\r\n                     clearClass={clearClass}\r\n                     clearSearch={clearSearch}\r\n                  />\r\n               ) : (\r\n                  <p className=\"heading-tertiary text-center\">\r\n                     No hay classes registradas\r\n                  </p>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   clearClass,\r\n   clearSearch,\r\n})(TeacherDashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserMinus, FaUserEdit } from \"react-icons/fa\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   loadUser,\r\n   deleteUser,\r\n   clearUser,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../actions/user\";\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { clearNeighbourhoods } from \"../../../../actions/neighbourhood\";\r\nimport {\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n   whenNull,\r\n} from \"../../../../actions/global\";\r\nimport { loadInvoices } from \"../../../../actions/invoice\";\r\n\r\nimport PopUp from \"../../../modal/PopUp\";\r\nimport Alert from \"../../sharedComp/Alert\";\r\nimport Loading from \"../../../modal/Loading\";\r\nimport StudentDashboard from \"./usersDashboards/StudentDashboard\";\r\nimport RelativeDashboard from \"./usersDashboards/RelativeDashboard\";\r\nimport AdminDashboard from \"./usersDashboards/AdminDashboard\";\r\nimport TeacherDashboard from \"./usersDashboards/TeacherDashboard\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   global: { popupType: popupRealType },\r\n   invoices: { invoices, loading },\r\n   loadUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearNeighbourhoods,\r\n   clearUser,\r\n   clearProfile,\r\n   deleteUser,\r\n   togglePopup,\r\n   createBackup,\r\n   loadInvoices,\r\n   restoreBackup,\r\n}) => {\r\n   const relationTypes = {\r\n      mother: \"Mamá\",\r\n      father: \"Papá\",\r\n      grandmother: \"Abuela\",\r\n      grandfather: \"Abuelo\",\r\n      aunt: \"Tía\",\r\n      uncle: \"Tío\",\r\n      sibling: \"Hermano/a\",\r\n      other: \"Otro\",\r\n   };\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      user: null,\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { user, popupType } = adminValues;\r\n\r\n   const isOwner =\r\n      userLogged &&\r\n      (userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\");\r\n\r\n   const isAdmin = (userLogged && userLogged.type === \"secretary\") || isOwner;\r\n\r\n   const userTypeName = {\r\n      student: \"Alumno\",\r\n      teacher: \"Profesor\",\r\n      guardian: \"Tutor\",\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Administrador y Profesor\",\r\n   };\r\n   const _id = match.params.user_id !== \"0\" ? match.params.user_id : null;\r\n\r\n   useEffect(() => {\r\n      if (!user) {\r\n         if (_id && loadingUser) loadUser(_id, true);\r\n         else {\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               user: _id ? otherUser : userLogged,\r\n            }));\r\n         }\r\n      } else {\r\n         if (\r\n            (_id && user._id !== _id) ||\r\n            (!_id && user._id !== userLogged._id)\r\n         ) {\r\n            setAdminValues((prev) => ({ ...prev, user: null }));\r\n            clearProfile();\r\n         }\r\n      }\r\n   }, [loadUser, _id, loadingUser, otherUser, user, userLogged, clearProfile]);\r\n\r\n   useEffect(() => {\r\n      if (user && user.type === \"student\" && loading)\r\n         loadInvoices({ studentId: user._id }, false);\r\n   }, [user, loading, loadInvoices]);\r\n\r\n   const dashboardType = () => {\r\n      switch (user.type) {\r\n         case \"student\":\r\n            return <StudentDashboard user={user} />;\r\n         case \"teacher\":\r\n            return (\r\n               <>\r\n                  {(isAdmin || !_id) && user.active && (\r\n                     <TeacherDashboard user={user} />\r\n                  )}\r\n               </>\r\n            );\r\n         case \"guardian\":\r\n            return <RelativeDashboard user={user} />;\r\n         case \"secretary\":\r\n         case \"admin\":\r\n         case \"admin&teacher\":\r\n            return <>{userLogged._id === user._id && <AdminDashboard />}</>;\r\n         default:\r\n            return <></>;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"dashboard\">\r\n         <Loading />\r\n         {user !== null && (\r\n            <>\r\n               <PopUp\r\n                  confirm={(data) => {\r\n                     if (popupRealType === \"default\") {\r\n                        if (popupType === \"delete\") {\r\n                           deleteUser(user);\r\n                           setAdminValues((prev) => ({\r\n                              ...prev,\r\n                              popupType: \"\",\r\n                           }));\r\n                        } else createBackup(false);\r\n                     } else restoreBackup(data);\r\n                  }}\r\n                  error={popupRealType === \"backup\"}\r\n                  info={\r\n                     popupRealType === \"invoices\"\r\n                        ? invoices\r\n                        : popupType === \"delete\"\r\n                        ? \"¿Está seguro que desea eliminar el usuario?\"\r\n                        : \"¿Desea guardar un backup de la base de datos?\"\r\n                  }\r\n               />\r\n               <Alert type=\"1\" />\r\n               <div className=\"mt-1\">\r\n                  <div className=\"profile-top bg-primary\">\r\n                     <div className=\"img-about m-1\">\r\n                        <img\r\n                           src={\r\n                              user.img.public_id === \"\"\r\n                                 ? \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                                 : user.img.url\r\n                           }\r\n                           alt=\"Perfil Usuario\"\r\n                           className=\"round-img p-1\"\r\n                        />\r\n                        <h3 className=\"heading-secondary text-center text-secondary light-font my-1\">\r\n                           {user.name + \" \" + user.lastname}\r\n                        </h3>\r\n                        {user.studentnumber && (\r\n                           <p className=\"heading-tertiary\">\r\n                              <span className=\"text-dark\">Legajo: </span>\r\n                              {user.studentnumber}\r\n                           </p>\r\n                        )}\r\n                        {isAdmin && (\r\n                           <p className=\"heading-tertiary text-dark\">\r\n                              Usuario {user.active ? \"Activo\" : \"Inactivo\"}\r\n                           </p>\r\n                        )}\r\n                     </div>\r\n\r\n                     <div className=\"about p-2\">\r\n                        <div className=\"about-info\">\r\n                           <h4 className=\"heading-tertiary\">\r\n                              Info {userTypeName[user.type]}:\r\n                           </h4>\r\n                           {whenNull(user.dni) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">DNI: </span>\r\n                                 {user.dni\r\n                                    .toString()\r\n                                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                              </p>\r\n                           )}\r\n\r\n                           <p>\r\n                              <span className=\"text-dark\">Sexo: </span>\r\n                              {user.sex}\r\n                           </p>\r\n                           {whenNull(user.email) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Email: </span>\r\n                                 {user.email}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.tel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Teléfono: </span>\r\n                                 {user.tel}\r\n                              </p>\r\n                           )}\r\n                           {whenNull(user.cel) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Celular: </span>\r\n                                 {user.cel}\r\n                              </p>\r\n                           )}\r\n                           {user.relatedCellphones &&\r\n                              user.relatedCellphones.map((item) => (\r\n                                 <div key={item.cel}>\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Celular {relationTypes[item.relation]}\r\n                                          :{\" \"}\r\n                                       </span>\r\n                                       {item.cel} ({item.name})\r\n                                    </p>\r\n                                 </div>\r\n                              ))}\r\n                           {(user._id === userLogged._id ||\r\n                              (isAdmin &&\r\n                                 (whenNull(user.address) ||\r\n                                    whenNull(user.neighbourhood) ||\r\n                                    whenNull(user.town)))) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">Dirección: </span>\r\n                                 {user.address ? user.address + \", \" : \"\"}\r\n                                 {user.neighbourhood\r\n                                    ? user.neighbourhood.name + \", \"\r\n                                    : \"\"}\r\n                                 {user.town && user.town.name}\r\n                              </p>\r\n                           )}\r\n\r\n                           {whenNull(user.dob) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Fecha de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {format(\r\n                                    new Date(user.dob.slice(0, -1)),\r\n                                    isOwner || userLogged._id === user._id\r\n                                       ? \"dd/MM/yyyy\"\r\n                                       : \"dd/MM\"\r\n                                 )}\r\n                              </p>\r\n                           )}\r\n                           {(whenNull(user.birthtown) ||\r\n                              whenNull(user.birthprov)) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">\r\n                                    Lugar de Nacimiento:{\" \"}\r\n                                 </span>\r\n                                 {`${\r\n                                    user.birthtown\r\n                                       ? `${user.birthtown}${\r\n                                            user.birthprov &&\r\n                                            user.birthprov !== \".\"\r\n                                               ? \", \"\r\n                                               : \"\"\r\n                                         }`\r\n                                       : \"\"\r\n                                 }${user.birthprov ? user.birthprov : \"\"}`}\r\n                              </p>\r\n                           )}\r\n                           {user.type === \"teacher\" && (\r\n                              <>\r\n                                 {whenNull(user.degree) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Título:{\" \"}\r\n                                       </span>\r\n                                       {user.degree}\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.school) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Institución:{\" \"}\r\n                                       </span>\r\n                                       {user.school}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n\r\n                           {isOwner && whenNull(user.cbvu) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">CBU/CVU: </span>\r\n                                 {user.cbvu}\r\n                              </p>\r\n                           )}\r\n\r\n                           {isOwner && whenNull(user.alias) && (\r\n                              <p>\r\n                                 <span className=\"text-dark\">CBU/CVU: </span>\r\n                                 {user.alias}\r\n                              </p>\r\n                           )}\r\n\r\n                           {user.type === \"student\" && isAdmin && (\r\n                              <>\r\n                                 {whenNull(user.discount) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Descuento:{\" \"}\r\n                                       </span>\r\n                                       {user.discount}%\r\n                                    </p>\r\n                                 )}\r\n                                 {whenNull(user.chargeday) && (\r\n                                    <p>\r\n                                       <span className=\"text-dark\">\r\n                                          Día recargo:{\" \"}\r\n                                       </span>\r\n                                       {user.chargeday === 31\r\n                                          ? \"Fin de Mes\"\r\n                                          : user.chargeday}\r\n                                    </p>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                        <div className=\"btn-right\">\r\n                           {(isAdmin || userLogged._id === user._id) && (\r\n                              <>\r\n                                 <Link\r\n                                    to={`/user/edit/${user._id}`}\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearTowns();\r\n                                       clearUser();\r\n                                       clearNeighbourhoods();\r\n                                       clearSearch();\r\n                                    }}\r\n                                 >\r\n                                    <FaUserEdit />\r\n                                    <span className=\"hide-md\">\r\n                                       &nbsp;Editar\r\n                                    </span>\r\n                                 </Link>\r\n                                 {isAdmin && (\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setAdminValues((prev) => ({\r\n                                             ...prev,\r\n                                             popupType: \"delete\",\r\n                                          }));\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaUserMinus />\r\n                                       <span className=\"hide-md\">\r\n                                          &nbsp;Eliminar\r\n                                       </span>\r\n                                    </button>\r\n                                 )}\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {dashboardType()}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   users: state.users,\r\n   global: state.global,\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUser,\r\n   loadInvoices,\r\n   deleteUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearUser,\r\n   clearProfile,\r\n   clearNeighbourhoods,\r\n   togglePopup,\r\n   createBackup,\r\n   restoreBackup,\r\n})(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaUnlock } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\n//Actions\r\nimport { updateCredentials, loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst Credentials = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: { user: otherUser, loadingUser },\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n   });\r\n\r\n   const { email, password, password2 } = formData;\r\n\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"admin&teacher\" ||\r\n      userLogged.type === \"secretary\";\r\n\r\n   useEffect(() => {\r\n      if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n      else {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            _id: user._id,\r\n            email: !user.email ? \"\" : user.email,\r\n         }));\r\n      }\r\n   }, [loadingUser, _id, loadUser, otherUser, userLogged]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"p-4\">\r\n         <PopUp\r\n            confirm={() => updateCredentials(formData, userLogged._id)}\r\n            info=\"¿Está seguro que desea aplicar los cambios?\"\r\n         />\r\n         <h3 className=\"heading-secondary text-primary\">\r\n            Modificar Credenciales\r\n         </h3>\r\n         <h4 className=\"heading-tertiary text-lighter-primary text-moved-right\">\r\n            <FaUnlock />\r\n            &nbsp;\r\n            {`Cambio de ${isAdmin ? \"Email y/o \" : \"\"}Contraseña`}\r\n         </h4>\r\n         {formData._id !== \"\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               {isAdmin && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        autoComplete=\"off\"\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     value={password}\r\n                     autoComplete=\"new-password\"\r\n                     placeholder=\"Nueva contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Nueva contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     id=\"password2\"\r\n                     type=\"password\"\r\n                     value={password2}\r\n                     placeholder=\"Confirmación de contraseña\"\r\n                     onChange={onChange}\r\n                     name=\"password2\"\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                     Confirmación de contraseña\r\n                  </label>\r\n               </div>\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FiSave />\r\n                     &nbsp;Guardar Cambios\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateCredentials,\r\n   loadUser,\r\n   togglePopup,\r\n})(Credentials);\r\n","import React from \"react\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ClassInfo = ({\r\n   classInfo: {\r\n      category,\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className=\"class-info\">\r\n         <h3>{category.name}</h3>\r\n         <div className=\"heading-tertiary\">\r\n            <p>\r\n               <span className=\"text-dark\">Profesor: </span>\r\n               {teacher.lastname}, {teacher.name}\r\n            </p>\r\n            <p className=\"paragraph\">\r\n               <span className=\"text-dark\">Aula:</span> {classroom}\r\n            </p>\r\n         </div>\r\n         <p></p>\r\n         <div className=\"days\">\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 1: </span>\r\n                  {day1}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin1 &&\r\n                        format(new Date(hourin1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout1 &&\r\n                        format(new Date(hourout1.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <p>\r\n                  <span className=\"text-dark\">Día 2: </span>\r\n                  {day2}\r\n               </p>\r\n               <div className=\"schedule\">\r\n                  <p>\r\n                     <span className=\"text-dark\">Entrada: </span>\r\n                     {hourin2 &&\r\n                        format(new Date(hourin2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"text-dark\">Salida: </span>\r\n                     {hourout2 &&\r\n                        format(new Date(hourout2.slice(0, -1)), \"HH:mm\")}\r\n                  </p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { differenceInYears, format } from \"date-fns\";\r\nimport { FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst StudentTable = ({\r\n   userSearchType = \"student\",\r\n   actionWChild,\r\n   users,\r\n   type,\r\n   clearProfile,\r\n   class_id,\r\n}) => {\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Legajo</th>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">\r\n                  {type !== \"class-students\" ? \"Edad\" : \"Fecha Nac.\"}\r\n               </th>\r\n               {type !== \"add-child\" && type !== \"chosen-child\" && (\r\n                  <th className=\"hide-sm\">DNI</th>\r\n               )}\r\n               {type === \"search\" && <th>Categoría</th>}\r\n               {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                  <th>&nbsp;</th>\r\n               )}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {userSearchType === \"student\" &&\r\n               users.map((user) => {\r\n                  let years = \"\";\r\n                  if (type !== \"class-students\" && user.dob)\r\n                     years = differenceInYears(\r\n                        new Date(),\r\n                        new Date(user.dob.slice(0, -1))\r\n                     );\r\n                  return (\r\n                     <tr key={user._id}>\r\n                        <td>{user.studentnumber}</td>\r\n                        <td>\r\n                           <Link\r\n                              className=\"btn-text\"\r\n                              to={`/index/dashboard/${user._id}${\r\n                                 class_id ? `/${class_id}` : \"\"\r\n                              }`}\r\n                              onClick={() => {\r\n                                 window.scroll(0, 0);\r\n                                 clearProfile();\r\n                              }}\r\n                           >\r\n                              {user.lastname}, {user.name}\r\n                           </Link>\r\n                        </td>\r\n                        <td className=\"hide-sm\">\r\n                           {type !== \"class-students\"\r\n                              ? years\r\n                              : user.dob &&\r\n                                format(\r\n                                   new Date(user.dob.slice(0, -1)),\r\n                                   \"dd/MM/yy\"\r\n                                )}\r\n                        </td>\r\n                        {type !== \"add-child\" &&\r\n                           type !== \"chosen-child\" &&\r\n                           user.dni && (\r\n                              <td className=\"hide-sm\">\r\n                                 {formatNumber(user.dni)}\r\n                              </td>\r\n                           )}\r\n                        {type === \"search\" && <td>{user.category}</td>}\r\n                        {(type === \"add-child\" || type === \"chosen-child\") && (\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className={`btn ${\r\n                                    type === \"add-child\"\r\n                                       ? \"btn-dark\"\r\n                                       : \"btn-danger\"\r\n                                 } `}\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    actionWChild(user);\r\n                                 }}\r\n                              >\r\n                                 {type === \"add-child\" ? (\r\n                                    <FaPlus />\r\n                                 ) : (\r\n                                    <FaTrashAlt />\r\n                                 )}\r\n                                 &nbsp;{\" \"}\r\n                                 {type === \"add-child\" ? \"Agregar\" : \"Eliminar\"}\r\n                              </button>\r\n                           </td>\r\n                        )}\r\n                     </tr>\r\n                  );\r\n               })}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaPenFancy, FaTrashAlt } from \"react-icons/fa\";\r\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { CgNotes } from \"react-icons/cg\";\r\n\r\nimport {\r\n   loadClass,\r\n   deleteClass,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { clearAttendances } from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { clearGrades, clearGradeTypes } from \"../../../../../../actions/grade\";\r\nimport { clearProfile, clearSearch } from \"../../../../../../actions/user\";\r\nimport { clearObservations } from \"../../../../../../actions/observation\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport ClassInfo from \"../../../sharedComp/ClassInfo\";\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\n\r\nconst SingleClass = ({\r\n   match,\r\n   classes: { classInfo, loadingClass },\r\n   auth: { userLogged },\r\n   loadClass,\r\n   deleteClass,\r\n   clearAttendances,\r\n   clearGrades,\r\n   clearGradeTypes,\r\n   clearSearch,\r\n   clearProfile,\r\n   clearObservations,\r\n   togglePopup,\r\n   classPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   const userCanSeeButtons =\r\n      userLogged.type !== \"student\" && userLogged.type !== \"guardian\";\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, true, false);\r\n   }, [loadClass, _id, loadingClass]);\r\n\r\n   return (\r\n      <div className=\"classInfo\">\r\n         <h1 className=\"pt-3 text-center light-font\">Clase</h1>\r\n\r\n         {!loadingClass && (\r\n            <>\r\n               <PopUp\r\n                  info=\"¿Está seguro que desea eliminar el curso?\"\r\n                  confirm={() => deleteClass(classInfo._id)}\r\n               />\r\n               <ClassInfo classInfo={classInfo} />\r\n               {classInfo.students && (\r\n                  <>\r\n                     {classInfo.students.length !== 0 ? (\r\n                        <StudentTable\r\n                           clearProfile={clearProfile}\r\n                           type=\"class-students\"\r\n                           users={classInfo.students}\r\n                           class_id={classInfo._id}\r\n                        />\r\n                     ) : (\r\n                        <p className=\"heading-tertiary text-secondary my-5 text-center\">\r\n                           No hay ningun alumno anotado en esta clase\r\n                        </p>\r\n                     )}\r\n                     <div className=\"btn-center\">\r\n                        {userCanSeeButtons && (\r\n                           <>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/grades/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearGrades();\r\n                                       clearGradeTypes();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <FaPenFancy />\r\n                                 <span className=\"hide-sm\">&nbsp; Notas</span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/attendances/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0) {\r\n                                       clearAttendances();\r\n                                       window.scroll(0, 0);\r\n                                    }\r\n                                 }}\r\n                              >\r\n                                 <IoCheckmarkCircleSharp />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Inasistencias\r\n                                 </span>\r\n                              </Link>\r\n                              <Link\r\n                                 to={\r\n                                    classInfo.students.length > 0\r\n                                       ? `/class/observations/${classInfo._id}`\r\n                                       : \"!#\"\r\n                                 }\r\n                                 className={\r\n                                    classInfo.students.length > 0\r\n                                       ? \"btn btn-primary\"\r\n                                       : \"btn btn-black\"\r\n                                 }\r\n                                 onClick={() => {\r\n                                    if (classInfo.students.length > 0)\r\n                                       clearObservations();\r\n                                    window.scroll(0, 0);\r\n                                 }}\r\n                              >\r\n                                 <CgNotes />\r\n                                 <span className=\"hide-sm\">\r\n                                    &nbsp; Observaciones\r\n                                 </span>\r\n                              </Link>\r\n                           </>\r\n                        )}\r\n                     </div>\r\n                     <br />\r\n                     {userCanSeeButtons && (\r\n                        <div className=\"btn-right\">\r\n                           <div className=\"tooltip\">\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-secondary\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    classPDF(\r\n                                       {\r\n                                          ...classInfo,\r\n                                          category: classInfo.category.name,\r\n                                          teacher:\r\n                                             classInfo.teacher.lastname +\r\n                                             \", \" +\r\n                                             classInfo.teacher.name,\r\n                                          hourin1: classInfo.hourin1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout1: classInfo.hourout1\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout1.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourin2: classInfo.hourin2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourin2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                          hourout2: classInfo.hourout2\r\n                                             ? format(\r\n                                                  new Date(\r\n                                                     classInfo.hourout2.slice(\r\n                                                        0,\r\n                                                        -1\r\n                                                     )\r\n                                                  ),\r\n                                                  \"HH:mm\"\r\n                                               )\r\n                                             : \"\",\r\n                                       },\r\n                                       \"class\"\r\n                                    );\r\n                                 }}\r\n                              >\r\n                                 <ImFilePdf />\r\n                              </button>\r\n                              <span className=\"tooltiptext\">\r\n                                 PDF lista de alumnos de la clase e info\r\n                              </span>\r\n                           </div>\r\n\r\n                           {userLogged.type !== \"teacher\" && (\r\n                              <>\r\n                                 <div className=\"tooltip\">\r\n                                    <Link\r\n                                       to={\r\n                                          classInfo.year === year\r\n                                             ? `/class/edit/${classInfo._id}`\r\n                                             : \"#\"\r\n                                       }\r\n                                       className={`btn ${\r\n                                          classInfo.year === year\r\n                                             ? \"btn-mix-secondary\"\r\n                                             : \"btn-black\"\r\n                                       }`}\r\n                                       onClick={() => {\r\n                                          if (classInfo.year === year) {\r\n                                             window.scroll(0, 0);\r\n                                             clearSearch();\r\n                                          }\r\n                                       }}\r\n                                    >\r\n                                       <FaEdit />\r\n                                    </Link>\r\n                                    <span className=\"tooltiptext\">Editar</span>\r\n                                 </div>\r\n\r\n                                 <div className=\"tooltip\">\r\n                                    <button\r\n                                       type=\"button\"\r\n                                       className=\"btn btn-danger\"\r\n                                       onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          togglePopup(\"default\");\r\n                                       }}\r\n                                    >\r\n                                       <FaTrashAlt />\r\n                                    </button>\r\n                                    <span className=\"tooltiptext\">\r\n                                       Eliminar\r\n                                    </span>\r\n                                 </div>\r\n                              </>\r\n                           )}\r\n                        </div>\r\n                     )}\r\n                  </>\r\n               )}\r\n            </>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   deleteClass,\r\n   togglePopup,\r\n   classPDF,\r\n   clearGrades,\r\n   clearAttendances,\r\n   clearProfile,\r\n   clearSearch,\r\n   clearGradeTypes,\r\n   clearObservations,\r\n})(SingleClass);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaPlus, FaTimes, FaScroll } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n} from \"../../../../../../actions/attendance\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst AttendanceTab = ({\r\n   classes: { classInfo },\r\n   attendances: {\r\n      attendances: { header, students, periods },\r\n   },\r\n   period,\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const [newAttendances, setNewAttendances] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewAttendances(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, date) => {\r\n      e.persist();\r\n      if (year === classInfo.year) {\r\n         const newA = [...newAttendances];\r\n         newA[student][date].inassistance = !e.target.checked;\r\n\r\n         setNewAttendances(newA);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(newDate) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateAttendances(\r\n                        newAttendances.filter(\r\n                           (attendance) => attendance[0].student\r\n                        ),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteDate(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     break;\r\n                  case \"new-date\":\r\n                     registerNewDate(\r\n                        !periods[period - 1]\r\n                           ? {\r\n                                ...newDate,\r\n                                day1: classInfo.day1,\r\n                                day2: classInfo.day2,\r\n                             }\r\n                           : newDate,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods\r\n                     );\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-date\"}\r\n            info={\r\n               popupType !== \"new-date\"\r\n                  ? `¿Está seguro que desea ${\r\n                       popupType === \"save\"\r\n                          ? \"guardar los cambios\"\r\n                          : \"eliminar la fecha\"\r\n                    }?`\r\n                  : !periods[period - 1]\r\n            }\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((day, index) => (\r\n                           <th key={index}>\r\n                              {format(new Date(day.slice(0, -1)), \"dd/MM\")}\r\n                           </th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newAttendances.length > 0 &&\r\n                           newAttendances[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 <input\r\n                                    type=\"checkbox\"\r\n                                    checked={!row.inassistance}\r\n                                    className=\"option-input\"\r\n                                    name={row.name}\r\n                                    onChange={(e) => onChange(e, i, key)}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n               <tbody>\r\n                  <tr className=\"sticky\">\r\n                     <td></td>\r\n                     {newAttendances.length > 0 &&\r\n                        newAttendances[0].map((item, i) => (\r\n                           <td key={i}>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-danger\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       popupType: \"delete\",\r\n                                       toDelete: item.date,\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                              >\r\n                                 <FaTimes />\r\n                              </button>\r\n                           </td>\r\n                        ))}\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues({\r\n                     ...adminValues,\r\n                     popupType: \"save\",\r\n                  });\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-date\",\r\n                  }));\r\n                  togglePopup(\"new-date\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp;Día</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     attendancesPDF(header[period - 1], periods[period - 1], {\r\n                        students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF asistencias del bimestre</span>\r\n            </div>\r\n            {year === classInfo.year && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        attendancesPDF(header[period - 1], null, {\r\n                           students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        });\r\n                     }}\r\n                  >\r\n                     <FaScroll />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">\r\n                     PDF en blanco para notas y asistencias\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewDate,\r\n   deleteDate,\r\n   updateAttendances,\r\n   attendancesPDF,\r\n   togglePopup,\r\n})(AttendanceTab);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Tabs = ({ tablist, panellist }) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      isActive: 0,\r\n      width: 0,\r\n      position: 0,\r\n      refs: useMemo(\r\n         () =>\r\n            Array(tablist.length)\r\n               .fill(0)\r\n               .map((i) => React.createRef()),\r\n         [tablist.length]\r\n      ),\r\n   });\r\n\r\n   const { isActive, width, position, refs } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            width: refs[0].current.offsetWidth,\r\n            position: refs[0].current.offsetLeft,\r\n         }));\r\n      }, 50);\r\n   }, [refs]);\r\n\r\n   const changeActive = (nb) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         isActive: nb,\r\n         width: refs[nb].current.offsetWidth,\r\n         position: refs[nb].current.offsetLeft,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <section className=\"section-tab mt-3\">\r\n         <div className=\"tab-header\">\r\n            {tablist.map((tab, index) => (\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"tab-header-btn\"\r\n                  key={index}\r\n                  onClick={() => changeActive(index)}\r\n                  ref={refs[index]}\r\n               >\r\n                  {tablist.length > 3 ? (\r\n                     <>\r\n                        {tab.substring(0, 3)}\r\n                        <span className=\"hide-sm\">{tab.substring(3)}</span>\r\n                     </>\r\n                  ) : (\r\n                     tab\r\n                  )}\r\n               </button>\r\n            ))}\r\n         </div>\r\n         <div className=\"tab-header-line\">\r\n            <div style={{ width, left: position }} className=\"line\"></div>\r\n         </div>\r\n         <div className=\"mt-1\">\r\n            {panellist.map((Panel, index) => (\r\n               <div\r\n                  key={index}\r\n                  className={`tab-content-panel ${\r\n                     isActive === index ? \"active\" : \"\"\r\n                  }`}\r\n               >\r\n                  <Panel typeF={tablist[index]} period={index + 1} />\r\n               </div>\r\n            ))}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../actions/class\";\r\nimport { loadAttendances } from \"../../../../actions/attendance\";\r\n\r\nimport AttendanceTab from \"./tabs/AttendanceTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Attendance = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   attendances: { loading },\r\n   loadAttendances,\r\n   loadClass,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [_id, loadClass, loadingClass]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadAttendances(_id);\r\n   }, [_id, loadAttendances, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Inasistencias</h1>\r\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\r\n         <div className=\"few-tabs\">\r\n            {!loading && !loadingClass && (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                     AttendanceTab,\r\n                  ]}\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   attendances: state.attendances,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadAttendances,\r\n})(Attendance);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaGraduationCap, FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n} from \"../../../../../../actions/grade\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport Alert from \"../../../../sharedComp/Alert\";\r\n\r\nconst GradesTab = ({\r\n   period,\r\n   classes: { classInfo },\r\n   auth: { userLogged },\r\n   grades: {\r\n      grades: { header, students, periods },\r\n      gradeTypes,\r\n   },\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   clearGradeTypes,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   togglePopup,\r\n}) => {\r\n   const year = new Date().getFullYear();\r\n\r\n   const getGradeTypes = () => {\r\n      let gradetypes = [];\r\n\r\n      gradeTypes.forEach((type) => {\r\n         if (!header[period - 1].some((item) => item.name === type.name))\r\n            gradetypes.push(type);\r\n      });\r\n      return gradetypes;\r\n   };\r\n\r\n   const [newGrades, setNewGrades] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      gradetypes: header[period - 1] ? getGradeTypes() : gradeTypes,\r\n      popupType: \"\",\r\n      toDelete: null,\r\n   });\r\n\r\n   const { popupType, gradetypes, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setNewGrades(periods[period - 1] ? periods[period - 1] : []);\r\n   }, [period, periods]);\r\n\r\n   const onChange = (e, student, grade) => {\r\n      e.persist();\r\n      const value = e.target.value;\r\n\r\n      if ((value > 0 && value <= 10) || value === \"\") {\r\n         const newG = [...newGrades];\r\n         newG[student][grade].value = value;\r\n\r\n         setNewGrades(newG);\r\n      }\r\n   };\r\n\r\n   const info = () => {\r\n      switch (popupType) {\r\n         case \"save\":\r\n            return \"¿Está seguro que desea guardar los cambios?\";\r\n         case \"delete\":\r\n            return \"¿Está seguro que desea eliminar el tipo de nota?\";\r\n         case \"new-grade\":\r\n            return {\r\n               gradetypes,\r\n               isAdmin:\r\n                  userLogged.type === \"admin\" ||\r\n                  userLogged.type === \"admin&teacher\",\r\n               clearGradeTypes,\r\n            };\r\n         case \"certificate\":\r\n            return {\r\n               students:\r\n                  year === classInfo.year ? students.slice(0, -1) : students,\r\n            };\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Alert type=\"3\" />\r\n         <PopUp\r\n            confirm={(formInfo) => {\r\n               switch (popupType) {\r\n                  case \"save\":\r\n                     updateGrades(\r\n                        newGrades.filter((grade) => grade[0].student),\r\n                        classInfo._id,\r\n                        period\r\n                     );\r\n                     break;\r\n                  case \"delete\":\r\n                     deleteGrades(\r\n                        toDelete,\r\n                        classInfo._id,\r\n                        period,\r\n                        periods[period] && header[period - 1].length === 1\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: [\r\n                           ...gradetypes,\r\n                           gradeTypes.find((item) => item._id === toDelete),\r\n                        ],\r\n                        toDelete: null,\r\n                     }));\r\n\r\n                     break;\r\n                  case \"certificate\":\r\n                     certificatePDF(\r\n                        header[period - 1],\r\n                        periods[period - 1],\r\n                        formInfo.date !== \"\"\r\n                           ? format(\r\n                                new Date(formInfo.date.replace(\"-\", \",\")),\r\n                                \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                                {\r\n                                   locale: es,\r\n                                }\r\n                             )\r\n                           : null,\r\n                        {\r\n                           students: formInfo.students,\r\n                           teacher:\r\n                              classInfo.teacher.lastname +\r\n                              \", \" +\r\n                              classInfo.teacher.name,\r\n                           category: classInfo.category.name,\r\n                           period: period - 1,\r\n                        },\r\n                        !periods[period - 1]\r\n                     );\r\n                     break;\r\n                  case \"new-grade\":\r\n                     registerNewGrade(\r\n                        {\r\n                           gradetype: formInfo,\r\n                        },\r\n                        classInfo._id,\r\n                        period,\r\n                        period !== 1 && !periods[period - 2]\r\n                     );\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        gradetypes: gradetypes.filter(\r\n                           (gt) => gt._id !== formInfo\r\n                        ),\r\n                     }));\r\n                     break;\r\n                  default:\r\n                     break;\r\n               }\r\n            }}\r\n            error={popupType === \"new-grade\" || popupType === \"certificate\"}\r\n            info={info()}\r\n         />\r\n         <div className=\"wrapper both mt-2\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>&nbsp; Nombre &nbsp;</th>\r\n                     {header[period - 1] &&\r\n                        header[period - 1].map((type, index) => (\r\n                           <th key={index}>{type.name}</th>\r\n                        ))}\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {students.map((student, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           {student._id &&\r\n                              student.lastname + \", \" + student.name}\r\n                        </td>\r\n                        {newGrades.length > 0 &&\r\n                           newGrades[i].map((row, key) => (\r\n                              <td key={key}>\r\n                                 <input\r\n                                    type=\"text\"\r\n                                    name={row.name}\r\n                                    onChange={(e) => onChange(e, i, key)}\r\n                                    value={row.value}\r\n                                    disabled={year !== classInfo.year}\r\n                                    placeholder=\"Nota\"\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n               <tbody>\r\n                  <tr className=\"sticky\">\r\n                     <td></td>\r\n                     {newGrades.length > 0 &&\r\n                        newGrades[0].map((item, i) => (\r\n                           <td key={i}>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 className=\"btn btn-danger\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues((prev) => ({\r\n                                       ...prev,\r\n                                       popupType: \"delete\",\r\n                                       toDelete: item.gradetype._id,\r\n                                    }));\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                              >\r\n                                 <FaTimes />\r\n                              </button>\r\n                           </td>\r\n                        ))}\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <button\r\n               disabled={year !== classInfo.year}\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-md\">&nbsp;Guardar Cambios</span>\r\n            </button>\r\n            <button\r\n               className={`btn ${\r\n                  year === classInfo.year ? \"btn-dark\" : \"btn-black\"\r\n               }`}\r\n               type=\"button\"\r\n               disabled={year !== classInfo.year}\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"new-grade\",\r\n                  }));\r\n                  togglePopup(\"new-grade\");\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-md\">&nbsp; Nota</span>\r\n            </button>\r\n\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     gradesPDF(header[period - 1], periods[period - 1], {\r\n                        students:\r\n                           year === classInfo.year\r\n                              ? students.slice(0, -1)\r\n                              : students,\r\n                        teacher:\r\n                           classInfo.teacher.lastname +\r\n                           \", \" +\r\n                           classInfo.teacher.name,\r\n                        category: classInfo.category.name,\r\n                        period: period - 1,\r\n                     });\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF notas del bimestre</span>\r\n            </div>\r\n            {(period === 5 ||\r\n               period === 6 ||\r\n               (classInfo.category.name === \"Kinder\" && period === 4)) && (\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"certificate\",\r\n                        }));\r\n                        togglePopup(\"certificate\");\r\n                     }}\r\n                  >\r\n                     <FaGraduationCap />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF certificados</span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   grades: state.grades,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerNewGrade,\r\n   deleteGrades,\r\n   updateGrades,\r\n   gradesPDF,\r\n   certificatePDF,\r\n   clearGradeTypes,\r\n   togglePopup,\r\n})(GradesTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n} from \"../../../../actions/grade\";\r\nimport { loadClass } from \"../../../../actions/class\";\r\n\r\nimport GradesTab from \"./tabs/GradesTab\";\r\nimport ClassInfo from \"../sharedComp/ClassInfo\";\r\nimport Tabs from \"../sharedComp/Tabs\";\r\n\r\nconst Grades = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   grades: {\r\n      loadingGT,\r\n      loading,\r\n      grades: { header, periods, students },\r\n   },\r\n   loadGrades,\r\n   loadGradeTypes,\r\n   loadClass,\r\n   gradesPDF,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n   const year = new Date().getFullYear();\r\n\r\n   useEffect(() => {\r\n      if (loading) loadGrades(_id, false);\r\n   }, [loading, loadGrades, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingClass) loadClass(_id, false, false);\r\n   }, [loadingClass, loadClass, _id]);\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && loadingGT)\r\n         loadGradeTypes(classInfo.category._id, false);\r\n   }, [loadingClass, loadingGT, classInfo, loadGradeTypes]);\r\n\r\n   const tabs = (className) => {\r\n      switch (className) {\r\n         case \"Kinder\":\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                  ]}\r\n                  panellist={[GradesTab, GradesTab, GradesTab, GradesTab]}\r\n               />\r\n            );\r\n         case \"Infantil B\":\r\n         case \"Infantil A\":\r\n         case \"Preparatorio\":\r\n         case \"Junior\":\r\n            return (\r\n               <div className=\"few-tabs\">\r\n                  <Tabs\r\n                     tablist={[\r\n                        \"1° Bimestre\",\r\n                        \"2° Bimestre\",\r\n                        \"3° Bimestre\",\r\n                        \"4° Bimestre\",\r\n                        \"Final\",\r\n                        \"Cambridge\",\r\n                     ]}\r\n                     panellist={[\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                        GradesTab,\r\n                     ]}\r\n                  />\r\n               </div>\r\n            );\r\n         default:\r\n            return (\r\n               <Tabs\r\n                  tablist={[\r\n                     \"1° Bimestre\",\r\n                     \"2° Bimestre\",\r\n                     \"3° Bimestre\",\r\n                     \"4° Bimestre\",\r\n                     \"Final\",\r\n                  ]}\r\n                  panellist={[\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                     GradesTab,\r\n                  ]}\r\n               />\r\n            );\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"light-font p-1 mt-2\">Notas</h1>\r\n         {!loadingClass && !loading && !loadingGT && (\r\n            <>\r\n               <div className=\"btn-right\">\r\n                  <div className=\"tooltip\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={(e) => {\r\n                           e.preventDefault();\r\n                           gradesPDF(\r\n                              header,\r\n                              periods.lenght > 5\r\n                                 ? periods.slice(0, -1)\r\n                                 : periods,\r\n                              {\r\n                                 students:\r\n                                    year === classInfo.year\r\n                                       ? students.slice(0, -1)\r\n                                       : students,\r\n                                 teacher:\r\n                                    classInfo.teacher.lastname +\r\n                                    \", \" +\r\n                                    classInfo.teacher.name,\r\n                                 category: classInfo.category.name,\r\n                              }\r\n                           );\r\n                        }}\r\n                     >\r\n                        <ImFilePdf />\r\n                        &nbsp;Todas\r\n                     </button>\r\n                     <span className=\"tooltiptext\">\r\n                        PDF notas de todo el año\r\n                     </span>\r\n                  </div>\r\n               </div>\r\n               <ClassInfo classInfo={classInfo} />\r\n\r\n               <div className=\"few-tabs\">{tabs(classInfo.category.name)}</div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGrades,\r\n   loadClass,\r\n   loadGradeTypes,\r\n   gradesPDF,\r\n})(Grades);\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FiSave } from \"react-icons/fi\";\nimport { FaAddressCard } from \"react-icons/fa\";\n\nimport {\n   updateObservations,\n   reportcardPDF,\n} from \"../../../../../../actions/observation\";\nimport { togglePopup } from \"../../../../../../actions/global\";\n\nimport PopUp from \"../../../../../modal/PopUp\";\nimport Alert from \"../../../../sharedComp/Alert\";\n\nconst ObservationsTab = ({\n   auth: { userLogged },\n   classes: { classInfo },\n   observations: { observations },\n   period,\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n}) => {\n   const year = new Date().getFullYear();\n\n   const [newObservations, setNewObservations] = useState([]);\n\n   const [adminValues, setAdminValues] = useState({\n      popupType: \"\",\n   });\n\n   const { popupType } = adminValues;\n\n   useEffect(() => {\n      setNewObservations(observations[period - 1]);\n   }, [period, observations]);\n\n   const onChange = (e, i) => {\n      e.persist();\n      const newO = [...newObservations];\n      newO[i].observation.description = e.target.value;\n\n      setNewObservations(newO);\n   };\n\n   return (\n      <>\n         <Alert type=\"3\" />\n         <PopUp\n            confirm={(info) => {\n               if (popupType === \"save\")\n                  updateObservations(newObservations, classInfo._id, period);\n               else\n                  reportcardPDF(info.students, {\n                     teacher:\n                        classInfo.teacher.lastname +\n                        \", \" +\n                        classInfo.teacher.name,\n                     category: classInfo.category.name,\n                     classroom: classInfo._id,\n                     period,\n                  });\n            }}\n            info={\n               popupType === \"save\"\n                  ? \"¿Está seguro que desea guardar los cambios\"\n                  : { students: observations[period - 1], period }\n            }\n         />\n         <div className=\"wrapper both mt-2\">\n            <table className=\"stick\">\n               <thead>\n                  <tr>\n                     <th>Nombre</th>\n                     <th>Observaciones</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {newObservations.map((item, i) => (\n                     <tr key={i}>\n                        <td>{item.lastname + \", \" + item.name}</td>\n                        <td>\n                           <textarea\n                              onChange={(e) => onChange(e, i)}\n                              rows={\n                                 year !== classInfo.year &&\n                                 item.observation.description === \"\"\n                                    ? \"1\"\n                                    : \"4\"\n                              }\n                              cols=\"50\"\n                              disabled={year !== classInfo.year}\n                              name=\"description\"\n                              value={item.observation.description}\n                           ></textarea>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"btn-right\">\n            <button\n               className={`btn ${\n                  year === classInfo.year ? \"btn-primary\" : \"btn-black\"\n               }`}\n               type=\"button\"\n               disabled={year !== classInfo.year}\n               onClick={(e) => {\n                  e.preventDefault();\n                  setAdminValues((prev) => ({ ...prev, popupType: \"save\" }));\n                  togglePopup(\"default\");\n               }}\n            >\n               <FiSave />\n               <span className=\"hide-md\">&nbsp;Guardar</span>\n            </button>\n            {userLogged.type !== \"teacher\" && (\n               <div className=\"tooltip\">\n                  <button\n                     type=\"button\"\n                     className=\"btn btn-secondary\"\n                     onClick={(e) => {\n                        e.preventDefault();\n                        setAdminValues((prev) => ({\n                           ...prev,\n                           popupType: \"certificate\",\n                        }));\n                        togglePopup(\"certificate\");\n                     }}\n                  >\n                     <FaAddressCard />\n                  </button>\n                  <span className=\"tooltiptext\">PDF libretas</span>\n               </div>\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   auth: state.auth,\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   updateObservations,\n   togglePopup,\n   reportcardPDF,\n})(ObservationsTab);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadClass } from \"../../../../actions/class\";\nimport { loadObservations } from \"../../../../actions/observation\";\n\nimport ObservationsTab from \"./tabs/ObservationsTab\";\nimport ClassInfo from \"../sharedComp/ClassInfo\";\nimport Tabs from \"../sharedComp/Tabs\";\n\nconst Observations = ({\n   match,\n   classes: { loadingClass, classInfo },\n   observations: { loading },\n   loadObservations,\n   loadClass,\n}) => {\n   const _id = match.params.class_id;\n\n   useEffect(() => {\n      if (loadingClass) loadClass(_id, false, false);\n   }, [_id, loadClass, loadingClass]);\n\n   useEffect(() => {\n      if (loading) loadObservations(_id, null, true);\n   }, [_id, loadObservations, loading]);\n\n   return (\n      <>\n         <h1 className=\"text-center light-font p-1 mt-2\">Observaciones</h1>\n         {!loadingClass && <ClassInfo classInfo={classInfo} />}\n         <div className=\"few-tabs\">\n            {!loading && !loadingClass && (\n               <Tabs\n                  tablist={[\n                     \"1° Bimestre\",\n                     \"2° Bimestre\",\n                     \"3° Bimestre\",\n                     \"4° Bimestre\",\n                  ]}\n                  panellist={[\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                     ObservationsTab,\n                  ]}\n               />\n            )}\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   classes: state.classes,\n   observations: state.observations,\n});\n\nexport default connect(mapStateToProps, {\n   loadClass,\n   loadObservations,\n})(Observations);\n","import React from \"react\";\r\n\r\nconst NameField = ({\r\n   name,\r\n   nameAttribute,\r\n   lastnameAttribute,\r\n   lastname,\r\n   onChange,\r\n   namePlaceholder,\r\n   lastnamePlaceholder,\r\n   autoComplete,\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <div className=\"two-in-row\">\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={nameAttribute ? nameAttribute : \"name\"}\r\n               placeholder={namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n               value={name}\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               onChange={onChange}\r\n            />\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"text\"\r\n               name={lastnameAttribute ? lastnameAttribute : \"lastname\"}\r\n               placeholder={\r\n                  lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"\r\n               }\r\n               id=\"user\"\r\n               autoComplete={autoComplete && autoComplete}\r\n               value={lastname}\r\n               onChange={onChange}\r\n            />\r\n         </div>\r\n         <div className=\"two-in-row\">\r\n            <label className={`form-label ${name === \"\" ? \"lbl\" : \"\"}`}>\r\n               {namePlaceholder ? namePlaceholder : \"Nombre\"}\r\n            </label>\r\n            <label className={`form-label ${lastname === \"\" ? \"lbl\" : \"\"}`}>\r\n               {lastnamePlaceholder ? lastnamePlaceholder : \"Apellido\"}\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NameField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes, FaUserCircle, FaPlus, FaMoneyCheckAlt } from \"react-icons/fa\";\n\nimport {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n} from \"../../../../../../actions/user\";\n\nimport NameField from \"../../NameField\";\n\nimport \"./style.scss\";\n\nconst UsersSearch = ({\n   users: { users: primaryUsers, loading: primaryLoading, loadingBK, usersBK },\n   autoComplete,\n   selectUser,\n   selectedUser,\n   clearSearch,\n   clearProfile,\n   usersType,\n   primary,\n   onChangeForm,\n   loadUsers,\n   restore,\n   disabled,\n   button,\n   actionForSelected,\n}) => {\n   const modalRef = useRef();\n\n   const [filterData, setFilterData] = useState({\n      name: \"\",\n      lastname: \"\",\n   });\n\n   const [adminValues, setAdminValues] = useState({\n      user: null,\n      users: [],\n      loading: true,\n      searchDisplay: false,\n   });\n\n   const { name, lastname } = filterData;\n\n   const { user, users, loading, searchDisplay } = adminValues;\n\n   useEffect(() => {\n      setAdminValues((prev) => ({\n         ...prev,\n         users: primary ? primaryUsers : usersBK,\n         loading: primary ? primaryLoading : loadingBK,\n      }));\n   }, [primary, primaryUsers, usersBK, primaryLoading, loadingBK]);\n\n   useEffect(() => {\n      setAdminValues((prev) => ({ ...prev, user: selectedUser }));\n   }, [selectedUser]);\n\n   useEffect(() => {\n      const handler = (event) =>\n         setAdminValues((prev) => ({\n            ...prev,\n            searchDisplay: modalRef.current?.contains(event.target),\n         }));\n\n      window.addEventListener(\"click\", handler);\n      return () => window.removeEventListener(\"click\", handler);\n   }, []);\n\n   const chooseUser = (user) => {\n      setAdminValues((prev) => ({ ...prev, user }));\n      setFilterData((prev) => ({ ...prev, name: \"\", lastname: \"\" }));\n      selectUser(user);\n      clearSearch(primary);\n   };\n\n   const onChange = (e) => {\n      e.persist();\n      setFilterData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n\n      if (onChangeForm) onChangeForm(e);\n\n      if (e.target.value.length > 0)\n         loadUsers(\n            {\n               ...filterData,\n               [e.target.name]: e.target.value,\n               type: usersType,\n               ...(disabled !== undefined && { active: true }),\n            },\n            false,\n            primary\n         );\n   };\n\n   const cancelUser = () => {\n      restore();\n      setAdminValues((prev) => ({ ...prev, user: null }));\n   };\n\n   return (\n      <>\n         <h3\n            className={`${\n               primary ? \"heading-tertiary\" : \"paragraph\"\n            } text-primary`}\n         >\n            {usersType === \"student\"\n               ? \"Búsqueda de Alumnos\"\n               : \"Usuario a Pagar\"}\n         </h3>\n         <div className=\"form-group form-search\" ref={modalRef}>\n            {user ? (\n               <div>\n                  <input\n                     className=\"form-input\"\n                     type=\"text\"\n                     value={user.lastname + \", \" + user.name}\n                     disabled\n                     onChange={onChange}\n                  />\n                  <label htmlFor=\"name\" className=\"form-label\">\n                     Nombre\n                  </label>\n                  <Link\n                     onClick={() => {\n                        window.scroll(0, 0);\n                        clearProfile();\n                     }}\n                     className=\"form-search-user profile\"\n                     to={`/index/dashboard/${user._id}`}\n                  >\n                     <FaUserCircle />\n                  </Link>\n                  <button\n                     disabled={disabled}\n                     type=\"button\"\n                     onClick={cancelUser}\n                     className={`form-search-user cancel ${\n                        disabled ? \"disabled\" : \"\"\n                     }`}\n                  >\n                     <FaTimes />\n                  </button>\n               </div>\n            ) : (\n               <NameField\n                  name={name}\n                  lastname={lastname}\n                  onChange={onChange}\n                  autoComplete={autoComplete}\n               />\n            )}\n            {!loading && users.length > 0 && searchDisplay && (\n               <ul className=\"form-search-display\">\n                  {users.map((user) => (\n                     <li\n                        className=\"form-search-item\"\n                        onClick={() => chooseUser(user)}\n                        key={user._id}\n                     >\n                        <span>{user.lastname + \", \" + user.name}</span>\n                        <span>\n                           {usersType === \"student\"\n                              ? user.category\n                              : user.type === \"student\"\n                              ? \"Alumno\"\n                              : \"Tutor\"}\n                        </span>\n                     </li>\n                  ))}\n               </ul>\n            )}\n         </div>\n         {button && (\n            <div className=\"btn-right mt-1\">\n               <button\n                  type=\"button\"\n                  className=\"btn btn-dark\"\n                  onClick={actionForSelected}\n               >\n                  {button === \"children\" ? (\n                     <>\n                        <FaPlus />\n                        <span className=\"hide-md\">&nbsp; Agregar</span>\n                     </>\n                  ) : (\n                     <>\n                        <FaMoneyCheckAlt />\n                        <span className=\"hide-md\">&nbsp; Ver Cuotas</span>\n                     </>\n                  )}\n               </button>\n            </div>\n         )}\n      </>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   users: state.users,\n});\n\nexport default connect(mapStateToProps, {\n   loadUsers,\n   clearSearch,\n   clearProfile,\n})(UsersSearch);\n","import React, { useState } from \"react\";\r\n\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst TutorInfo = ({ setChildren, children, clearProfile, isAdmin }) => {\r\n   const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n   return (\r\n      <div className=\"my-4\">\r\n         {isAdmin && (\r\n            <UsersSearch\r\n               autoComplete=\"off\"\r\n               selectUser={(user) => setSelectedUser(user)}\r\n               selectedUser={selectedUser}\r\n               usersType=\"student\"\r\n               primary={true}\r\n               restore={() => setSelectedUser(null)}\r\n               button=\"children\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  setChildren(selectedUser, true);\r\n                  setSelectedUser(null);\r\n               }}\r\n            />\r\n         )}\r\n         <h3 className=\"heading-tertiary text-primary pt-4\">\r\n            Lista de Alumnos a Cargo\r\n         </h3>\r\n         <StudentTable\r\n            users={children}\r\n            clearProfile={clearProfile}\r\n            loadingUsers={true}\r\n            actionWChild={(student) => setChildren(student, false)}\r\n            type=\"chosen-child\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TutorInfo;\r\n","import React from \"react\";\r\n\r\nconst EmployeeInfo = ({\r\n   type,\r\n   userType,\r\n   degree,\r\n   school,\r\n   cbvu,\r\n   alias,\r\n   onChange,\r\n}) => {\r\n   const isOwner = userType === \"admin\" || userType === \"admin&teacher\";\r\n   const isAdmin = userType === \"secretary\" || isOwner;\r\n\r\n   return (\r\n      <>\r\n         {type === \"teacher\" && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"degree\"\r\n                     id=\"degree\"\r\n                     disabled={!isAdmin}\r\n                     value={degree}\r\n                     onChange={onChange}\r\n                     placeholder=\"Titulo\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Titulo\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"school\"\r\n                     id=\"school\"\r\n                     disabled={!isAdmin}\r\n                     value={school}\r\n                     onChange={onChange}\r\n                     placeholder=\"Institución donde se graduó\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Institución donde se graduó\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     onChange={onChange}\r\n                     value={cbvu}\r\n                     name=\"cbvu\"\r\n                     id=\"cbvu\"\r\n                     placeholder=\"CBU/CVU\"\r\n                  />\r\n                  <label htmlFor=\"cbvu\" className=\"form-label\">\r\n                     CBU/CVU\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"alias\"\r\n                     id=\"alias\"\r\n                     disabled={!isAdmin}\r\n                     value={alias}\r\n                     onChange={onChange}\r\n                     placeholder=\"Alias\"\r\n                  />\r\n                  <label htmlFor=\"degree\" className=\"form-label\">\r\n                     Alias\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default EmployeeInfo;\r\n","import React from \"react\";\r\n\r\nconst StudentInfo = ({ isAdmin, discount, chargeday, onChange }) => {\r\n   return (\r\n      <>\r\n         {isAdmin && (\r\n            <>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"discount\"\r\n                     id=\"discount\"\r\n                     value={discount}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione el tipo de descuento</option>\r\n                     <option value={0}>Ninguno</option>\r\n                     <option value={10}>Hermanos</option>\r\n                     <option value={50}>Media Beca</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"discount\"\r\n                     className={`form-label ${discount === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Tipo de descuento\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     name=\"chargeday\"\r\n                     id=\"chargeday\"\r\n                     value={chargeday}\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">\r\n                        * Seleccione el día en que se aplicará el recargo\r\n                     </option>\r\n                     <option value=\"10\">10</option>\r\n                     <option value=\"15\">15</option>\r\n                     <option value=\"31\">Fin de Mes</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"chargeday\"\r\n                     className={`form-label ${chargeday === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Día de recargo\r\n                  </label>\r\n               </div>\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\n\nconst StateInfo = ({ isAdmin, birthprov, birthtown, onChange }) => {\n   const state = () => {\n      return \"Buenos Aires,Catamarca,Córdoba,Corrientes,Chaco,Chubut,Entre Ríos,Formosa,Jujuy,La Pampa,La Rioja,Mendoza,Misiones,Neuquén,Río Negro,Salta,San Juan,San Luis,Santa Cruz,Santa Fe,Santiago del Estero,Tierra del Fuego,Tucumán\"\n         .split(\",\")\n         .map((item) => (\n            <option key={item} value={item}>\n               {item}\n            </option>\n         ));\n   };\n   return (\n      <>\n         <div className=\"form-group\">\n            <select\n               className=\"form-input\"\n               value={birthprov}\n               name=\"birthprov\"\n               id=\"birthprov\"\n               disabled={!isAdmin}\n               onChange={onChange}\n            >\n               <option value=\"0\">* Seleccione Provincia de Nacimiento</option>\n               {state()}\n               <option value=\".\">Otro</option>\n            </select>\n            <label\n               htmlFor=\"birthprov\"\n               className={`form-label ${\n                  birthprov === \"\" || birthprov === \"0\" ? \"lbl\" : \"\"\n               }`}\n            >\n               Provincia de nacimiento\n            </label>\n         </div>\n         <div className=\"form-group\">\n            <input\n               className=\"form-input\"\n               type=\"text\"\n               name=\"birthtown\"\n               id=\"birthtown\"\n               disabled={!isAdmin}\n               value={birthtown}\n               onChange={onChange}\n               placeholder=\"Localidad de Nacimiento\"\n            />\n            <label htmlFor=\"birthtown\" className=\"form-label\">\n               Localidad de Nacimiento\n            </label>\n         </div>\n      </>\n   );\n};\n\nexport default StateInfo;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport {\r\n   FaCloudUploadAlt,\r\n   FaEdit,\r\n   FaUnlock,\r\n   FaUserEdit,\r\n   FaUserPlus,\r\n   FaPlus,\r\n   FaTimes,\r\n} from \"react-icons/fa\";\r\n\r\n//Actions\r\nimport {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   getStudentNumber,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\nimport { loadTowns, clearTowns } from \"../../../../../../actions/town\";\r\nimport {\r\n   loadNeighbourhoods,\r\n   clearNeighbourhoods,\r\n} from \"../../../../../../actions/neighbourhood\";\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport TutorInfo from \"./usersInfo/TutorInfo\";\r\nimport EmployeeInfo from \"./usersInfo/EmployeeInfo\";\r\nimport StudentInfo from \"./usersInfo/StudentInfo\";\r\n\r\nimport \"./style.scss\";\r\nimport StateInfo from \"./usersInfo/StateInfo\";\r\n\r\nconst RegisterUser = ({\r\n   match,\r\n   auth: { userLogged },\r\n   users: {\r\n      user: otherUser,\r\n      loadingUser,\r\n      otherValues: { studentNumber },\r\n   },\r\n   towns: { loading: loadingTowns, towns },\r\n   neighbourhoods: { neighbourhoods, loading },\r\n   registerUpdateUser,\r\n   togglePopup,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearSearch,\r\n   clearProfile,\r\n}) => {\r\n   const isOwner =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const isAdmin = userLogged.type === \"secretary\" || isOwner;\r\n\r\n   const _id = match.params.user_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      previewSource: \"\",\r\n      fileInputState: \"\",\r\n      selectedFile: \"\",\r\n   });\r\n\r\n   const { popupType, previewSource, fileInputState, selectedFile } =\r\n      adminValues;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      studentnumber: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      cel: \"\",\r\n      type: \"\",\r\n      dni: \"\",\r\n      town: \"\",\r\n      neighbourhood: \"\",\r\n      address: \"\",\r\n      dob: \"\",\r\n      birthprov: \"\",\r\n      birthtown: \"\",\r\n      sex: \"Femenino\",\r\n      cbvu: \"\",\r\n      alias: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      children: [],\r\n      relatedCellphones: [],\r\n      discount: \"\",\r\n      chargeday: \"\",\r\n      img: {\r\n         public_id: \"\",\r\n         url: \"\",\r\n      },\r\n      active: true,\r\n   });\r\n\r\n   const {\r\n      studentnumber,\r\n      name,\r\n      lastname,\r\n      email,\r\n      tel,\r\n      cel,\r\n      type,\r\n      dni,\r\n      town,\r\n      neighbourhood,\r\n      address,\r\n      dob,\r\n      birthprov,\r\n      birthtown,\r\n      sex,\r\n      degree,\r\n      school,\r\n      cbvu,\r\n      alias,\r\n      children,\r\n      relatedCellphones,\r\n      img,\r\n      discount,\r\n      chargeday,\r\n      active,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(false);\r\n   }, [loadTowns, loadingTowns]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && (userLogged._id === _id || !loadingUser)) {\r\n         const user = userLogged._id !== _id ? otherUser : userLogged;\r\n         if (user.town && loading) loadNeighbourhoods(user.town._id, false);\r\n      }\r\n   }, [userLogged, otherUser, loading, loadNeighbourhoods, _id, loadingUser]);\r\n\r\n   useEffect(() => {\r\n      if (_id === \"0\") {\r\n         if (studentNumber === \"\") getStudentNumber();\r\n         else\r\n            setFormData((prev) => ({ ...prev, studentnumber: studentNumber }));\r\n      }\r\n   }, [_id, getStudentNumber, studentNumber]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\" && formData._id === \"\") {\r\n         if (loadingUser && userLogged._id !== _id) loadUser(_id, true);\r\n         else {\r\n            const user = userLogged._id !== _id ? otherUser : userLogged;\r\n            setFormData((prev) => {\r\n               for (const x in prev)\r\n                  prev[x] =\r\n                     user[x] === undefined || user[x] === null\r\n                        ? prev[x]\r\n                        : x === \"dob\"\r\n                        ? format(new Date(user.dob.slice(0, -1)), \"yyyy-MM-dd\")\r\n                        : x === \"town\" || x === \"neighbourhood\"\r\n                        ? user[x]._id\r\n                        : user[x];\r\n               return prev;\r\n            });\r\n         }\r\n      }\r\n   }, [_id, loadUser, loadingUser, otherUser, userLogged, formData._id]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n\r\n      if (e.target.id !== \"relatedCellphones\") {\r\n         if (\r\n            ![\"cbvu\", \"dni\"].includes(e.target.name) ||\r\n            !isNaN(e.target.value)\r\n         ) {\r\n            setFormData({\r\n               ...formData,\r\n               [e.target.name]:\r\n                  e.target.type === \"checkbox\"\r\n                     ? e.target.checked\r\n                     : e.target.value,\r\n               ...(e.target.name === \"town\" && { neighbourhood: \"\" }),\r\n            });\r\n            if (e.target.name === \"town\")\r\n               loadNeighbourhoods(e.target.value, true);\r\n         }\r\n      } else {\r\n         let newArray = [...relatedCellphones];\r\n         newArray[index][e.target.name] = e.target.value;\r\n\r\n         setFormData((prev) => ({ ...prev, relatedCellphones: newArray }));\r\n      }\r\n   };\r\n\r\n   const onChangeImg = (e) => {\r\n      e.persist();\r\n      if (e.target.value) {\r\n         const file = e.target.files[0];\r\n         previewFile(file, e.target.value);\r\n      }\r\n   };\r\n\r\n   const previewFile = (file, state) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n         setAdminValues({\r\n            ...adminValues,\r\n            previewSource: reader.result,\r\n            selectedFile: file,\r\n            fileInputState: state,\r\n         });\r\n      };\r\n   };\r\n\r\n   const setChildren = (student, add = true) => {\r\n      if (!student) {\r\n         setAlert(\"Busque un alumno para agregar\", \"danger\", \"3\");\r\n      } else {\r\n         if (add) {\r\n            if (!children.some((item) => item._id === student._id)) {\r\n               children.push(student);\r\n               clearSearch();\r\n            } else setAlert(\"El alumno ya ha sido agregado\", \"danger\", \"3\");\r\n         } else {\r\n            setFormData({\r\n               ...formData,\r\n               children: children.filter((child) => child._id !== student._id),\r\n            });\r\n         }\r\n      }\r\n   };\r\n\r\n   const newCellphone = () => {\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         relatedCellphones: [\r\n            ...relatedCellphones,\r\n            {\r\n               relation: \"\",\r\n               name: \"\",\r\n               cel: \"\",\r\n            },\r\n         ],\r\n      }));\r\n   };\r\n\r\n   const changeType = () => {\r\n      switch (type) {\r\n         case \"student\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <StudentInfo\r\n                     isAdmin={isAdmin}\r\n                     discount={discount}\r\n                     chargeday={chargeday}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"teacher\":\r\n         case \"secretary\":\r\n            return (\r\n               <>\r\n                  <StateInfo\r\n                     isAdmin={isAdmin}\r\n                     birthprov={birthprov}\r\n                     birthtown={birthtown}\r\n                     onChange={onChange}\r\n                  />\r\n                  <EmployeeInfo\r\n                     type={type}\r\n                     userType={userLogged.type}\r\n                     degree={degree}\r\n                     school={school}\r\n                     cbvu={cbvu}\r\n                     alias={alias}\r\n                     onChange={onChange}\r\n                  />\r\n               </>\r\n            );\r\n         case \"admin&teacher\":\r\n            return (\r\n               <EmployeeInfo\r\n                  type={type}\r\n                  userType={userLogged.type}\r\n                  cbvu={cbvu}\r\n                  alias={alias}\r\n                  onChange={onChange}\r\n               />\r\n            );\r\n         case \"guardian\":\r\n            return (\r\n               <TutorInfo\r\n                  isAdmin={isAdmin}\r\n                  setChildren={setChildren}\r\n                  children={children}\r\n                  clearProfile={clearProfile}\r\n                  clearSearch={clearSearch}\r\n                  setAlert={setAlert}\r\n               />\r\n            );\r\n         default:\r\n            break;\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\")\r\n                  registerUpdateUser(\r\n                     {\r\n                        ...formData,\r\n                        ...(type === \"guardian\" && {\r\n                           children: children.map((child) => child._id),\r\n                        }),\r\n                        ...(selectedFile && { img: previewSource }),\r\n                        ...(relatedCellphones.length > 0 && {\r\n                           relatedCellphones,\r\n                        }),\r\n                     },\r\n                     userLogged._id\r\n                  );\r\n               else setFormData((prev) => ({ ...prev, active: !active }));\r\n            }}\r\n            info={\r\n               popupType === \"save\"\r\n                  ? `¿Está seguro que desea ${\r\n                       _id !== \"0\"\r\n                          ? \"aplicar los cambios\"\r\n                          : \"registrar al nuevo usuario\"\r\n                    }?`\r\n                  : popupType === \"active\"\r\n                  ? {\r\n                       question: \"¿Está seguro que desea inactivar al usuario?\",\r\n                       info: `No se le permitirá el ingreso a la página${\r\n                          type === \"student\"\r\n                             ? \", se borrarán notas, asistencias, cuotas, inscripción y se lo quitará de la clase.\"\r\n                             : type === \"teacher\"\r\n                             ? \" y se borrarán todas las clases en las que está asignado como profesor.\"\r\n                             : \".\"\r\n                       }`,\r\n                    }\r\n                  : \"\"\r\n            }\r\n         />\r\n         <div>\r\n            <h2 className=\"mb-2\">\r\n               {_id === \"0\" ? <FaUserPlus /> : <FaUserEdit />}\r\n               &nbsp;\r\n               {isAdmin\r\n                  ? _id !== \"0\"\r\n                     ? \"Editar Usuario\"\r\n                     : \"Registrar Usuario Nuevo\"\r\n                  : \"Editar Imágen\"}\r\n            </h2>\r\n            {_id !== \"0\" && (\r\n               <div className=\"btn-right mb-3\">\r\n                  <Link\r\n                     to={`/user/credentials/${_id}`}\r\n                     className=\"btn btn-primary\"\r\n                     onClick={() => {\r\n                        window.scroll(0, 0);\r\n                     }}\r\n                  >\r\n                     <FaUnlock />\r\n                     &nbsp;Modificar credenciales\r\n                  </Link>\r\n               </div>\r\n            )}\r\n            <form\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"form register-user\"\r\n            >\r\n               <h3 className=\"heading-tertiary text-lighter-primary\">Datos:</h3>\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <select\r\n                           className=\"form-input\"\r\n                           name=\"type\"\r\n                           id=\"type\"\r\n                           disabled={!isAdmin}\r\n                           value={type}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\">\r\n                              * Seleccione el tipo de usuario\r\n                           </option>\r\n                           <option value=\"student\">Alumno</option>\r\n                           <option value=\"guardian\">Tutor</option>\r\n                           <option value=\"teacher\">Profesor</option>\r\n                           <option value=\"secretary\">Secretaria</option>\r\n                           {isOwner && (\r\n                              <>\r\n                                 <option value=\"admin\">Administrador</option>\r\n                                 <option value=\"admin&teacher\">\r\n                                    Admin/Profesor\r\n                                 </option>\r\n                              </>\r\n                           )}\r\n                        </select>\r\n                        <label\r\n                           htmlFor=\"type\"\r\n                           className={`form-label ${type === \"\" ? \"lbl\" : \"\"}`}\r\n                        >\r\n                           Tipo de usuario\r\n                        </label>\r\n                     </div>\r\n\r\n                     {type === \"student\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"number\"\r\n                              value={studentnumber}\r\n                              name=\"registerNumber\"\r\n                              id=\"registerNumber\"\r\n                              disabled\r\n                           />\r\n                           <label\r\n                              htmlFor=\"registerNumber\"\r\n                              className=\"form-label\"\r\n                           >\r\n                              Legajo\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n\r\n                     {isAdmin &&\r\n                        (type === \"student\" ||\r\n                           type === \"secretary\" ||\r\n                           type === \"teacher\") && (\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                 className=\"form-input\"\r\n                                 type=\"text\"\r\n                                 value={dni}\r\n                                 disabled={!isAdmin}\r\n                                 onChange={onChange}\r\n                                 name=\"dni\"\r\n                                 id=\"dni\"\r\n                                 placeholder=\"DNI\"\r\n                              />\r\n                              <label htmlFor=\"dni\" className=\"form-label\">\r\n                                 DNI\r\n                              </label>\r\n                           </div>\r\n                        )}\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     id=\"name\"\r\n                     className=\"form-input\"\r\n                     disabled={!isAdmin}\r\n                     value={name}\r\n                     onChange={onChange}\r\n                     placeholder=\"Nombre\"\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                     Nombre\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     id=\"lastname\"\r\n                     value={lastname}\r\n                     disabled={!isAdmin}\r\n                     onChange={onChange}\r\n                     placeholder=\"Apellido\"\r\n                  />\r\n                  <label htmlFor=\"lastname\" className=\"form-label\">\r\n                     Apellido\r\n                  </label>\r\n               </div>\r\n               {_id === \"0\" && (\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange={onChange}\r\n                        placeholder=\"Dirección de correo electrónico\"\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"form-label\">\r\n                        Dirección de correo electrónico\r\n                     </label>\r\n                  </div>\r\n               )}\r\n               {isAdmin && (\r\n                  <>\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"tel\"\r\n                           id=\"tel\"\r\n                           value={tel}\r\n                           onChange={onChange}\r\n                           placeholder=\"Teléfono\"\r\n                        />\r\n                        <label htmlFor=\"tel\" className=\"form-label\">\r\n                           Teléfono\r\n                        </label>\r\n                     </div>\r\n                     <div\r\n                        className={`form-group${\r\n                           type === \"student\" ? \"mb-0\" : \"\"\r\n                        }`}\r\n                     >\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"tel\"\r\n                           name=\"cel\"\r\n                           id=\"cel\"\r\n                           value={cel}\r\n                           onChange={onChange}\r\n                           placeholder={`Celular${\r\n                              type === \"student\" ? \" Propio\" : \"\"\r\n                           }`}\r\n                        />\r\n                        <label htmlFor=\"cel\" className=\"form-label\">\r\n                           Celular{type === \"student\" ? \" Propio\" : \"\"}\r\n                        </label>\r\n                     </div>\r\n                     {type === \"student\" && (\r\n                        <div className=\"btn-right\">\r\n                           <button\r\n                              className=\"btn btn-tertiary\"\r\n                              type=\"button\"\r\n                              onClick={newCellphone}\r\n                           >\r\n                              <FaPlus />\r\n                              <span className=\"hide-sm\">&nbsp;Celular</span>\r\n                           </button>\r\n                        </div>\r\n                     )}\r\n                     {relatedCellphones.length > 0 &&\r\n                        relatedCellphones.map((item, index) => (\r\n                           <div className=\"border mt-1\" key={index}>\r\n                              <div className=\"btn-right\">\r\n                                 <button\r\n                                    className=\"btn btn-cancel\"\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                       const newArray = [...relatedCellphones];\r\n                                       newArray.splice(index, 1);\r\n\r\n                                       setFormData((prev) => ({\r\n                                          ...prev,\r\n                                          relatedCellphones: newArray,\r\n                                       }));\r\n                                    }}\r\n                                 >\r\n                                    <FaTimes />\r\n                                 </button>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                 <div className=\"two-in-row\">\r\n                                    <select\r\n                                       className=\"form-input\"\r\n                                       name=\"relation\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.relation}\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    >\r\n                                       <option value=\"\">\r\n                                          * Seleccione la relación con el alumno\r\n                                       </option>\r\n                                       <option value=\"mother\">Mamá</option>\r\n                                       <option value=\"father\">Papá</option>\r\n                                       <option value=\"grandmother\">\r\n                                          Abuela\r\n                                       </option>\r\n                                       <option value=\"grandfather\">\r\n                                          Abuelo\r\n                                       </option>\r\n                                       <option value=\"aunt\">Tía</option>\r\n                                       <option value=\"uncle\">Tío</option>\r\n                                       <option value=\"sibling\">\r\n                                          Hermano/a\r\n                                       </option>\r\n                                       <option value=\"other\">Otro</option>\r\n                                    </select>\r\n                                    <input\r\n                                       className=\"form-input\"\r\n                                       type=\"text\"\r\n                                       name=\"name\"\r\n                                       id=\"relatedCellphones\"\r\n                                       value={item.name}\r\n                                       placeholder=\"Nombre\"\r\n                                       onChange={(e) => onChange(e, index)}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"two-in-row\">\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.relation === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Relación\r\n                                    </label>\r\n                                    <label\r\n                                       className={`form-label ${\r\n                                          item.name === \"\" ? \"lbl\" : \"\"\r\n                                       }`}\r\n                                    >\r\n                                       Nombre\r\n                                    </label>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"form-group mb-0\">\r\n                                 <input\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    name=\"cel\"\r\n                                    id=\"relatedCellphones\"\r\n                                    onChange={(e) => onChange(e, index)}\r\n                                    value={item.cel}\r\n                                    placeholder=\"Celular\"\r\n                                 />\r\n                                 <label\r\n                                    htmlFor=\"address\"\r\n                                    className=\"form-label\"\r\n                                 >\r\n                                    Celular\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                        ))}\r\n                     <div className=\"form-group my-3\">\r\n                        <div className=\"radio-group\" id=\"radio-group\">\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Femenino\"\r\n                              onChange={onChange}\r\n                              checked={sex === \"Femenino\"}\r\n                              name=\"sex\"\r\n                              id=\"rbf\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbf\">\r\n                              Femenino\r\n                           </label>\r\n                           <input\r\n                              className=\"form-radio\"\r\n                              type=\"radio\"\r\n                              value=\"Masculino\"\r\n                              onChange={onChange}\r\n                              name=\"sex\"\r\n                              checked={sex === \"Masculino\"}\r\n                              id=\"rbm\"\r\n                           />\r\n                           <label className=\"radio-lbl\" htmlFor=\"rbm\">\r\n                              Masculino\r\n                           </label>\r\n                        </div>\r\n                        <label\r\n                           htmlFor=\"radio-group\"\r\n                           className=\"form-label-show\"\r\n                        >\r\n                           Seleccione el sexo\r\n                        </label>\r\n                     </div>\r\n                     {type !== \"guardian\" && (\r\n                        <div className=\"form-group\">\r\n                           <input\r\n                              className=\"form-input\"\r\n                              type=\"date\"\r\n                              value={dob}\r\n                              onChange={onChange}\r\n                              max={`${new Date().getFullYear()}-01-01`}\r\n                              name=\"dob\"\r\n                              id=\"dob\"\r\n                           />\r\n                           <label htmlFor=\"dob\" className=\"form-label-show\">\r\n                              Fecha de nacimiento\r\n                           </label>\r\n                        </div>\r\n                     )}\r\n                     <div className=\"form-group\">\r\n                        <input\r\n                           className=\"form-input\"\r\n                           type=\"text\"\r\n                           value={address}\r\n                           onChange={onChange}\r\n                           name=\"address\"\r\n                           id=\"address\"\r\n                           placeholder=\"Dirección\"\r\n                        />\r\n                        <label htmlFor=\"address\" className=\"form-label\">\r\n                           Dirección\r\n                        </label>\r\n                     </div>\r\n                     <div className={isOwner ? \"border mb-4\" : \"\"}>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"town\"\r\n                              id=\"town\"\r\n                              value={town}\r\n                              onChange={onChange}\r\n                           >\r\n                              <option value=\"\">\r\n                                 * Seleccione localidad donde vive\r\n                              </option>\r\n                              {!loadingTowns &&\r\n                                 towns.map((town) => (\r\n                                    <option key={town._id} value={town._id}>\r\n                                       {town.name}\r\n                                    </option>\r\n                                 ))}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"town\"\r\n                              className={`form-label ${\r\n                                 town === \"\" || town === 0 ? \"lbl\" : \"\"\r\n                              }`}\r\n                           >\r\n                              Localidad donde vive\r\n                           </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                           <select\r\n                              className=\"form-input\"\r\n                              name=\"neighbourhood\"\r\n                              id=\"neighbourhood\"\r\n                              value={neighbourhood}\r\n                              onChange={onChange}\r\n                           >\r\n                              {!loading ? (\r\n                                 <>\r\n                                    {neighbourhoods.length === 0 ? (\r\n                                       <option value=\"\">\r\n                                          Dicha localidad no tiene barrios\r\n                                          adheridos\r\n                                       </option>\r\n                                    ) : (\r\n                                       <>\r\n                                          <option value=\"\">\r\n                                             * Seleccione barrio donde vive\r\n                                          </option>\r\n                                          {neighbourhoods.map(\r\n                                             (neighbourhood) => (\r\n                                                <option\r\n                                                   key={neighbourhood._id}\r\n                                                   value={neighbourhood._id}\r\n                                                >\r\n                                                   {neighbourhood.name}\r\n                                                </option>\r\n                                             )\r\n                                          )}\r\n                                       </>\r\n                                    )}\r\n                                 </>\r\n                              ) : (\r\n                                 <option value=\"\">\r\n                                    Seleccione primero una localidad\r\n                                 </option>\r\n                              )}\r\n                           </select>\r\n                           <label\r\n                              htmlFor=\"neighbourhood\"\r\n                              className={`form-label ${\r\n                                 neighbourhood === \"\" || neighbourhood === 0\r\n                                    ? \"lbl\"\r\n                                    : \"\"\r\n                              }`}\r\n                           >\r\n                              Barrio donde vive\r\n                           </label>\r\n                        </div>\r\n                        {isOwner && (\r\n                           <div className=\"btn-right\">\r\n                              <div className=\"tooltip\">\r\n                                 <Link\r\n                                    to=\"/user/towns-neighbourhoods/edit\"\r\n                                    className=\"btn btn-mix-secondary\"\r\n                                    onClick={() => {\r\n                                       window.scroll(0, 0);\r\n                                       clearNeighbourhoods();\r\n                                       clearTowns();\r\n                                    }}\r\n                                 >\r\n                                    <FaEdit />\r\n                                 </Link>\r\n                                 <span className=\"tooltiptext\">\r\n                                    Editar localidades y/o barrios\r\n                                 </span>\r\n                              </div>\r\n                           </div>\r\n                        )}\r\n                     </div>\r\n                     {changeType()}\r\n                  </>\r\n               )}\r\n\r\n               {_id !== \"0\" && isAdmin && (\r\n                  <div className=\"form-group my-3\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        onChange={(e) => {\r\n                           if (!e.target.checked) {\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"active\",\r\n                              }));\r\n                              togglePopup(\"active\");\r\n                           } else\r\n                              setFormData((prev) => ({\r\n                                 ...prev,\r\n                                 active: !active,\r\n                              }));\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        checked={active}\r\n                        name=\"active\"\r\n                        id=\"active\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"active\">\r\n                        {active ? \"Activo\" : \"Inactivo\"}\r\n                     </label>\r\n                  </div>\r\n               )}\r\n\r\n               {_id !== \"0\" && (\r\n                  <>\r\n                     <div className=\"text-center mt-3\">\r\n                        <img\r\n                           className=\"round-img\"\r\n                           src={\r\n                              previewSource\r\n                                 ? previewSource\r\n                                 : img.url !== \"\"\r\n                                 ? img.url\r\n                                 : \"https://pngimage.net/wp-content/uploads/2018/06/no-user-image-png-3-300x200.png\"\r\n                           }\r\n                           alt=\"chosen img\"\r\n                        />\r\n                     </div>\r\n                     <div className=\"upl-img my-5\">\r\n                        <div\r\n                           className={`fileUpload ${\r\n                              fileInputState ? \"success\" : \"\"\r\n                           }`}\r\n                        >\r\n                           <input\r\n                              id=\"fileInput\"\r\n                              type=\"file\"\r\n                              name=\"image\"\r\n                              onChange={(e) => onChangeImg(e)}\r\n                              className=\"upload\"\r\n                           />\r\n                           <span>\r\n                              <FaCloudUploadAlt />\r\n                              &nbsp;Subir imágen\r\n                           </span>\r\n                        </div>\r\n                     </div>\r\n                  </>\r\n               )}\r\n\r\n               <div className=\"btn-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                     {_id !== \"0\" ? <FaUserEdit /> : <FaUserPlus />}\r\n                     &nbsp;{_id !== \"0\" ? \"Guardar Cambios\" : \"Registrar\"}\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   auth: state.auth,\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateUser,\r\n   loadUser,\r\n   loadTowns,\r\n   loadNeighbourhoods,\r\n   getStudentNumber,\r\n   setAlert,\r\n   clearNeighbourhoods,\r\n   clearTowns,\r\n   clearProfile,\r\n   clearSearch,\r\n   togglePopup,\r\n})(RegisterUser);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RestTable = ({\r\n   loadingUsers,\r\n   users,\r\n   type,\r\n   userSearchType,\r\n   clearProfile,\r\n   clearClasses,\r\n}) => {\r\n   const userType = {\r\n      secretary: \"Secretaria\",\r\n      admin: \"Administrador\",\r\n      \"admin&teacher\": \"Admin y Profesor\",\r\n   };\r\n\r\n   return (\r\n      <table>\r\n         <thead>\r\n            <tr>\r\n               <th>Nombre</th>\r\n               <th className=\"hide-sm\">Email</th>\r\n               <th>Celular</th>\r\n               {type !== \"guardian\" && <th className=\"hide-sm\">Fecha Nac.</th>}\r\n               {type === \"admin\" && <th>Rol</th>}\r\n               {type === \"guardian\" && <th>Nombre Alumno</th>}\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {!loadingUsers &&\r\n               type === userSearchType &&\r\n               users.map((user) => (\r\n                  <tr key={user._id}>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn-text\"\r\n                           to={`/index/dashboard/${user._id}`}\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearProfile();\r\n                              if (type === \"teacher\") clearClasses();\r\n                           }}\r\n                        >\r\n                           {user.lastname}, {user.name}\r\n                        </Link>\r\n                     </td>\r\n                     <td className=\"hide-sm email\">\r\n                        {user.email && user.email}\r\n                     </td>\r\n                     <td>{user.cel}</td>\r\n                     {userSearchType !== \"guardian\" && (\r\n                        <td className=\"hide-sm\">\r\n                           {user.dob &&\r\n                              format(new Date(user.dob.slice(0, -1)), \"dd/MM\")}\r\n                        </td>\r\n                     )}\r\n                     {type === \"admin\" && <td>{userType[user.type]}</td>}\r\n                     {type === \"guardian\" && user.children[0] && (\r\n                        <td>\r\n                           {user.children[0].lastname +\r\n                              \", \" +\r\n                              user.children[0].name}\r\n                        </td>\r\n                     )}\r\n                  </tr>\r\n               ))}\r\n         </tbody>\r\n      </table>\r\n   );\r\n};\r\n\r\nexport default RestTable;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport {\r\n   clearProfile,\r\n   loadUsers,\r\n   userPDF,\r\n} from \"../../../../../../actions/user\";\r\nimport { clearClasses } from \"../../../../../../actions/class\";\r\n\r\nimport StudentTable from \"../../../sharedComp/tables/StudentTable\";\r\nimport RestTable from \"../../../sharedComp/tables/RestTable\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst SearchTab = ({\r\n   users: {\r\n      users,\r\n      loadingUsers,\r\n      otherValues: { userSearchType },\r\n   },\r\n   categories: { categories, loading },\r\n   typeF,\r\n   loadUsers,\r\n   clearProfile,\r\n   clearClasses,\r\n   userPDF,\r\n}) => {\r\n   const searchType = {\r\n      Alumnos: \"student\",\r\n      Tutores: \"guardian\",\r\n      Profesores: \"teacher\",\r\n      Administradores: \"admin\",\r\n   };\r\n\r\n   const type = searchType[typeF];\r\n\r\n   const [filterForm, setFilterForm] = useState({\r\n      name: \"\",\r\n      lastname: \"\",\r\n      active: true,\r\n      category: \"\",\r\n      studentname: \"\",\r\n      studentlastname: \"\",\r\n   });\r\n\r\n   const { name, lastname, active, category, studentlastname, studentname } =\r\n      filterForm;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterForm({\r\n         ...filterForm,\r\n         [e.target.name]:\r\n            e.target.name === \"active\" ? e.target.checked : e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadUsers({ ...filterForm, type, searchTab: true }, true, true);\r\n            }}\r\n         >\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnameAttribute=\"lastname\"\r\n               nameAttribute=\"name\"\r\n               lastnamePlaceholder=\"Apellido\"\r\n               namePlaceholder=\"Nombre\"\r\n            />\r\n            {type === \"student\" && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     value={category}\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loading &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n            )}\r\n            {type === \"guardian\" && (\r\n               <NameField\r\n                  name={studentname}\r\n                  lastname={studentlastname}\r\n                  nameAttribute=\"studentname\"\r\n                  lastnameAttribute=\"studentlastname\"\r\n                  namePlaceholder=\"Nombre Alumno\"\r\n                  lastnamePlaceholder=\"Apellido Alumno\"\r\n                  onChange={onChange}\r\n               />\r\n            )}\r\n            <div className=\"form-group mt-1\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChange}\r\n                  type=\"checkbox\"\r\n                  checked={active}\r\n                  name=\"active\"\r\n                  id={`cb${type}`}\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor={`cb${type}`}>\r\n                  {active ? \"Activos\" : \"Inactivos\"}\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            {type === \"student\" ? (\r\n               <StudentTable\r\n                  clearProfile={clearProfile}\r\n                  type=\"search\"\r\n                  userSearchType={userSearchType}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n               />\r\n            ) : (\r\n               <RestTable\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={loadingUsers}\r\n                  users={users}\r\n                  type={type}\r\n                  clearClasses={clearClasses}\r\n                  userSearchType={userSearchType}\r\n               />\r\n            )}\r\n         </div>\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     userPDF(users, userSearchType);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de alumnos</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadUsers,\r\n   userPDF,\r\n   clearProfile,\r\n   clearClasses,\r\n})(SearchTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\nimport { clearTowns } from \"../../../../actions/town\";\r\nimport { loadCategories } from \"../../../../actions/category\";\r\nimport { clearUser, clearSearch, clearUsers } from \"../../../../actions/user\";\r\n\r\nimport Tabs from \"../sharedComp/Tabs\";\r\nimport SearchTab from \"./tabs/SearchTab\";\r\n\r\nconst Search = ({\r\n   auth: { userLogged },\r\n   categories: { loading },\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n}) => {\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" ||\r\n      userLogged.type === \"secretary\" ||\r\n      userLogged.type === \"admin&teacher\";\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loadCategories, loading]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Búsqueda</h1>\r\n         {isAdmin && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/user/edit/0\"\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearUsers();\r\n                     clearTowns();\r\n                     clearSearch();\r\n                     clearUser();\r\n                  }}\r\n               >\r\n                  <FaUserPlus />\r\n                  <span className=\"hide-sm\">&nbsp; Registrar Usuario</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <div className=\"few-tabs\">\r\n            <Tabs\r\n               tablist={[\"Alumnos\", \"Tutores\", \"Profesores\", \"Administradores\"]}\r\n               panellist={[SearchTab, SearchTab, SearchTab, SearchTab]}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearUsers,\r\n   clearUser,\r\n   clearTowns,\r\n   clearSearch,\r\n   loadCategories,\r\n})(Search);\r\n","import format from \"date-fns/format\";\r\nimport api from \"../utils/api\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport {\r\n   filterData,\r\n   newObject,\r\n   updateLoadingSpinner,\r\n   setError,\r\n} from \"./global\";\r\nimport { clearRegister } from \"./register\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n   TRANSACTIONS_LOADED,\r\n   EXPENCETYPES_LOADED,\r\n   EXPENCE_REGISTERED,\r\n   EXPENCE_DELETED,\r\n   EXPENCETYPES_UPDATED,\r\n   EXPENCETYPE_DELETED,\r\n   TRANSACTIONS_CLEARED,\r\n   EXPENCE_CLEARED,\r\n   EXPENCETYPES_CLEARED,\r\n   EXPENCE_ERROR,\r\n   EXPENCETYPE_ERROR,\r\n   TRANSACTIONS_ERROR,\r\n   REGISTER_LOADED,\r\n} from \"./types\";\r\n\r\nexport const loadTransactions = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadWithdrawals = (formData, spinner) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.get(`/expence/withdrawal?${filterData(formData)}`);\r\n      dispatch({\r\n         type: TRANSACTIONS_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(TRANSACTIONS_ERROR, err.response));\r\n         if (spinner) dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         window.scroll(0, 0);\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error && spinner) dispatch(updateLoadingSpinner(false));\r\n};\r\n\r\nexport const loadExpenceTypes = (spinner, expenceType) => async (dispatch) => {\r\n   if (spinner) dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n   try {\r\n      const res = await api.get(\r\n         `/expence-type${!expenceType ? \"/withdrawal\" : \"\"}`\r\n      );\r\n      dispatch({\r\n         type: EXPENCETYPES_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      if (err.response.status !== 401)\r\n         dispatch(setError(EXPENCETYPE_ERROR, err.response));\r\n      else error = true;\r\n   }\r\n\r\n   if (!error && spinner) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\n//Update or register a user\r\nexport const registerExpence =\r\n   (formData, register, type) => async (dispatch) => {\r\n      dispatch(updateLoadingSpinner(true));\r\n      let error = false;\r\n\r\n      let expence = newObject(formData);\r\n\r\n      try {\r\n         await api.post(\"/expence\", expence);\r\n\r\n         dispatch({\r\n            type: EXPENCE_REGISTERED,\r\n         });\r\n\r\n         const value =\r\n            typeof expence.value === \"string\"\r\n               ? Number(expence.value.replace(/,/g, \".\"))\r\n               : expence.value;\r\n\r\n         dispatch({\r\n            type: REGISTER_LOADED,\r\n            payload: {\r\n               ...register,\r\n               [type]: register[type] + value,\r\n               registermoney: register.registermoney - value,\r\n            },\r\n         });\r\n\r\n         dispatch(setAlert(\"Gasto/Ingreso Registrado\", \"success\", \"2\"));\r\n      } catch (err) {\r\n         if (err.response.status !== 401) {\r\n            dispatch(setError(EXPENCE_ERROR, err.response));\r\n\r\n            if (err.response.data.errors)\r\n               err.response.data.errors.forEach((error) => {\r\n                  dispatch(setAlert(error.msg, \"danger\", \"2\"));\r\n               });\r\n            else dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n         } else error = true;\r\n      }\r\n\r\n      if (!error) {\r\n         window.scrollTo(0, 0);\r\n         dispatch(updateLoadingSpinner(false));\r\n      }\r\n   };\r\n\r\nexport const deleteExpence = (expence_id) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence/${expence_id}`);\r\n\r\n      dispatch({\r\n         type: EXPENCE_DELETED,\r\n         payload: expence_id,\r\n      });\r\n\r\n      dispatch(setAlert(\"Movimiento Eliminado\", \"success\", \"2\"));\r\n\r\n      dispatch(clearRegister());\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const updateExpenceTypes = (formData) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      const res = await api.post(\"/expence-type\", formData);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPES_UPDATED,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipos de Movimientos Modificados\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const deleteExpenceType = (toDelete) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      await api.delete(`/expence-type/${toDelete}`);\r\n\r\n      dispatch({\r\n         type: EXPENCETYPE_DELETED,\r\n         payload: toDelete,\r\n      });\r\n\r\n      dispatch(setAlert(\"Tipo de Gasto Eliminado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const transactionsPDF = (transactions, total) => async (dispatch) => {\r\n   dispatch(updateLoadingSpinner(true));\r\n   let error = false;\r\n\r\n   try {\r\n      if (total)\r\n         await api.post(\"/pdf/expence/withdrawal-list\", {\r\n            transactions,\r\n            total,\r\n         });\r\n      else await api.post(\"/pdf/expence/list\", transactions);\r\n\r\n      const pdf = await api.get(\"/pdf/expence/fetch\", {\r\n         responseType: \"blob\",\r\n      });\r\n\r\n      const pdfBlob = new Blob([pdf.data], { type: \"application/pdf\" });\r\n\r\n      saveAs(pdfBlob, `Movimientos ${format(new Date(), \"dd-MM-yy\")}.pdf`);\r\n\r\n      dispatch(setAlert(\"PDF Generado\", \"success\", \"2\"));\r\n   } catch (err) {\r\n      if (err.response.status !== 401) {\r\n         dispatch(setError(EXPENCE_ERROR, err.response));\r\n         dispatch(setAlert(err.response.data.msg, \"danger\", \"2\"));\r\n      } else error = true;\r\n   }\r\n\r\n   if (!error) {\r\n      window.scrollTo(0, 0);\r\n      dispatch(updateLoadingSpinner(false));\r\n   }\r\n};\r\n\r\nexport const clearExpenceTypes = () => (dispatch) => {\r\n   dispatch({ type: EXPENCETYPES_CLEARED });\r\n};\r\n\r\nexport const clearExpence = () => (dispatch) => {\r\n   dispatch({ type: EXPENCE_CLEARED });\r\n};\r\n\r\nexport const clearTransactions = () => (dispatch) => {\r\n   dispatch({ type: TRANSACTIONS_CLEARED });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   clearRegisters,\r\n   closeRegister,\r\n   createRegister,\r\n   deleteRegister,\r\n} from \"../../../../../../../actions/register\";\r\nimport { clearInvoices } from \"../../../../../../../actions/invoice\";\r\nimport {\r\n   clearTransactions,\r\n   clearExpenceTypes,\r\n} from \"../../../../../../../actions/expence\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterTab = ({\r\n   registers: { register },\r\n   auth: { userLogged },\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   deleteRegister,\r\n   togglePopup,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      difference: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { difference, description } = formData;\r\n\r\n   const { popupType } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type !== \"checkbox\" ? e.target.value : e.target.checked,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <div className=\"register register-tab\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"close\") {\r\n                  if (!register) createRegister({ difference, description });\r\n                  else closeRegister(formData);\r\n               } else {\r\n                  deleteRegister(register._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"close\" ? \"cerrar\" : \"reabrir\"\r\n            } la caja?`}\r\n         />\r\n         <form className=\"form\">\r\n            <table>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>Ingresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.income\r\n                           ? formatNumber(register.income)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearInvoices();\r\n                           }}\r\n                           to=\"/register/income/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Egresos</td>\r\n                     <td>\r\n                        $\r\n                        {register && register.temporary && register.expence\r\n                           ? formatNumber(register.expence)\r\n                           : 0}\r\n                     </td>\r\n                     <td>\r\n                        <Link\r\n                           className=\"btn btn-light\"\r\n                           onClick={() => {\r\n                              window.scroll(0, 0);\r\n                              clearTransactions();\r\n                              clearExpenceTypes();\r\n                           }}\r\n                           to=\"/register/transaction/list\"\r\n                        >\r\n                           <IoIosListBox />\r\n                           <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                        </Link>\r\n                     </td>\r\n                  </tr>\r\n                  {isAdmin && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Retiro de Dinero</td>\r\n                           <td>\r\n                              $\r\n                              {register &&\r\n                              register.temporary &&\r\n                              register.withdrawal\r\n                                 ? formatNumber(register.withdrawal)\r\n                                 : 0}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/withdrawal/list\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearTransactions();\r\n                                    clearExpenceTypes();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Listado</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Plata Caja</td>\r\n                           <td>\r\n                              $\r\n                              {register && formatNumber(register.registermoney)}\r\n                           </td>\r\n                           <td>\r\n                              <Link\r\n                                 to=\"/register/list\"\r\n                                 onClick={() => {\r\n                                    window.scroll(0, 0);\r\n                                    clearRegisters();\r\n                                 }}\r\n                                 className=\"btn btn-light\"\r\n                              >\r\n                                 <IoIosListBox />\r\n                                 <span className=\"hide-sm\">&nbsp;Cierres</span>\r\n                              </Link>\r\n                           </td>\r\n                        </tr>\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>{!register ? \"Dinero Inicial\" : \"Diferencia\"}</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"difference\"\r\n                           disabled={register && !register.temporary}\r\n                           value={difference}\r\n                           onChange={onChange}\r\n                           placeholder={\r\n                              !register ? \"Dinero Inicial\" : \"Diferencia\"\r\n                           }\r\n                        />\r\n                     </td>\r\n                     <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Detalles</td>\r\n                     <td colSpan=\"2\">\r\n                        <textarea\r\n                           cols=\"30\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                           disabled={register && !register.temporary}\r\n                           name=\"description\"\r\n                           rows=\"4\"\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n            <div className=\"btn-center\">\r\n               {register && !register.temporary ? (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"reopen\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     className=\"btn btn-secondary\"\r\n                  >\r\n                     <FaTimes />\r\n                     <span className=\"hide-sm\">&nbsp; Reabrir Caja</span>\r\n                  </button>\r\n               ) : (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={() => {\r\n                        setAdminValues((prev) => ({\r\n                           ...prev,\r\n                           popupType: \"close\",\r\n                        }));\r\n                        togglePopup(\"default\");\r\n                     }}\r\n                     disabled={!register && difference === \"\"}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <FiSave />\r\n                     <span className=\"hide-sm\">&nbsp; Cerrar Caja</span>\r\n                  </button>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   closeRegister,\r\n   createRegister,\r\n   clearInvoices,\r\n   clearTransactions,\r\n   clearRegisters,\r\n   clearExpenceTypes,\r\n   deleteRegister,\r\n   togglePopup,\r\n})(RegisterTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport {\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n} from \"../../../../../../../actions/expence\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n   updateSalaries,\r\n} from \"../../../../../../../actions/global\";\r\nimport { getTeacherHours } from \"../../../../../../../actions/class\";\r\n\r\nimport PopUp from \"../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ExpenceTab = ({\r\n   auth: { userLogged },\r\n   registers: { register },\r\n   expences: { expencetypes },\r\n   users: { users },\r\n   global: { salaries },\r\n   classes: {\r\n      otherValues: { teacherHours },\r\n   },\r\n   clearExpenceTypes,\r\n   registerExpence,\r\n   updateSalaries,\r\n   getTeacherHours,\r\n   togglePopup,\r\n}) => {\r\n   const employeePaymentID = \"5fe813b999e13c3f807a0d79\";\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const [formData, setFormData] = useState({\r\n      expencetype: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      highHours: \"\",\r\n      lowHours: \"\",\r\n      teacher: {},\r\n      type: \"\",\r\n      popupType: \"\",\r\n   });\r\n\r\n   const { expencetype, value, description } = formData;\r\n\r\n   const { highHours, lowHours, teacher, type, popupType } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData({\r\n         expencetype: \"\",\r\n         value: \"\",\r\n         description: \"\",\r\n      });\r\n      setAdminValues({\r\n         highHours: \"\",\r\n         lowHours: \"\",\r\n         teacher: {},\r\n         type: \"\",\r\n      });\r\n   }, [register]);\r\n\r\n   useEffect(() => {\r\n      if (teacher._id && teacher.type !== \"secretary\")\r\n         getTeacherHours(teacher._id);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            highHours: \"\",\r\n            lowHours: \"\",\r\n         }));\r\n         setFormData((prev) => ({ ...prev, value: \"\" }));\r\n      }\r\n   }, [teacher, getTeacherHours]);\r\n\r\n   useEffect(() => {\r\n      if (teacherHours.lowHours !== undefined) {\r\n         setAdminValues((prev) => {\r\n            for (const x in teacherHours) prev[x] = teacherHours[x];\r\n            return prev;\r\n         });\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            value:\r\n               teacherHours.lowHours * salaries.lowerSalary +\r\n               teacherHours.highHours * salaries.higherSalary,\r\n         }));\r\n      }\r\n   }, [teacherHours, salaries]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      if (e.target.name === \"expencetype\")\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            type: e.target.options[e.target.selectedIndex].getAttribute(\"name\"),\r\n         }));\r\n   };\r\n\r\n   const onChangeAdmin = (e) => {\r\n      e.persist();\r\n\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         [e.target.name]:\r\n            e.target.name !== \"teacher\"\r\n               ? e.target.value\r\n               : e.target.value !== \"\"\r\n               ? users.find((user) => user._id === e.target.value)\r\n               : {},\r\n      }));\r\n\r\n      if (e.target.name === \"highHours\" || e.target.name === \"lowHours\") {\r\n         let value = 0;\r\n         if (teacher.type === \"secretary\")\r\n            value = e.target.value * salaries.adminSalary;\r\n         else {\r\n            if (e.target.name === \"highHours\")\r\n               value =\r\n                  e.target.value * salaries.higherSalary +\r\n                  (lowHours !== \"\" ? lowHours * salaries.lowerSalary : 0);\r\n            else\r\n               value =\r\n                  e.target.value * salaries.lowerSalary +\r\n                  (highHours !== \"\" ? highHours * salaries.higherSalary : 0);\r\n         }\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            value,\r\n         }));\r\n      }\r\n   };\r\n\r\n   const confirm = async () => {\r\n      await registerExpence(\r\n         {\r\n            expencetype,\r\n            value,\r\n            teacher,\r\n            description,\r\n         },\r\n         register,\r\n         type\r\n      );\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={\r\n               popupType === \"save\"\r\n                  ? confirm\r\n                  : (allSalaries) => updateSalaries(allSalaries)\r\n            }\r\n            info={\r\n               popupType === \"save\"\r\n                  ? \"¿Está seguro que desea registrar un nuevo movimiento?\"\r\n                  : { salaries }\r\n            }\r\n            error={popupType === \"salary\"}\r\n         />\r\n         {!register && (\r\n            <p className=\"bg-secondary paragraph mb-3 p-2\">\r\n               Debe ingresar dinero en la caja para registrar un nuevo\r\n               Movimiento\r\n            </p>\r\n         )}\r\n\r\n         {isAdmin && employeePaymentID === expencetype && (\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  onClick={() => {\r\n                     setAdminValues((prev) => ({\r\n                        ...prev,\r\n                        popupType: \"salary\",\r\n                     }));\r\n                     togglePopup(\"salary\");\r\n                  }}\r\n                  className=\"btn btn-mix-secondary\"\r\n                  type=\"button\"\r\n               >\r\n                  <FaEdit /> &nbsp; Salarios\r\n               </button>\r\n            </div>\r\n         )}\r\n\r\n         <form\r\n            className=\"register income-tab\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n\r\n               if (register) {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }\r\n            }}\r\n         >\r\n            <table>\r\n               <tbody>\r\n                  {(isAdmin ||\r\n                     (register && register.registermoney <= 50000)) && (\r\n                     <tr>\r\n                        <td>Dinero en Caja</td>\r\n                        <td>\r\n                           $\r\n                           {register ? formatNumber(register.registermoney) : 0}\r\n                        </td>\r\n                     </tr>\r\n                  )}\r\n\r\n                  <tr>\r\n                     <td>Tipo de {isAdmin ? \"Movimiento\" : \"Gasto\"}</td>\r\n                     <td>\r\n                        <select\r\n                           name=\"expencetype\"\r\n                           value={expencetype}\r\n                           onChange={onChange}\r\n                        >\r\n                           <option value=\"\" name=\"\">\r\n                              * Tipo de {isAdmin ? \"Movimiento\" : \"Gasto\"}\r\n                           </option>\r\n                           {expencetypes.map(\r\n                              (expty) =>\r\n                                 ((!isAdmin && expty.type === \"expence\") ||\r\n                                    isAdmin) && (\r\n                                    <option\r\n                                       key={expty._id}\r\n                                       name={expty.type}\r\n                                       value={expty._id}\r\n                                    >\r\n                                       {expty.name}\r\n                                    </option>\r\n                                 )\r\n                           )}\r\n                        </select>\r\n                     </td>\r\n                  </tr>\r\n                  {expencetype === employeePaymentID && (\r\n                     <>\r\n                        <tr>\r\n                           <td>Empleado</td>\r\n                           <td>\r\n                              <select\r\n                                 name=\"teacher\"\r\n                                 value={teacher._id ? teacher._id : \"\"}\r\n                                 onChange={onChangeAdmin}\r\n                              >\r\n                                 <option value=\"\">* Empleado</option>\r\n                                 {users.map((user) => (\r\n                                    <React.Fragment key={user._id}>\r\n                                       <option value={user._id}>\r\n                                          {user.lastname}, {user.name}\r\n                                       </option>\r\n                                    </React.Fragment>\r\n                                 ))}\r\n                              </select>\r\n                           </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>\r\n                              Horas\r\n                              {teacher.type !== \"secretary\"\r\n                                 ? \" Cursos Bajos\"\r\n                                 : \"\"}\r\n                           </td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 onChange={onChangeAdmin}\r\n                                 placeholder={`Horas${\r\n                                    teacher.type !== \"secretary\"\r\n                                       ? \" Cursos Bajos\"\r\n                                       : \"\"\r\n                                 }`}\r\n                                 value={lowHours}\r\n                                 name=\"lowHours\"\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                        {teacher.type !== \"secretary\" && (\r\n                           <tr>\r\n                              <td>Horas Cursos Altos</td>\r\n                              <td>\r\n                                 <input\r\n                                    type=\"number\"\r\n                                    onChange={onChangeAdmin}\r\n                                    placeholder=\"Horas Cursos Altos\"\r\n                                    value={highHours}\r\n                                    name=\"highHours\"\r\n                                 />\r\n                              </td>\r\n                           </tr>\r\n                        )}\r\n                     </>\r\n                  )}\r\n                  <tr>\r\n                     <td>Importe</td>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           placeholder=\"Importe\"\r\n                           name=\"value\"\r\n                           onChange={onChange}\r\n                           value={value}\r\n                        />\r\n                     </td>\r\n                  </tr>\r\n                  <tr>\r\n                     <td>Descripción</td>\r\n                     <td>\r\n                        <textarea\r\n                           placeholder=\"Descripción\"\r\n                           name=\"description\"\r\n                           value={description}\r\n                           onChange={onChange}\r\n                        ></textarea>\r\n                     </td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n\r\n            <div className=\"btn-center pt-3\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${register ? \"btn-primary\" : \"btn-black\"}`}\r\n                  disabled={!register}\r\n               >\r\n                  <FiSave />\r\n                  <span className=\"hide-sm\">&nbsp; Guardar</span>\r\n               </button>\r\n\r\n               {isAdmin && (\r\n                  <div className=\"tooltip\">\r\n                     <Link\r\n                        to=\"/register/expencetypes/edit\"\r\n                        onClick={() => {\r\n                           window.scroll(0, 0);\r\n                           clearExpenceTypes();\r\n                        }}\r\n                        className=\"btn btn-mix-secondary\"\r\n                     >\r\n                        <FaEdit />\r\n                        <span className=\"hide-sm\">&nbsp; Tipo Movimiento</span>\r\n                     </Link>\r\n                     <span className=\"tooltiptext\">Editar</span>\r\n                  </div>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n   classes: state.classes,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerExpence,\r\n   clearExpenceTypes,\r\n   togglePopup,\r\n   updateSalaries,\r\n   getTeacherHours,\r\n})(ExpenceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaCalendarDay } from \"react-icons/fa\";\r\nimport es from \"date-fns/locale/es\";\r\n\r\nimport { loadRegister } from \"../../../../../actions/register\";\r\nimport { loadExpenceTypes } from \"../../../../../actions/expence\";\r\nimport { loadUsers } from \"../../../../../actions/user\";\r\nimport { loadSalaries } from \"../../../../../actions/global\";\r\n\r\nimport Tabs from \"../../sharedComp/Tabs\";\r\nimport RegisterTab from \"./tabs/RegisterTab\";\r\nimport ExpenceTab from \"./tabs/ExpenceTab\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst RegisterInfo = ({\r\n   registers: { register, loadingRegister },\r\n   expences: { loadingET, expencetypes },\r\n   users: { loading },\r\n   global: { loading: loadingSalaries },\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n   loadSalaries,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loadingET || expencetypes.length < 4) loadExpenceTypes(false, true);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(true);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadUsers({ active: true, type: \"team\" }, false, true);\r\n   }, [loading, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingSalaries) loadSalaries();\r\n   }, [loadingSalaries, loadSalaries]);\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"text-center\">Caja</h1>\r\n         {!loadingRegister && !loadingET && !loading && !loadingSalaries && (\r\n            <>\r\n               <h3 className=\"heading-tertiary my-4 text-dark\">\r\n                  <FaCalendarDay />\r\n                  &nbsp;\r\n                  {format(\r\n                     register.temporary ? new Date(register.date) : new Date(),\r\n                     \"EEEE, do 'de' LLLL 'de' yyyy\",\r\n                     { locale: es }\r\n                  )}\r\n               </h3>\r\n               <Tabs\r\n                  tablist={[\"Caja Diaria\", \"Egreso\"]}\r\n                  panellist={[RegisterTab, ExpenceTab]}\r\n               />\r\n            </>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   registers: state.registers,\r\n   expences: state.expences,\r\n   users: state.users,\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadRegister,\r\n   loadExpenceTypes,\r\n   loadUsers,\r\n   loadSalaries,\r\n})(RegisterInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { addMonths, format } from \"date-fns\";\r\n\r\nimport {\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n} from \"../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Categories = ({\r\n   categories: { categories, loading },\r\n   togglePopup,\r\n   loadCategories,\r\n   updateCategories,\r\n   categoriesPDF,\r\n}) => {\r\n   const min = format(addMonths(new Date(), 1), \"yyyy-MM\");\r\n   const max = format(addMonths(new Date(), 4), \"yyyy-MM\");\r\n\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      date: \"\",\r\n   });\r\n\r\n   const { date } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(true);\r\n      else setFormData(categories);\r\n   }, [loadCategories, loading, categories]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newValue = [...formData];\r\n      newValue[index] = {\r\n         ...newValue[index],\r\n         value: e.target.value,\r\n      };\r\n      setFormData(newValue);\r\n   };\r\n\r\n   const onChangeMonth = (e) => {\r\n      e.persist();\r\n      setAdminValues({\r\n         ...adminValues,\r\n         date: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Categorías y Precios</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n            confirm={() => updateCategories({ categories: formData, date })}\r\n         />\r\n         <div className=\"form \">\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  id=\"date\"\r\n                  type=\"month\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  onChange={onChangeMonth}\r\n                  min={min}\r\n                  max={max}\r\n               />\r\n               <label htmlFor=\"date\" className=\"form-label show\">\r\n                  Seleccione el mes desde el cual correrá el aumento de precio.\r\n               </label>\r\n            </div>\r\n         </div>\r\n\r\n         {!loading && (\r\n            <table className=\"smaller category\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.length > 0 &&\r\n                     formData.map((category, index) => (\r\n                        <tr key={index}>\r\n                           <td>{category.name}</td>\r\n                           <td>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name={`value${index}`}\r\n                                 value={category.value}\r\n                                 placeholder=\"Valor\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         )}\r\n\r\n         <div className=\"btn-right p-2\">\r\n            <button\r\n               type=\"button\"\r\n               onClick={(e) => {\r\n                  e.preventDefault();\r\n                  togglePopup(\"default\");\r\n               }}\r\n               className=\"btn btn-primary\"\r\n            >\r\n               <FiSave />\r\n               <span className=\"hide-sm\">&nbsp; Actualizar</span>\r\n            </button>\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     categoriesPDF(categories);\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con categorías y precios</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadCategories,\r\n   updateCategories,\r\n   togglePopup,\r\n   categoriesPDF,\r\n})(Categories);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   addStudent,\r\n   updateClassCategory,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { loadUsers, clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { setAlert } from \"../../../../../../../../actions/alert\";\r\n\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\n\r\nconst FilterClassTab = ({\r\n   match,\r\n   categories: { categories },\r\n   classes: { classInfo },\r\n   users: { users, loading },\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   useEffect(() => {\r\n      if (_id) setCategory(classInfo.category._id);\r\n   }, [classInfo, _id]);\r\n\r\n   const filterStudents = (e) => {\r\n      e.preventDefault();\r\n      if (category === \"\") {\r\n         setAlert(\"Seleccione una categoría\", \"danger\", \"2\");\r\n         window.scroll(0, 0);\r\n      } else {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               category: category,\r\n               classroom: null,\r\n            },\r\n            true,\r\n            true\r\n         );\r\n         updateClassCategory(categories.find((item) => item._id === category));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form className=\"form\" onSubmit={filterStudents}>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={_id !== undefined}\r\n                  id=\"new-category\"\r\n                  onChange={(e) => {\r\n                     e.persist();\r\n                     setCategory(e.target.value);\r\n                  }}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map((category) => (\r\n                     <React.Fragment key={category._id}>\r\n                        {category.name !== \"Inscripción\" && (\r\n                           <option value={category._id}>{category.name}</option>\r\n                        )}\r\n                     </React.Fragment>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"new-category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"btn-right\">\r\n               <button\r\n                  type=\"submit\"\r\n                  className={`btn ${!_id ? \"btn-light\" : \"btn-black\"}`}\r\n                  disabled={_id !== undefined}\r\n               >\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"mt-2\">\r\n            <Alert type=\"3\" />\r\n            {!loading && users[0] && users[0].type === \"student\" && (\r\n               <StudentTable\r\n                  users={users}\r\n                  clearProfile={clearProfile}\r\n                  actionWChild={(studentInfo) =>\r\n                     addStudent(studentInfo, classInfo)\r\n                  }\r\n                  type=\"add-child\"\r\n               />\r\n            )}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   classes: state.classes,\r\n   users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   setAlert,\r\n   loadUsers,\r\n   addStudent,\r\n   updateClassCategory,\r\n   clearProfile,\r\n})(withRouter(FilterClassTab));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n} from \"../../../../../../../../actions/class\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport StudentTable from \"../../../../../sharedComp/tables/StudentTable\";\r\n\r\nconst NewClassTab = ({\r\n   match,\r\n   users: { usersBK },\r\n   classes: { classInfo, loadingClass },\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      sameSchedule: true,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: \"\",\r\n      teacher: \"\",\r\n      classroom: \"\",\r\n      day1: \"\",\r\n      day2: \"\",\r\n      hourin1: \"\",\r\n      hourin2: \"\",\r\n      hourout1: \"\",\r\n      hourout2: \"\",\r\n   });\r\n\r\n   const { sameSchedule } = adminValues;\r\n\r\n   const {\r\n      teacher,\r\n      classroom,\r\n      day1,\r\n      day2,\r\n      hourin1,\r\n      hourin2,\r\n      hourout1,\r\n      hourout2,\r\n   } = formData;\r\n\r\n   useEffect(() => {\r\n      if (!loadingClass && _id) {\r\n         if (\r\n            classInfo.hourin1 &&\r\n            classInfo.hourin2 &&\r\n            classInfo.hourout1 &&\r\n            classInfo.hourout2 &&\r\n            format(new Date(classInfo.hourin1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourin2), \"HH:mm\") &&\r\n            format(new Date(classInfo.hourout1), \"HH:mm\") ===\r\n               format(new Date(classInfo.hourout2), \"HH:mm\")\r\n         )\r\n            setAdminValues((prev) => ({ ...prev, sameSchedule: true }));\r\n\r\n         setFormData((prev) => {\r\n            for (const x in prev)\r\n               prev[x] =\r\n                  classInfo[x] === null || classInfo === undefined\r\n                     ? prev[x]\r\n                     : x.substring(0, 4) === \"hour\"\r\n                     ? format(\r\n                          new Date(classInfo[x] && classInfo[x].slice(0, -1)),\r\n                          \"HH:mm\"\r\n                       )\r\n                     : x === \"teacher\"\r\n                     ? classInfo[x]._id\r\n                     : classInfo[x];\r\n            return prev;\r\n         });\r\n      }\r\n   }, [classInfo, loadingClass, _id]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const onChangeCheckbox = () => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         sameSchedule: !sameSchedule,\r\n      }));\r\n   };\r\n\r\n   const days = () => {\r\n      return \"Lunes,Martes,Miércoles,Jueves,Viernes\".split(\",\").map((item) => (\r\n         <option key={item} value={item}>\r\n            {item}\r\n         </option>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateClass({\r\n                  ...formData,\r\n                  category:\r\n                     classInfo && classInfo.category\r\n                        ? classInfo.category._id\r\n                        : \"\",\r\n                  students:\r\n                     classInfo && classInfo.students ? classInfo.students : [],\r\n                  ...(sameSchedule && { hourin2: hourin1, hourout2: hourout1 }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que los datos son correctos?\"\r\n         />\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group my-3 heading-tertiary\">\r\n               <p>\r\n                  Categoría: &nbsp;{\" \"}\r\n                  {!loadingClass && classInfo && classInfo.category.name}\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"teacher\"\r\n                  className=\"form-input\"\r\n                  name=\"teacher\"\r\n                  onChange={onChange}\r\n                  value={teacher}\r\n               >\r\n                  <option value=\"\">* Seleccione Profesor</option>\r\n                  {usersBK.map((teacher) => (\r\n                     <option key={teacher._id} value={teacher._id}>\r\n                        {teacher.lastname + \", \" + teacher.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"teacher\"\r\n                  className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  id=\"classroom\"\r\n                  onChange={onChange}\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  placeholder=\"Aula\"\r\n               />\r\n               <label htmlFor=\"classroom\" className=\"form-label\">\r\n                  Aula\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day1\"\r\n                  className=\"form-input\"\r\n                  name=\"day1\"\r\n                  onChange={onChange}\r\n                  value={day1}\r\n               >\r\n                  <option value=\"\">* Seleccione Día 1</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day1\"\r\n                  className={`form-label ${day1 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 1\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     name=\"hourin1\"\r\n                     value={hourin1}\r\n                     onChange={onChange}\r\n                     min=\"08:00\"\r\n                     max=\"22:00\"\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"time\"\r\n                     disabled={hourin1 === \"\"}\r\n                     name=\"hourout1\"\r\n                     onChange={onChange}\r\n                     value={hourout1}\r\n                     min={hourin1}\r\n                     max=\"22:00\"\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label show\">Entrada</label>\r\n                  <label className=\"form-label show\">Salida</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  id=\"day2\"\r\n                  className=\"form-input\"\r\n                  name=\"day2\"\r\n                  onChange={onChange}\r\n                  value={day2}\r\n               >\r\n                  <option value=\"0\">* Seleccione Día 2</option>\r\n                  {days()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"day2\"\r\n                  className={`form-label ${day2 === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Día 2\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group mb-2\">\r\n               <input\r\n                  className=\"form-checkbox\"\r\n                  onChange={onChangeCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={sameSchedule}\r\n                  name=\"sameSchedule\"\r\n                  id=\"sameSchedule\"\r\n               />\r\n               <label className=\"checkbox-lbl\" htmlFor=\"sameSchedule\">\r\n                  {sameSchedule ? \"Mismo Horario\" : \"Distinto Horario\"}\r\n               </label>\r\n            </div>\r\n            {!sameSchedule && (\r\n               <div className=\"form-group\">\r\n                  <div className=\"two-in-row\">\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourin2\"\r\n                        value={hourin2}\r\n                        onChange={onChange}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                     <input\r\n                        className=\"form-input\"\r\n                        type=\"time\"\r\n                        name=\"hourout2\"\r\n                        onChange={onChange}\r\n                        value={hourout2}\r\n                        min=\"08:00\"\r\n                        max=\"22:00\"\r\n                     />\r\n                  </div>\r\n                  <div className=\"two-in-row\">\r\n                     <label className=\"form-label show\">Entrada</label>\r\n                     <label className=\"form-label show\">Salida</label>\r\n                  </div>\r\n               </div>\r\n            )}\r\n\r\n            <h3 className=\"text-primary heading-tertiary my-2 pt-2\">\r\n               Lista de Alumnos\r\n            </h3>\r\n            {!loadingClass && classInfo && classInfo.students.length > 0 ? (\r\n               <StudentTable\r\n                  users={classInfo.students}\r\n                  clearProfile={clearProfile}\r\n                  loadingUsers={true}\r\n                  actionWChild={(studentToDelete) =>\r\n                     removeStudent(studentToDelete)\r\n                  }\r\n                  type=\"chosen-child\"\r\n               />\r\n            ) : (\r\n               <p className=\"text-secondary paragraph\">\r\n                  Todavía no hay alumnos añadidos\r\n               </p>\r\n            )}\r\n\r\n            <div className=\"btn-center\">\r\n               <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {_id ? <FaEdit /> : <FiSave />}\r\n                  &nbsp; {_id ? \"Guardar Cambios\" : \"Registrar\"}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerUpdateClass,\r\n   removeStudent,\r\n   togglePopup,\r\n   clearProfile,\r\n})(withRouter(NewClassTab));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadClass } from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { loadUsers } from \"../../../../../../actions/user\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport FilterClassTab from \"./tabs/FilterClassTab\";\r\nimport NewClass from \"./tabs/NewClassTab\";\r\n\r\nconst RegisterClass = ({\r\n   match,\r\n   classes: { loadingClass, classInfo },\r\n   users: { loading, loadingBK },\r\n   categories: { loading: loadingCategories },\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n}) => {\r\n   const _id = match.params.class_id;\r\n\r\n   useEffect(() => {\r\n      if (_id && loadingClass) loadClass(_id, true, false);\r\n   }, [_id, loadingClass, loadClass]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(!_id);\r\n   }, [loadingCategories, loadCategories, _id]);\r\n\r\n   useEffect(() => {\r\n      if (loadingBK) loadUsers({ type: \"teacher\", active: true }, false, false);\r\n   }, [loadingBK, loadUsers]);\r\n\r\n   useEffect(() => {\r\n      if (_id && loading && !loadingClass) {\r\n         loadUsers(\r\n            {\r\n               type: \"student\",\r\n               active: true,\r\n               classroom: null,\r\n               category: classInfo.category._id,\r\n            },\r\n            false,\r\n            true\r\n         );\r\n      }\r\n   }, [loading, loadUsers, _id, loadingClass, classInfo]);\r\n\r\n   return (\r\n      <>\r\n         <h2>{_id ? \"Editar Clase\" : \"Nueva Clase\"}</h2>\r\n         {!loadingCategories &&\r\n            !loadingBK &&\r\n            ((_id && !loadingClass) || !_id) && (\r\n               <>\r\n                  {_id ? (\r\n                     <Tabs\r\n                        tablist={[\"Clase\", \"Alumnos\"]}\r\n                        panellist={[NewClass, FilterClassTab]}\r\n                     />\r\n                  ) : (\r\n                     <Tabs\r\n                        tablist={[\"Alumnos\", \"Clase\"]}\r\n                        panellist={[FilterClassTab, NewClass]}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   classes: state.classes,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClass,\r\n   loadUsers,\r\n   loadCategories,\r\n})(RegisterClass);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { setAlert } from \"../../../../../../actions/alert\";\r\nimport {\r\n   loadInstallments,\r\n   clearInstallments,\r\n   loadInstallment,\r\n   deleteInstallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { clearCategories } from \"../../../../../../actions/category\";\r\nimport { clearEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\nimport { addDetail } from \"../../../../../../actions/invoice\";\r\n\r\nimport InstallmentsTable from \"../../tables/InstallmentsTable\";\r\nimport UsersSearch from \"../UsersSearch\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InstallmentsSearch = ({\r\n   match,\r\n   history,\r\n   installments: { loading, installments },\r\n   loadInstallments,\r\n   clearInstallments,\r\n   clearCategories,\r\n   clearEnrollments,\r\n   deleteInstallment,\r\n   loadInstallment,\r\n   togglePopup,\r\n   addDetail,\r\n   changeStudent,\r\n   student,\r\n}) => {\r\n   const newInvoice = match.params.user_id === undefined;\r\n\r\n   const restore = () => {\r\n      changeStudent(null);\r\n      clearInstallments();\r\n      if (!newInvoice) history.push(\"/index/installments/0\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"installment-search\">\r\n         <div className=\"form\">\r\n            <UsersSearch\r\n               usersType=\"student\"\r\n               selectUser={changeStudent}\r\n               selectedUser={student}\r\n               autoComplete=\"off\"\r\n               primary={true}\r\n               restore={restore}\r\n               button=\"installments\"\r\n               actionForSelected={(e) => {\r\n                  e.preventDefault();\r\n                  loadInstallments(\r\n                     { student },\r\n                     true,\r\n                     true,\r\n                     newInvoice ? \"invoice\" : \"all\"\r\n                  );\r\n               }}\r\n            />\r\n         </div>\r\n         {!loading &&\r\n            installments[0] &&\r\n            student &&\r\n            student._id === installments[0].student._id && (\r\n               <>\r\n                  {installments[0] ? (\r\n                     <div className=\"mt-3\">\r\n                        <InstallmentsTable\r\n                           installments={installments}\r\n                           forAdmin={true}\r\n                           student={student._id}\r\n                           deleteInstallment={deleteInstallment}\r\n                           addDetail={\r\n                              newInvoice ? (item) => addDetail(item) : null\r\n                           }\r\n                           clearCategories={clearCategories}\r\n                           clearEnrollments={clearEnrollments}\r\n                           loadInstallment={loadInstallment}\r\n                           togglePopup={togglePopup}\r\n                        />\r\n                     </div>\r\n                  ) : (\r\n                     <p className=\"heading-tertiary text-center my-4\">\r\n                        El alumno no tiene deudas hasta el momento\r\n                     </p>\r\n                  )}\r\n               </>\r\n            )}\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallments,\r\n   setAlert,\r\n   clearInstallments,\r\n   clearEnrollments,\r\n   clearCategories,\r\n   loadInstallment,\r\n   addDetail,\r\n   deleteInstallment,\r\n   togglePopup,\r\n})(withRouter(InstallmentsSearch));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaDollarSign, FaPlus } from \"react-icons/fa\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\n\r\nimport {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadInstallments,\r\n} from \"../../../../../actions/installment\";\r\nimport { loadPenalty, updatePenalty } from \"../../../../../actions/global\";\r\nimport { clearUser } from \"../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\nimport { clearEnrollments } from \"../../../../../actions/enrollment\";\r\n\r\nimport InstallmentsSearch from \"../../sharedComp/search/InstallmentsSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Installments = ({\r\n   match,\r\n   global: { loading: loadingPenalty, penalty },\r\n   installments: { loading, installments },\r\n   auth: { userLogged },\r\n   clearInstallments,\r\n   clearInstallment,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadPenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.user_id;\r\n   const isAdmin =\r\n      userLogged.type === \"admin\" || userLogged.type === \"admin&teacher\";\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      student: null,\r\n   });\r\n   const { student } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingPenalty) loadPenalty();\r\n   }, [loadingPenalty, loadPenalty]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"0\") {\r\n         if (loading) loadInstallments({ student: { _id } }, true, true, \"all\");\r\n         else if (installments.length > 0)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               student: installments[0].student,\r\n            }));\r\n      }\r\n   }, [_id, loading, loadInstallments, installments]);\r\n\r\n   const changeStudent = (student) => {\r\n      setAdminValues((prev) => ({\r\n         ...prev,\r\n         student,\r\n      }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <h1>Cuotas</h1>\r\n            {!loadingPenalty && (\r\n               <PopUp\r\n                  confirm={(number) => updatePenalty({ number })}\r\n                  info={{ penalty }}\r\n                  error\r\n               />\r\n            )}\r\n\r\n            <div className=\"btn-right my-3\">\r\n               {isAdmin && (\r\n                  <button\r\n                     className=\"btn btn-secondary\"\r\n                     type=\"button\"\r\n                     disabled={loadingPenalty}\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        togglePopup(\"penalty\");\r\n                     }}\r\n                  >\r\n                     <FaDollarSign />\r\n                     &nbsp;Recargo\r\n                  </button>\r\n               )}\r\n               <Link\r\n                  to=\"/index/installment/list\"\r\n                  onClick={() => {\r\n                     window.scroll(0, 0);\r\n                     clearInstallments();\r\n                  }}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  &nbsp; <span className=\"hide-sm\">Listado</span>&nbsp;Deudas\r\n               </Link>\r\n            </div>\r\n            <InstallmentsSearch\r\n               student={student}\r\n               changeStudent={changeStudent}\r\n            />\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  className={`btn ${\r\n                     !loading && student ? \"btn-primary\" : \"btn-black\"\r\n                  }`}\r\n                  to={\r\n                     !loading && student\r\n                        ? `/index/installment/new/${student._id}`\r\n                        : \"#\"\r\n                  }\r\n                  onClick={() => {\r\n                     if (!loading) {\r\n                        window.scroll(0, 0);\r\n                        clearInstallment();\r\n                        clearEnrollments();\r\n                        clearUser();\r\n                     }\r\n                  }}\r\n               >\r\n                  <FaPlus />\r\n                  <span className=\"hide-md\">&nbsp;Agregar cuota</span>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   installments: state.installments,\r\n   global: state.global,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   clearInstallments,\r\n   clearInstallment,\r\n   loadPenalty,\r\n   clearUser,\r\n   clearEnrollments,\r\n   updatePenalty,\r\n   loadInstallments,\r\n   togglePopup,\r\n})(Installments);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nimport {\r\n   loadInstallment,\r\n   updateIntallment,\r\n} from \"../../../../../../actions/installment\";\r\nimport { loadEnrollments } from \"../../../../../../actions/enrollment\";\r\nimport { loadUser } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditInstallment = ({\r\n   match,\r\n   users: { user, loadingUser },\r\n   installments: { installment, loadingInstallment, installments },\r\n   enrollments: { enrollments, loading },\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n}) => {\r\n   const _id = match.params.item_id;\r\n   const type = match.params.type;\r\n\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [formData, setformData] = useState({\r\n      _id: \"\",\r\n      year: \"\",\r\n      number: \"\",\r\n      value: \"\",\r\n      status: \"\",\r\n      student: null,\r\n      updatable: true,\r\n      enrollment: \"\",\r\n   });\r\n\r\n   const { year, number, value, status, student, updatable, enrollment } =\r\n      formData;\r\n\r\n   useEffect(() => {\r\n      if (type === \"new\") {\r\n         if (loadingUser) loadUser(_id, false);\r\n         else setformData((prev) => ({ ...prev, student: user }));\r\n      } else {\r\n         if (loadingInstallment) loadInstallment(_id, true);\r\n         else {\r\n            if (installment)\r\n               setformData((prev) => {\r\n                  for (const x in prev)\r\n                     prev[x] =\r\n                        installment[x] === undefined || installment[x] === null\r\n                           ? prev[x]\r\n                           : installment[x];\r\n                  return prev;\r\n               });\r\n         }\r\n      }\r\n   }, [\r\n      loadInstallment,\r\n      loadUser,\r\n      loadingInstallment,\r\n      loadingUser,\r\n      installment,\r\n      user,\r\n      _id,\r\n      type,\r\n   ]);\r\n\r\n   useEffect(() => {\r\n      if (student && year !== \"\" && loading) {\r\n         loadEnrollments(\r\n            { student: student._id ? student._id : student, year },\r\n            false\r\n         );\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loadEnrollments, year, loading]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setformData({\r\n         ...formData,\r\n         [e.target.name]:\r\n            e.target.type === \"checkbox\"\r\n               ? e.target.checked\r\n               : isNaN(e.target.value)\r\n               ? e.target.value\r\n               : Number(e.target.value),\r\n      });\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\"\r\n         .split(\",\")\r\n         .map((item, index) => (\r\n            <option key={index} value={index}>\r\n               {item}\r\n            </option>\r\n         ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea guardar los cambios?\"\r\n            confirm={() => {\r\n               updateIntallment(\r\n                  {\r\n                     ...formData,\r\n                     ...(type === \"new\" && { student: student._id }),\r\n                     ...(number === 1 ||\r\n                        (number === 2 && {\r\n                           status: \"expired\",\r\n                           updatable: false,\r\n                        })),\r\n                  },\r\n                  installments.length > 0\r\n               );\r\n            }}\r\n         />\r\n         <h2>{type === \"edit\" ? \"Editar Cuota\" : \"Crear Cuota\"}</h2>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <p className=\"heading-tertiary btn-end name\">\r\n               <span className=\"text-dark\">Alumno: </span> &nbsp;\r\n               {student && `${student.lastname} ${student.name}`}\r\n            </p>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  name=\"year\"\r\n                  id=\"year\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  disabled={enrollments.length === 0}\r\n                  name=\"enrollment\"\r\n                  id=\"enrollment\"\r\n                  onChange={onChange}\r\n                  value={enrollment}\r\n               >\r\n                  <option value=\"\">\r\n                     {enrollments.length === 0\r\n                        ? \"No hay inscripción vinculada\"\r\n                        : \"* Seleccione la inscripción vinculada\"}\r\n                  </option>\r\n                  {enrollments.map((item) => (\r\n                     <option key={item._id} value={item._id}>\r\n                        {item.category.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"enrollment\"\r\n                  className={`form-label ${enrollment === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Inscripción vinculada\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  value={number}\r\n                  name=\"number\"\r\n                  id=\"number\"\r\n                  disabled={type === \"edit\"}\r\n                  onChange={onChange}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  id=\"value\"\r\n                  onChange={onChange}\r\n                  name=\"value\"\r\n                  placeholder=\"Valor\"\r\n                  value={value}\r\n               />\r\n               <label htmlFor=\"value\" className=\"form-label\">\r\n                  Valor\r\n               </label>\r\n            </div>\r\n            {number !== 1 && number !== 2 && (\r\n               <>\r\n                  <div className=\"form-group\">\r\n                     <select\r\n                        className=\"form-input\"\r\n                        value={status}\r\n                        name=\"status\"\r\n                        id=\"status\"\r\n                        onChange={onChange}\r\n                     >\r\n                        <option value=\"\">* Estado de la cuota</option>\r\n                        <option value=\"valid\">Válida</option>\r\n                        <option value=\"debt\">Deuda</option>\r\n                        <option value=\"expired\">Vencida</option>\r\n                     </select>\r\n                     <label\r\n                        htmlFor=\"status\"\r\n                        className={`form-label ${status === \"\" ? \"lbl\" : \"\"}`}\r\n                     >\r\n                        Estado de la cuota\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        className=\"form-checkbox\"\r\n                        type=\"checkbox\"\r\n                        checked={updatable}\r\n                        onChange={onChange}\r\n                        name=\"updatable\"\r\n                        id=\"updatable\"\r\n                     />\r\n                     <label className=\"checkbox-lbl\" htmlFor=\"updatable\">\r\n                        {!updatable ? \"No Actualizar\" : \"Permitir actualizar\"}\r\n                     </label>\r\n                  </div>\r\n               </>\r\n            )}\r\n\r\n            <div className=\"btn-center py-2\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  <FiSave />\r\n                  &nbsp;Guardar\r\n               </button>\r\n               {student && (\r\n                  <Link\r\n                     className=\"btn btn-danger\"\r\n                     to={`/index/installments/${student._id}`}\r\n                  >\r\n                     Cancelar\r\n                  </Link>\r\n               )}\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   users: state.users,\r\n   installments: state.installments,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadInstallment,\r\n   loadEnrollments,\r\n   loadUser,\r\n   updateIntallment,\r\n   togglePopup,\r\n})(EditInstallment);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadClasses,\r\n   clearClass,\r\n   clearClasses,\r\n   classPDF,\r\n} from \"../../../../../../actions/class\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport {\r\n   loadUsers,\r\n   clearSearch,\r\n   clearProfile,\r\n} from \"../../../../../../actions/user\";\r\n\r\nimport ClassesTable from \"../../../sharedComp/tables/ClassesTable\";\r\n\r\nconst Classes = ({\r\n   classes: { classes, loading },\r\n   users: { users, loading: loadingUsers },\r\n   auth: { userLogged },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadClasses,\r\n   loadUsers,\r\n   loadCategories,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearProfile,\r\n   clearSearch,\r\n}) => {\r\n   const [filterForm, setfilterForm] = useState({\r\n      teacher: \"\",\r\n      category: \"\",\r\n      year: new Date().getFullYear(),\r\n   });\r\n\r\n   const { teacher, category, year } = filterForm;\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingUsers)\r\n         loadUsers({ type: \"teacher\", active: true }, false, true);\r\n   }, [loadUsers, userLogged, loadingUsers]);\r\n\r\n   useEffect(() => {\r\n      if (userLogged.type !== \"teacher\" && loadingCategories)\r\n         loadCategories(false);\r\n   }, [userLogged, loadingCategories, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadClasses({ year }, true);\r\n   }, [loading, loadClasses, year]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setfilterForm({\r\n         ...filterForm,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h1>Clases</h1>\r\n         {userLogged.type !== \"teacher\" && (\r\n            <form\r\n               className=\"form\"\r\n               onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  loadClasses(filterForm, true);\r\n               }}\r\n            >\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"teacher\"\r\n                     className=\"form-input\"\r\n                     name=\"teacher\"\r\n                     onChange={onChange}\r\n                     value={teacher}\r\n                  >\r\n                     <option value=\"\">* Seleccione Profesor</option>\r\n                     {!loadingUsers &&\r\n                        users.map((user) => (\r\n                           <option key={user._id} value={user._id}>\r\n                              {user.lastname + \", \" + user.name}\r\n                           </option>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"teacher\"\r\n                     className={`form-label ${teacher === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Profesor\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"category\"\r\n                     className=\"form-input\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {!loadingCategories &&\r\n                        categories.map((category) => (\r\n                           <React.Fragment key={category._id}>\r\n                              {category.name !== \"Inscripción\" && (\r\n                                 <option value={category._id}>\r\n                                    {category.name}\r\n                                 </option>\r\n                              )}\r\n                           </React.Fragment>\r\n                        ))}\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     id=\"year\"\r\n                     className=\"form-input\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     <option value=\"2022\">2022</option>\r\n                     <option value=\"2021\">2021</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n\r\n               <div className=\"btn-right\">\r\n                  <button type=\"submit\" className=\"btn btn-light\">\r\n                     <BiFilterAlt />\r\n                     &nbsp;Buscar\r\n                  </button>\r\n               </div>\r\n            </form>\r\n         )}\r\n\r\n         <div className=\"pt-4\">\r\n            <ClassesTable\r\n               classes={classes ? classes : []}\r\n               all={userLogged.type !== \"teacher\"}\r\n               clearClass={clearClass}\r\n               clearClasses={clearClasses}\r\n               clearProfile={clearProfile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"btn-right\">\r\n            {userLogged.type !== \"teacher\" && (\r\n               <Link\r\n                  to={users.length !== 0 ? \"/class/register\" : \"#\"}\r\n                  onClick={() => {\r\n                     if (users.length !== 0) {\r\n                        window.scroll(0, 0);\r\n                        clearClass();\r\n                        clearSearch();\r\n                     }\r\n                  }}\r\n                  className={`btn ${\r\n                     users.length !== 0 ? \"btn-dark\" : \"btn-black\"\r\n                  }`}\r\n               >\r\n                  <FaPlus />\r\n                  &nbsp;Nueva Clase\r\n               </Link>\r\n            )}\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary tooltip\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     classPDF(classes, \"classes\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF con clases y su info</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   classes: state.classes,\r\n   users: state.users,\r\n   auth: state.auth,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadClasses,\r\n   loadCategories,\r\n   loadUsers,\r\n   classPDF,\r\n   clearClass,\r\n   clearClasses,\r\n   clearSearch,\r\n   clearProfile,\r\n})(Classes);\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { togglePopup } from \"../../../../../../../../actions/global\";\nimport { addDiscount } from \"../../../../../../../../actions/invoice\";\n\nimport PopUp from \"../../../../../../../modal/PopUp\";\nimport InstallmentsSearch from \"../../../../../sharedComp/search/InstallmentsSearch\";\n\nconst InstallmentsSearchTab = ({\n   invoices: { invoice },\n   addDiscount,\n   togglePopup,\n}) => {\n   const [adminValues, setAdminValues] = useState({\n      student: null,\n   });\n   const { student } = adminValues;\n\n   const changeStudent = (student) => {\n      setAdminValues((prev) => ({\n         ...prev,\n         student,\n      }));\n   };\n\n   useEffect(() => {\n      if (invoice) {\n         const students = invoice.details.reduce((res, curr) => {\n            if (curr.number > 2) {\n               if (res[curr.student._id]) res[curr.student._id].push(curr);\n               else Object.assign(res, { [curr.student._id]: [curr] });\n            }\n\n            return res;\n         }, {});\n\n         for (const x in students) {\n            if (\n               (!invoice.studentsD ||\n                  !invoice.studentsD.some((item) => item === x)) &&\n               students[x].filter((item) => !item.status === \"expired\").length >\n                  2\n            )\n               togglePopup(\"default\");\n         }\n      }\n   }, [invoice, togglePopup]);\n\n   return (\n      <div className=\"mt-4\">\n         <PopUp\n            confirm={() => addDiscount(student._id)}\n            info={\n               student &&\n               `¿Desea agregar un 10% de descuento a las cuotas del alumno\n             ${student.lastname}, ${student.name}?`\n            }\n         />\n         <InstallmentsSearch student={student} changeStudent={changeStudent} />\n      </div>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   invoices: state.invoices,\n});\n\nexport default connect(mapStateToProps, { addDiscount, togglePopup })(\n   InstallmentsSearchTab\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { FaFileInvoiceDollar, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   registerInvoice,\r\n   removeDetail,\r\n} from \"../../../../../../../../actions/invoice\";\r\nimport {\r\n   formatNumber,\r\n   togglePopup,\r\n} from \"../../../../../../../../actions/global\";\r\n\r\nimport Alert from \"../../../../../../sharedComp/Alert\";\r\nimport UsersSearch from \"../../../../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst InvoiceTab = ({\r\n   invoices: {\r\n      invoice,\r\n      otherValues: { invoiceNumber },\r\n   },\r\n   togglePopup,\r\n   registerInvoice,\r\n   removeDetail,\r\n}) => {\r\n   const day = format(new Date(), \"dd/MM/yyyy\");\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      installmentTotal: 0,\r\n   });\r\n\r\n   const [formData, setFormData] = useState({\r\n      user: {\r\n         _id: null,\r\n         lastname: \"\",\r\n         name: \"\",\r\n         email: \"\",\r\n      },\r\n      invoiceid: invoiceNumber,\r\n      total: 0,\r\n      details: [],\r\n   });\r\n\r\n   const installment =\r\n      \"Insc,Cl Pa,Ex Li,Mar,Abr,May,Jun,Jul,Agto,Sept,Oct,Nov,Dic\".split(\",\");\r\n\r\n   const { details, total, user } = formData;\r\n\r\n   const { installmentTotal } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (invoice) {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: invoice.details,\r\n            ...(invoice.studentsD && {\r\n               total: invoice.details.reduce(\r\n                  (sum, detail) =>\r\n                     detail.discount !== undefined ? sum + detail.value : sum,\r\n                  0\r\n               ),\r\n            }),\r\n         }));\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            installmentTotal: invoice.details.reduce(\r\n               (sum, detail) => sum + detail.value,\r\n               0\r\n            ),\r\n         }));\r\n      } else {\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: [],\r\n            total: 0,\r\n            user: {\r\n               _id: null,\r\n               lastname: \"\",\r\n               name: \"\",\r\n               email: \"\",\r\n            },\r\n            invoiceid: invoiceNumber,\r\n         }));\r\n         setAdminValues((prev) => ({ ...prev, installmentTotal: 0 }));\r\n      }\r\n   }, [invoice, invoiceNumber]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData((prev) => ({\r\n         ...prev,\r\n         ...(e.target.id === \"user\"\r\n            ? {\r\n                 user: {\r\n                    ...user,\r\n                    [e.target.name]: e.target.value,\r\n                 },\r\n              }\r\n            : { [e.target.name]: e.target.value }),\r\n      }));\r\n   };\r\n\r\n   const onChangeValue = (e) => {\r\n      e.persist();\r\n      let newDetails = [...details];\r\n\r\n      if (\r\n         newDetails[e.target.id].value >=\r\n         Number(e.target.value.replace(/,/g, \".\"))\r\n      ) {\r\n         newDetails[e.target.id] = {\r\n            ...newDetails[e.target.id],\r\n            payment: e.target.value,\r\n         };\r\n\r\n         setFormData((prev) => ({\r\n            ...prev,\r\n            details: newDetails,\r\n            total: newDetails.reduce(\r\n               (accum, item) =>\r\n                  accum +\r\n                  (typeof item.payment === \"number\"\r\n                     ? item.payment\r\n                     : Number(item.payment.replace(/,/g, \".\"))),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"invoice-tab\">\r\n         <PopUp\r\n            confirm={() =>\r\n               registerInvoice({\r\n                  ...formData,\r\n                  remaining: installmentTotal - total,\r\n                  details: details.map((item) => {\r\n                     return {\r\n                        ...item,\r\n                        payment:\r\n                           typeof item.payment === \"number\"\r\n                              ? item.payment\r\n                              : Number(item.payment.replace(/,/g, \".\")),\r\n                     };\r\n                  }),\r\n               })\r\n            }\r\n            info=\"¿Está seguro que la factura es correcta?\"\r\n         />\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <div className=\"form-group mb-2\">\r\n               <div className=\"two-in-row\">\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"number\"\r\n                     name=\"invoiceid\"\r\n                     value={invoiceNumber}\r\n                     disabled\r\n                  />\r\n                  <input\r\n                     className=\"form-input\"\r\n                     type=\"text\"\r\n                     value={day}\r\n                     disabled\r\n                  />\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label className=\"form-label\">Factura ID</label>\r\n                  <label className=\"form-label\">Fecha</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"mb-2\">\r\n               <UsersSearch\r\n                  primary={false}\r\n                  selectUser={(user) =>\r\n                     setFormData((prev) => ({ ...prev, user }))\r\n                  }\r\n                  usersType=\"guardian/student\"\r\n                  onChangeForm={onChange}\r\n                  autoComplete=\"new-password\"\r\n                  restore={() =>\r\n                     setFormData((prev) => ({\r\n                        ...prev,\r\n                        user: {\r\n                           _id: null,\r\n                           lastname: \"\",\r\n                           name: \"\",\r\n                           email: \"\",\r\n                        },\r\n                     }))\r\n                  }\r\n               />\r\n               <div className=\"form-group\">\r\n                  <input\r\n                     className={`form-input ${\r\n                        user._id && !user.email ? \"text-danger\" : \"\"\r\n                     }`}\r\n                     type=\"email\"\r\n                     name=\"email\"\r\n                     id=\"user\"\r\n                     onChange={onChange}\r\n                     disabled={user._id}\r\n                     value={\r\n                        !user._id\r\n                           ? user.email\r\n                           : user.email\r\n                           ? user.email\r\n                           : \"No tiene email registrado\"\r\n                     }\r\n                     placeholder=\"Email\"\r\n                  />\r\n                  <label htmlFor=\"user\" className=\"form-label\">\r\n                     Email\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <h3 className=\"text-primary heading-tertiary\">\r\n               Detalle de Factura\r\n            </h3>\r\n            <Alert type=\"5\" />\r\n            {details.length > 0 && (\r\n               <div className=\"wrapper\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>A Pagar</th>\r\n                           <th>&nbsp;</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {details.length > 0 &&\r\n                           details.map((install, index) => {\r\n                              return (\r\n                                 <tr key={index}>\r\n                                    <td>\r\n                                       {install.student.lastname +\r\n                                          \", \" +\r\n                                          install.student.name}\r\n                                    </td>\r\n                                    <td>{installment[install.number]}</td>\r\n                                    <td>{install.year}</td>\r\n                                    <td>${formatNumber(install.value)}</td>\r\n                                    <td>\r\n                                       <input\r\n                                          type=\"text\"\r\n                                          onChange={onChangeValue}\r\n                                          id={index}\r\n                                          disabled={\r\n                                             install.discount !== undefined\r\n                                          }\r\n                                          placeholder=\"Monto\"\r\n                                          value={install.payment}\r\n                                       />\r\n                                    </td>\r\n                                    <td>\r\n                                       <button\r\n                                          type=\"button\"\r\n                                          onClick={(e) => {\r\n                                             e.preventDefault();\r\n                                             removeDetail(install);\r\n                                          }}\r\n                                          className=\"btn btn-danger\"\r\n                                       >\r\n                                          <FaTrashAlt />\r\n                                       </button>\r\n                                    </td>\r\n                                 </tr>\r\n                              );\r\n                           })}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )}\r\n            <div className=\"text-right mt-3\">\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"remaining\">Saldo</label>\r\n                  <input\r\n                     type=\"number\"\r\n                     value={installmentTotal - total}\r\n                     disabled\r\n                     name=\"remaining\"\r\n                  />\r\n               </div>\r\n               <div className=\"invoice-detail\">\r\n                  <label htmlFor=\"total\">Total a Pagar</label>\r\n                  <input type=\"number\" name=\"total\" value={total} disabled />\r\n               </div>\r\n               <div className=\"btn-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                     <FaFileInvoiceDollar />\r\n                     &nbsp;Pagar\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   registerInvoice,\r\n   removeDetail,\r\n   togglePopup,\r\n})(InvoiceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getInvoiceNumber } from \"../../../../../../actions/invoice\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport InstallmentsSearchTab from \"./tabs/InstallmentsSearchTab\";\r\nimport InvoiceTab from \"./tabs/InvoiceTab\";\r\n\r\nconst InvoiceGeneration = ({\r\n   getInvoiceNumber,\r\n   invoices: {\r\n      otherValues: { invoiceNumber },\r\n   },\r\n}) => {\r\n   useEffect(() => {\r\n      if (invoiceNumber === \"\") getInvoiceNumber();\r\n   }, [getInvoiceNumber, invoiceNumber]);\r\n\r\n   return (\r\n      <>\r\n         <h1>Facturación</h1>\r\n         {invoiceNumber !== \"\" && (\r\n            <Tabs\r\n               tablist={[\"Cuotas\", \"Factura\"]}\r\n               panellist={[InstallmentsSearchTab, InvoiceTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getInvoiceNumber })(\r\n   InvoiceGeneration\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\n\r\nimport { loadInvoice, invoicesPDF } from \"../../../../../../actions/invoice\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport logo from \"../../../../../../img/fondoBlanco.png\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Invoice = ({\r\n   invoices: { invoice, loadingInvoice },\r\n   loadInvoice,\r\n   invoicesPDF,\r\n   match,\r\n}) => {\r\n   const installment = [\r\n      \"Insc\",\r\n      \"Cl Pa\",\r\n      \"Ex Li\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Agto\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n   ];\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      remaining: 0,\r\n      user: {},\r\n   });\r\n\r\n   const { remaining, user } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingInvoice) loadInvoice(match.params.invoice_id, true);\r\n      else {\r\n         let fullName = \"\";\r\n         if (invoice.user.user_id === null) fullName = \"Usuario Eliminado\";\r\n         else {\r\n            const lastname = invoice.user.user_id\r\n               ? invoice.user.user_id.lastname\r\n               : invoice.user.lastname;\r\n            const name = invoice.user.user_id\r\n               ? invoice.user.user_id.name\r\n               : invoice.user.name;\r\n            fullName = `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n               name ? name : \"\"\r\n            }`;\r\n         }\r\n\r\n         const email =\r\n            invoice.user.user_id && invoice.user.user_id.email !== undefined\r\n               ? invoice.user.user_id.email\r\n               : invoice.user.email !== undefined\r\n               ? invoice.user.email\r\n               : \"\";\r\n         const cel =\r\n            invoice.user.user_id && invoice.user.user_id.cel !== undefined\r\n               ? invoice.user.user_id.cel\r\n               : invoice.user.cel !== undefined\r\n               ? invoice.user.cel\r\n               : \"\";\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            remaining: invoice.details.reduce(\r\n               (sum, detail) => sum + (detail.value - detail.payment),\r\n               0\r\n            ),\r\n            user: {\r\n               name: fullName,\r\n               email,\r\n               cel,\r\n            },\r\n         }));\r\n      }\r\n   }, [loadInvoice, match.params.invoice_id, loadingInvoice, invoice]);\r\n\r\n   return (\r\n      !loadingInvoice && (\r\n         <>\r\n            <div className=\"invoice\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <h3 className=\"heading-tertiary fancy-heading text-dark\">\r\n                        Villa de Merlo English Centre\r\n                     </h3>\r\n                     <p className=\"paragraph\">Coronel Mercau 783</p>\r\n                     <p className=\"paragraph\">\r\n                        Villa de Merlo, San Luis, Argentina\r\n                     </p>\r\n                     <p className=\"paragraph\">(02656) 476-661</p>\r\n                  </div>\r\n                  <div className=\"logo\">\r\n                     <img src={logo} alt=\"\" />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row mt-3\">\r\n                  <div>\r\n                     <p className=\"paragraph text-dark\">Cliente:</p>\r\n                     <p className=\"paragraph\">{user.name}</p>\r\n                     <p className=\"paragraph\">{user.email}</p>\r\n                     <p className=\"paragraph\">{user.cel}</p>\r\n                  </div>\r\n                  <div className=\"invoice-info\">\r\n                     <p className=\"paragraph\">\r\n                        N° Factura: {invoice.invoiceid}\r\n                     </p>\r\n                     <p className=\"paragraph\">\r\n                        Fecha: {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className=\"details my-2\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Nombre</th>\r\n                           <th>Cuota</th>\r\n                           <th>Año</th>\r\n                           <th>Importe</th>\r\n                           <th>Pago</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {invoice.details.map((invoice, index) => (\r\n                           <tr key={index}>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.student.lastname +\r\n                                      \", \" +\r\n                                      invoice.installment.student.name\r\n                                    : \"Cuota eliminada\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? installment[invoice.installment.number]\r\n                                    : \"Indefinida\"}\r\n                              </td>\r\n                              <td>\r\n                                 {invoice.installment\r\n                                    ? invoice.installment.year\r\n                                    : \"Indefinido\"}\r\n                              </td>\r\n                              <td>${formatNumber(invoice.value)}</td>\r\n                              <td>${formatNumber(invoice.payment)}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <div className=\"text-right mt-3\">\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Saldo:</span>\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(remaining)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n                  <p>\r\n                     <span className=\"heading-tertiary text-dark\">Total:</span>\r\n\r\n                     <input\r\n                        className=\"value paragraph\"\r\n                        value={`$${formatNumber(invoice.total)}`}\r\n                        disabled\r\n                     />\r\n                  </p>\r\n               </div>\r\n            </div>\r\n            <div className=\"btn-center\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     invoicesPDF({ ...invoice, user, remaining }, \"invoice\");\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n            </div>\r\n         </>\r\n      )\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   invoices: state.invoices,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadInvoice, invoicesPDF })(Invoice);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { format, getYear, getMonth, addMonths } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { FiSave } from \"react-icons/fi\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\n\r\nimport { loadCategories } from \"../../../../../actions/category\";\r\nimport {\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n} from \"../../../../../actions/enrollment\";\r\nimport { togglePopup } from \"../../../../../actions/global\";\r\n\r\nimport UsersSearch from \"../../sharedComp/search/UsersSearch\";\r\nimport PopUp from \"../../../../modal/PopUp\";\r\n\r\nconst Enrollment = ({\r\n   categories: { categories, loading },\r\n   enrollments: { enrollment, loadingEnrollment, enrollments },\r\n   match,\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n}) => {\r\n   const date = new Date();\r\n   const thisYear = getYear(date);\r\n   const currentMonth = getMonth(date) + 1;\r\n\r\n   const [formData, setFormData] = useState({\r\n      _id: match.params.enrollment_id ? match.params.enrollment_id : \"\",\r\n      student: null,\r\n      category: \"\",\r\n      year: \"\",\r\n      month: \"\",\r\n   });\r\n\r\n   const { year, category, month, _id, student } = formData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n   }, [loading, loadCategories]);\r\n\r\n   useEffect(() => {\r\n      if (_id !== \"\") {\r\n         if (loadingEnrollment) loadEnrollment(_id, true);\r\n         else\r\n            setFormData((prev) => ({\r\n               ...prev,\r\n               student: enrollment.student,\r\n               category: enrollment.category._id,\r\n               year: enrollment.year,\r\n            }));\r\n      }\r\n   }, [_id, loadingEnrollment, loadEnrollment, enrollment]);\r\n\r\n   const restore = () => {\r\n      setFormData({\r\n         ...formData,\r\n         student: null,\r\n      });\r\n   };\r\n\r\n   const selectUser = (user) => {\r\n      setFormData((prev) => ({ ...prev, student: user }));\r\n   };\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFormData({\r\n         ...formData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {_id === \"\" ? <h1>Nueva Inscripción</h1> : <h2>Editar inscripción</h2>}\r\n         <PopUp\r\n            confirm={() =>\r\n               registerUpdateEnrollment(\r\n                  {\r\n                     ...formData,\r\n                     student: student ? student._id : null,\r\n                     month:\r\n                        thisYear === Number(year) && currentMonth > 2\r\n                           ? month\r\n                           : 0,\r\n                  },\r\n                  enrollments.length > 0\r\n               )\r\n            }\r\n            info={`¿Está seguro que ${\r\n               _id !== \"\"\r\n                  ? \"desea modificar la inscripción\"\r\n                  : \"los datos son correctos\"\r\n            }?`}\r\n         />\r\n         {!_id && (\r\n            <div className=\"btn-right\">\r\n               <Link\r\n                  to=\"/enrollment/list\"\r\n                  onClick={() => window.scroll(0, 0)}\r\n                  className=\"btn btn-light\"\r\n               >\r\n                  <IoIosListBox />\r\n                  <span className=\"hide-sm\">&nbsp; Listado</span>\r\n               </Link>\r\n            </div>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               togglePopup(\"default\");\r\n            }}\r\n         >\r\n            <UsersSearch\r\n               primary={true}\r\n               disabled={_id}\r\n               autoComplete=\"off\"\r\n               selectUser={selectUser}\r\n               selectedUser={student}\r\n               usersType=\"student\"\r\n               restore={restore}\r\n            />\r\n            <div className={`form-group ${!student ? \"mt-3\" : \"\"}`}>\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" && \"lbl\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n                  disabled={_id !== \"\"}\r\n               >\r\n                  <option value=\"\">\r\n                     * Seleccione el año al que lo va a inscribir\r\n                  </option>\r\n                  <option value={thisYear}>{thisYear}</option>\r\n                  <option value={thisYear + 1}>{thisYear + 1}</option>\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" && \"lbl\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            {Number(year) === thisYear && currentMonth > 2 && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"month\"\r\n                     name=\"month\"\r\n                     onChange={onChange}\r\n                     value={month}\r\n                  >\r\n                     <option value=\"\">{`* Seleccione el mes a partir del cuál ${\r\n                        _id ? \"cambiará la inscripción\" : \"lo va a inscribir\"\r\n                     }`}</option>\r\n                     <option value={currentMonth}>\r\n                        {format(date, \"MMMM\", { locale: es }).replace(\r\n                           /\\b\\w/,\r\n                           (c) => c.toUpperCase()\r\n                        )}\r\n                     </option>\r\n                     <option value={currentMonth + 1}>\r\n                        {format(addMonths(date, 1), \"MMMM\", {\r\n                           locale: es,\r\n                        }).replace(/\\b\\w/, (c) => c.toUpperCase())}\r\n                     </option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"month\"\r\n                     className={`form-label ${month === \"\" && \"lbl\"}`}\r\n                  >\r\n                     Mes\r\n                  </label>\r\n               </div>\r\n            )}\r\n            <div className=\"show-md mt-4\"></div>\r\n            <div className=\"btn-center\">\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {_id !== \"\" ? (\r\n                     <>\r\n                        <FiSave />\r\n                        &nbsp; Guardar Cambios\r\n                     </>\r\n                  ) : (\r\n                     <>\r\n                        <FaUserEdit />\r\n                        &nbsp; Inscribir\r\n                     </>\r\n                  )}\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n   enrollments: state.enrollments,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadCategories,\r\n   registerUpdateEnrollment,\r\n   loadEnrollment,\r\n   togglePopup,\r\n})(Enrollment);\r\n","import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FiSave } from \"react-icons/fi\";\r\n\r\nconst EditButtons = ({ save, add, type }) => {\r\n   return (\r\n      <div className=\"btn-right mt-5\">\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               save();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FiSave />\r\n            <span className=\"hide-sm\">&nbsp; Guardar </span>\r\n         </button>\r\n         <button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n               e.preventDefault();\r\n               add();\r\n            }}\r\n            className=\"btn btn-primary\"\r\n         >\r\n            <FaPlus />\r\n            <span className=\"hide-sm\">&nbsp; Agregar {type}</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport { deleteTown, updateTowns } from \"../../../../../../../../actions/town\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst TownsTab = ({\r\n   towns: { towns, error },\r\n   togglePopup,\r\n   updateTowns,\r\n   deleteTown,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(towns);\r\n   }, [towns]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      const number = Number(e.target.name.substring(5, e.target.name.length));\r\n\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[number] = {\r\n         ...formData[number],\r\n         name: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addTown = () => {\r\n      let newFormData = [...formData];\r\n\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div className=\"mt-3\">\r\n            <PopUp\r\n               confirm={() => {\r\n                  if (popupType === \"save\") updateTowns(formData);\r\n                  else {\r\n                     if (formData[toDelete]._id === 0) {\r\n                        let newFormData = [...formData];\r\n                        newFormData.splice(toDelete, 1);\r\n                        setFormData(newFormData);\r\n                     } else deleteTown(formData[toDelete]._id);\r\n                  }\r\n               }}\r\n               info={`¿Está seguro que desea ${\r\n                  popupType === \"save\"\r\n                     ? \"guardar los cambios\"\r\n                     : \"eliminar la localidad\"\r\n               }?`}\r\n            />\r\n            <table className=\"smaller\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {formData.map((town, i) => (\r\n                     <tr key={i}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name={`input${i}`}\r\n                              onChange={onChange}\r\n                              value={town.name}\r\n                              placeholder=\"Nombre\"\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues((prev) => ({\r\n                                    ...prev,\r\n                                    toDelete: i,\r\n                                    popupType: \"delete\",\r\n                                 }));\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n            {formData.length === 0 && (\r\n               <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n                  {error.msg}\r\n               </p>\r\n            )}\r\n            <EditButtons\r\n               add={addTown}\r\n               save={() => {\r\n                  setAdminValues((prev) => ({\r\n                     ...prev,\r\n                     popupType: \"save\",\r\n                  }));\r\n                  togglePopup(\"default\");\r\n               }}\r\n               type=\"Localidad\"\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateTowns,\r\n   deleteTown,\r\n   togglePopup,\r\n})(TownsTab);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteNeighbourhood,\r\n   updateNeighbourhoods,\r\n} from \"../../../../../../../../actions/neighbourhood\";\r\nimport { togglePopup } from \"../../../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../../../modal/PopUp\";\r\nimport EditButtons from \"../../../sharedComp/EditButtons\";\r\n\r\nconst NeighbourhoodTab = ({\r\n   towns: { towns },\r\n   neighbourhoods: { neighbourhoods, error },\r\n   togglePopup,\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      setFormData(neighbourhoods);\r\n   }, [neighbourhoods]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      let newFormData = [...formData];\r\n\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const addNeighbourhood = () => {\r\n      let newFormData = [...formData];\r\n      newFormData.push({\r\n         _id: 0,\r\n         name: \"\",\r\n         town: \"\",\r\n      });\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <div className=\"mt-3\">\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateNeighbourhoods(formData);\r\n               else {\r\n                  if (formData[toDelete]._id === 0) {\r\n                     let newFormData = [...formData];\r\n                     newFormData.splice(toDelete, 1);\r\n                     setFormData(newFormData);\r\n                  } else deleteNeighbourhood(formData[toDelete]._id);\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el barrio\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Localidad</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {formData.map((item, i) => (\r\n                  <tr key={i}>\r\n                     <td>\r\n                        <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={item.name}\r\n                           placeholder=\"Nombre\"\r\n                        />\r\n                     </td>\r\n                     <td>\r\n                        <select\r\n                           name=\"town\"\r\n                           onChange={(e) => onChange(e, i)}\r\n                           value={formData[i].town}\r\n                        >\r\n                           <option value=\"\">\r\n                              *Seleccione la localidad a la que pertenece\r\n                           </option>\r\n                           {towns.map((town, index) => (\r\n                              <option key={index} value={town._id}>\r\n                                 {town.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </td>\r\n                     <td>\r\n                        <button\r\n                           type=\"button\"\r\n                           onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setAdminValues((prev) => ({\r\n                                 ...prev,\r\n                                 popupType: \"delete\",\r\n                                 toDelete: i,\r\n                              }));\r\n                              togglePopup(\"default\");\r\n                           }}\r\n                           className=\"btn btn-danger\"\r\n                        >\r\n                           <FaTrashAlt />\r\n                        </button>\r\n                     </td>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {formData.length === 0 && (\r\n            <p className=\"heading-tertiary text-dark text-center mt-1\">\r\n               {error.msg}\r\n            </p>\r\n         )}\r\n         <EditButtons\r\n            add={addNeighbourhood}\r\n            save={() => {\r\n               setAdminValues((prev) => ({\r\n                  ...prev,\r\n                  popupType: \"save\",\r\n               }));\r\n               togglePopup(\"default\");\r\n            }}\r\n            type=\"Barrio\"\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   neighbourhoods: state.neighbourhoods,\r\n   towns: state.towns,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   updateNeighbourhoods,\r\n   deleteNeighbourhood,\r\n   togglePopup,\r\n})(NeighbourhoodTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadTowns } from \"../../../../../../actions/town\";\r\nimport { loadNeighbourhoods } from \"../../../../../../actions/neighbourhood\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport TownsTab from \"./tabs/TownsTab\";\r\nimport NeighbourhoodTab from \"./tabs/NeighbourhoodTab\";\r\n\r\nconst EditNeigTowns = ({\r\n   towns: { loading: loadingTowns },\r\n   neighbourhoods: { loading },\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n}) => {\r\n   useEffect(() => {\r\n      if (loading) loadNeighbourhoods(null, false);\r\n   }, [loadNeighbourhoods, loading]);\r\n\r\n   useEffect(() => {\r\n      if (loadingTowns) loadTowns(true);\r\n   }, [loadingTowns, loadTowns]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Localidades y Barrios</h2>\r\n         {!loading && !loadingTowns && (\r\n            <Tabs\r\n               tablist={[\"Localidades\", \"Barrios\"]}\r\n               panellist={[TownsTab, NeighbourhoodTab]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   towns: state.towns,\r\n   neighbourhoods: state.neighbourhoods,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadNeighbourhoods,\r\n   loadTowns,\r\n})(EditNeigTowns);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   deleteExpenceType,\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n} from \"../../../../../../actions/expence\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EditExpenceType = ({\r\n   expences: { expencetypes, loadingET },\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n}) => {\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n   });\r\n\r\n   const { popupType, toDelete } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(true, true);\r\n      else setFormData(expencetypes);\r\n   }, [loadingET, loadExpenceTypes, expencetypes]);\r\n\r\n   const onChange = (e, index) => {\r\n      e.persist();\r\n      const newFormData = [...formData];\r\n      newFormData[index] = {\r\n         ...formData[index],\r\n         [e.target.name]: e.target.value,\r\n      };\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Editar Tipo de Movimientos</h2>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateExpenceTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteExpenceType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de movimiento\"\r\n            }?`}\r\n         />\r\n         <table className=\"smaller\">\r\n            <thead>\r\n               <tr>\r\n                  <th>Nombre</th>\r\n                  <th>Tipo</th>\r\n                  <th>&nbsp;</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {!loadingET &&\r\n                  formData.map((exptyp, index) => (\r\n                     <tr key={index}>\r\n                        <td>\r\n                           <input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"Nombre\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.name}\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <select\r\n                              name=\"type\"\r\n                              onChange={(e) => onChange(e, index)}\r\n                              value={exptyp.type}\r\n                           >\r\n                              <option value=\"\">\r\n                                 Seleccione el tipo de movimiento\r\n                              </option>\r\n                              <option value=\"expence\">Gasto</option>\r\n                              <option value=\"withdrawal\">Retiro</option>\r\n                           </select>\r\n                        </td>\r\n                        <td>\r\n                           <button\r\n                              type=\"button\"\r\n                              onClick={(e) => {\r\n                                 e.preventDefault();\r\n                                 setAdminValues({\r\n                                    ...adminValues,\r\n                                    toDelete: index,\r\n                                    popupType: \"delete\",\r\n                                 });\r\n                                 togglePopup(\"default\");\r\n                              }}\r\n                              className=\"btn btn-danger\"\r\n                           >\r\n                              <FaTrashAlt />\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               const newFormData = [...formData];\r\n               newFormData.push({\r\n                  _id: 0,\r\n                  name: \"\",\r\n                  type: \"\",\r\n               });\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Gasto\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadExpenceTypes,\r\n   updateExpenceTypes,\r\n   deleteExpenceType,\r\n   togglePopup,\r\n})(EditExpenceType);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nimport {\r\n   loadGradeTypes,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n} from \"../../../../../../actions/grade\";\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\nimport EditButtons from \"../sharedComp/EditButtons\";\r\n\r\nconst EditGradeType = ({\r\n   categories: { categories, loading },\r\n   grades: { gradeTypes, loadingGT },\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n}) => {\r\n   const [adminValues, setAdminValues] = useState({\r\n      popupType: \"\",\r\n      toDelete: \"\",\r\n      newRow: [],\r\n   });\r\n\r\n   const [formData, setFormData] = useState([]);\r\n\r\n   const { popupType, toDelete, newRow } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingGT) loadGradeTypes(null, true);\r\n      else setFormData(gradeTypes);\r\n   }, [loadingGT, loadGradeTypes, gradeTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadCategories(false);\r\n      else {\r\n         let row = [];\r\n         categories.forEach((item) => {\r\n            if (item.name !== \"Inscripción\")\r\n               row.push({ category: item._id, checks: false });\r\n         });\r\n\r\n         row.push({ category: null, percentage: false });\r\n\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            newRow: { _id: 0, name: \"\", categories: row },\r\n         }));\r\n      }\r\n   }, [categories, loading, loadCategories]);\r\n\r\n   const onChange = (e, index, i) => {\r\n      e.persist();\r\n\r\n      let newFormData = [...formData];\r\n\r\n      if (e.target.name === \"name\") newFormData[index].name = e.target.value;\r\n      else newFormData[index].categories[i].checks = e.target.checked;\r\n\r\n      setFormData(newFormData);\r\n   };\r\n\r\n   const header = () => {\r\n      return \"K,IC,IB,IA,P,J,1°,2°,3°,4°,5°,6°,C,PF,%\"\r\n         .split(\",\")\r\n         .map((header, index) => <th key={index}>{header}</th>);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            confirm={() => {\r\n               if (popupType === \"save\") updateGradeTypes(formData);\r\n               else {\r\n                  if (formData[toDelete]._id !== 0)\r\n                     deleteGradeType(formData[toDelete]._id);\r\n                  else {\r\n                     formData.splice(toDelete, 1);\r\n                     setFormData(formData);\r\n                  }\r\n               }\r\n            }}\r\n            info={`¿Está seguro que desea ${\r\n               popupType === \"save\"\r\n                  ? \"guardar los cambios\"\r\n                  : \"eliminar el tipo de nota\"\r\n            }?`}\r\n         />\r\n         <h2>Editar Tipo de Notas</h2>\r\n         <div className=\"wrapper both mt-3\">\r\n            <table className=\"stick\">\r\n               <thead>\r\n                  <tr>\r\n                     <th> &nbsp; Nombre &nbsp; </th>\r\n                     {header()}\r\n                     <th colSpan=\"2\">&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     formData.map((row, index) => (\r\n                        <tr key={index}>\r\n                           <td key={\"name\" + index}>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 value={row.name}\r\n                                 placeholder=\"Nombre\"\r\n                                 onChange={(e) => onChange(e, index)}\r\n                              />\r\n                           </td>\r\n                           {row.categories.map((category, i) => (\r\n                              <td key={i}>\r\n                                 <input\r\n                                    className=\"option-input\"\r\n                                    type=\"checkbox\"\r\n                                    name=\"checks\"\r\n                                    onChange={(e) => onChange(e, index, i)}\r\n                                    checked={category.checks}\r\n                                 />\r\n                              </td>\r\n                           ))}\r\n                           <td>\r\n                              <button\r\n                                 type=\"button\"\r\n                                 onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setAdminValues({\r\n                                       ...adminValues,\r\n                                       toDelete: index,\r\n                                       popupType: \"delete\",\r\n                                    });\r\n                                    togglePopup(\"default\");\r\n                                 }}\r\n                                 className=\"btn btn-danger\"\r\n                              >\r\n                                 <FaTrashAlt />\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         <EditButtons\r\n            save={() => {\r\n               setAdminValues({\r\n                  ...adminValues,\r\n                  popupType: \"save\",\r\n               });\r\n               togglePopup(\"default\");\r\n            }}\r\n            add={() => {\r\n               let newFormData = [...formData];\r\n               newFormData.push(JSON.parse(JSON.stringify(newRow)));\r\n               setFormData(newFormData);\r\n            }}\r\n            type=\"Tipo de Nota\"\r\n         />\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadGradeTypes,\r\n   loadCategories,\r\n   updateGradeTypes,\r\n   deleteGradeType,\r\n   togglePopup,\r\n})(EditGradeType);\r\n","import React from \"react\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport {\r\n   HiOutlineChevronDoubleLeft,\r\n   HiOutlineChevronDoubleRight,\r\n} from \"react-icons/hi\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ListButtons = ({ changePage, items, page, pdfGenerator, type }) => {\r\n   const itemsNumber = page * 10;\r\n   const sub = items.length - itemsNumber;\r\n   return (\r\n      <>\r\n         {items.length > 10 && (\r\n            <div className=\"btn-list btn-center\">\r\n               {page !== 0 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page - 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleLeft />\r\n                  </button>\r\n               )}\r\n\r\n               {sub >= 10 && (\r\n                  <button\r\n                     type=\"button\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        changePage(page + 1);\r\n                     }}\r\n                     className=\"btn btn-primary\"\r\n                  >\r\n                     <HiOutlineChevronDoubleRight />\r\n                  </button>\r\n               )}\r\n            </div>\r\n         )}\r\n\r\n         <div className=\"btn-right\">\r\n            <div className=\"tooltip\">\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={(e) => {\r\n                     e.preventDefault();\r\n                     pdfGenerator();\r\n                  }}\r\n               >\r\n                  <ImFilePdf />\r\n               </button>\r\n               <span className=\"tooltiptext\">PDF lista de {type}</span>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst DateFilter = ({ startDate, endDate, onChange }) => {\r\n   return (\r\n      <div className=\"date-filter\">\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"startDate\"\r\n               value={startDate}\r\n               max={endDate !== \"\" ? endDate : \"\"}\r\n               id=\"startDate\"\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"form-label-show\">\r\n               Ingrese desde que fecha desea ver\r\n            </label>\r\n         </div>\r\n         <div>\r\n            <input\r\n               className=\"form-input\"\r\n               type=\"date\"\r\n               name=\"endDate\"\r\n               value={endDate}\r\n               min={startDate !== \"\" ? startDate : \"\"}\r\n               onChange={onChange}\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"form-label-show\">\r\n               Ingrese hasta que fecha desea ver\r\n            </label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DateFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaEdit, FaTrashAlt, FaPlus } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadEnrollments,\r\n   deleteEnrollment,\r\n   enrollmentsPDF,\r\n   clearEnrollment,\r\n} from \"../../../../../../actions/enrollment\";\r\nimport {\r\n   loadCategories,\r\n   clearCategories,\r\n} from \"../../../../../../actions/category\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\nimport { togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameFilter from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nconst EnrollmentList = ({\r\n   enrollments: { enrollments, loading },\r\n   categories: { categories, loading: loadingCategories },\r\n   loadEnrollments,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   deleteEnrollment,\r\n   togglePopup,\r\n   loadCategories,\r\n   enrollmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3)\r\n      .fill()\r\n      .map((item, index) => thisYear - 1 + index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n   });\r\n\r\n   const { toDelete, page } = adminValues;\r\n   const { startDate, endDate, category, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadEnrollments({}, true);\r\n   }, [loading, loadEnrollments]);\r\n\r\n   useEffect(() => {\r\n      if (loadingCategories) loadCategories(false);\r\n   }, [loadCategories, loadingCategories]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Inscripciones</h2>\r\n         <PopUp\r\n            confirm={() => deleteEnrollment(toDelete)}\r\n            info=\"¿Está seguro que desea eliminar la inscripción?\"\r\n         />\r\n         <div className=\"btn-right\">\r\n            <Link\r\n               to=\"/enrollment/register\"\r\n               className=\"btn btn-dark\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearEnrollment();\r\n                  clearCategories();\r\n               }}\r\n            >\r\n               <FaPlus />\r\n               <span className=\"hide-sm\">&nbsp; Inscripción</span>\r\n            </Link>\r\n         </div>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadEnrollments(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameFilter name={name} lastname={lastname} onChange={onChange} />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  onChange={onChange}\r\n                  value={category}\r\n               >\r\n                  <option value=\"\">* Seleccione Categoría</option>\r\n                  {categories.map(\r\n                     (category) =>\r\n                        category.name !== \"Inscripción\" && (\r\n                           <option key={category._id} value={category._id}>\r\n                              {category.name}\r\n                           </option>\r\n                        )\r\n                  )}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"category\"\r\n                  className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Categoría\r\n               </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Año</th>\r\n                     <th>&nbsp;</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     enrollments.map(\r\n                        (enroll, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={enroll._id}>\r\n                                 <td>\r\n                                    {format(new Date(enroll.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{enroll.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${enroll.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {enroll.student.lastname +\r\n                                          \", \" +\r\n                                          enroll.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{enroll.category.name}</td>\r\n                                 <td>{enroll.year}</td>\r\n                                 {Number(enroll.year) >= thisYear ? (\r\n                                    <>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/enrollment/edit/${enroll._id}`}\r\n                                             className=\"btn btn-success\"\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearEnrollment();\r\n                                                clearCategories();\r\n                                             }}\r\n                                          >\r\n                                             <FaEdit />\r\n                                          </Link>\r\n                                       </td>\r\n                                       <td>\r\n                                          <button\r\n                                             className=\"btn btn-danger\"\r\n                                             onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                setAdminValues((prev) => ({\r\n                                                   ...prev,\r\n                                                   toDelete: enroll._id,\r\n                                                }));\r\n                                                togglePopup(\"default\");\r\n                                             }}\r\n                                          >\r\n                                             <FaTrashAlt />\r\n                                          </button>\r\n                                       </td>\r\n                                    </>\r\n                                 ) : (\r\n                                    <>\r\n                                       <td></td>\r\n                                       <td></td>\r\n                                    </>\r\n                                 )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               items={enrollments}\r\n               type=\"inscripciones\"\r\n               pdfGenerator={() => enrollmentsPDF(enrollments)}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   enrollments: state.enrollments,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadEnrollments,\r\n   loadCategories,\r\n   deleteEnrollment,\r\n   clearEnrollment,\r\n   clearCategories,\r\n   clearProfile,\r\n   enrollmentsPDF,\r\n   togglePopup,\r\n})(EnrollmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInvoices,\r\n   clearInvoice,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n} from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst IncomeList = ({\r\n   auth: { userLogged },\r\n   invoices: { loading, invoices },\r\n   registers: { register, loadingRegister },\r\n   loadInvoices,\r\n   loadRegister,\r\n   clearInvoice,\r\n   invoicesPDF,\r\n   deleteInvoice,\r\n   togglePopup,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { startDate, endDate, name, lastname } = filterData;\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInvoices({}, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: invoices.reduce((sum, invoice) => sum + invoice.total, 0),\r\n         }));\r\n      }\r\n   }, [loading, loadInvoices, invoices]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadRegister, loadingRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar la factura?\"\r\n            confirm={() => deleteInvoice(toDelete)}\r\n         />\r\n         <h2>Listado Ingresos</h2>\r\n         {userLogged.type !== \"secretary\" && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form bigger\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInvoices(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <NameField\r\n               name={name}\r\n               lastname={lastname}\r\n               onChange={onChange}\r\n               lastnamePlaceholder=\"Apellido alumno\"\r\n               namePlaceholder=\"Nombre alumno\"\r\n            />\r\n\r\n            <div className=\"btn-right mb-3\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         {!loadingRegister && !loading && invoices[0] && (\r\n            <div className=\"wrapper\">\r\n               <table className=\"end-btn\">\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Fecha</th>\r\n                        <th>N° Factura</th>\r\n                        <th>Nombre</th>\r\n                        <th>Total</th>\r\n                        <th>&nbsp;</th>\r\n                        {invoices[0].register &&\r\n                           invoices[0].register === register._id &&\r\n                           register.temporary && <th>&nbsp;</th>}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {invoices.map(\r\n                        (invoice, index, arr) =>\r\n                           index >= page * 10 &&\r\n                           index < (page + 1) * 10 && (\r\n                              <tr key={index}>\r\n                                 <td>\r\n                                    {format(new Date(invoice.date), \"dd/MM/yy\")}\r\n                                 </td>\r\n                                 <td>{invoice.invoiceid}</td>\r\n                                 <td>{setName(invoice.user)}</td>\r\n                                 <td>${formatNumber(invoice.total)}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/invoice/single/${invoice._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearInvoice();\r\n                                       }}\r\n                                       className=\"btn-text\"\r\n                                    >\r\n                                       Ver más &rarr;\r\n                                    </Link>\r\n                                 </td>\r\n                                 {arr[0].register &&\r\n                                    arr[0].register === register._id &&\r\n                                    register.temporary && (\r\n                                       <td>\r\n                                          {invoice.register &&\r\n                                             invoice.register ===\r\n                                                register._id && (\r\n                                                <button\r\n                                                   type=\"button\"\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               invoice._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    )}\r\n                              </tr>\r\n                           )\r\n                     )}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )}\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"ingresos\"\r\n               items={invoices}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => invoicesPDF(invoices, \"list\")}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   invoices: state.invoices,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInvoices,\r\n   deleteInvoice,\r\n   invoicesPDF,\r\n   clearInvoice,\r\n   loadRegister,\r\n   togglePopup,\r\n})(IncomeList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadTransactions,\r\n   deleteExpence,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { clearInvoice } from \"../../../../../../actions/invoice\";\r\nimport { loadRegister } from \"../../../../../../actions/register\";\r\nimport { formatNumber, togglePopup } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\nimport PopUp from \"../../../../../modal/PopUp\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TransactionList = ({\r\n   auth: { userLogged },\r\n   expences: { transactions, loading },\r\n   registers: { register, loadingRegister },\r\n   loadTransactions,\r\n   togglePopup,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   transactionsPDF,\r\n}) => {\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const expenceType = {\r\n      withdrawal: {\r\n         trClass: \"bg-withdrawal\",\r\n         nameType: \"Retiro\",\r\n      },\r\n      expence: {\r\n         trClass: \"bg-expence\",\r\n         nameType: \"Gasto\",\r\n      },\r\n   };\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      transactionType: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, transactionType } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      toDelete: \"\",\r\n      page: 0,\r\n      total: 0,\r\n   });\r\n\r\n   const { toDelete, page, total } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   useEffect(() => {\r\n      if (loading)\r\n         loadTransactions({ ...(!isAdmin && { isNotAdmin: !isAdmin }) }, true);\r\n      else {\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce(\r\n               (sum, item) =>\r\n                  !isAdmin || transactionType !== \"\"\r\n                     ? sum + (item.expencetype ? item.value : item.total)\r\n                     : sum + (item.expencetype ? -item.value : item.total),\r\n               0\r\n            ),\r\n         }));\r\n      }\r\n      // eslint-disable-next-line\r\n   }, [loading, loadTransactions, isAdmin, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   const setName = (user) => {\r\n      if (user.user_id === null) return \"Usuario Eliminado\";\r\n\r\n      const lastname = user.user_id ? user.user_id.lastname : user.lastname;\r\n      const name = user.user_id ? user.user_id.name : user.name;\r\n\r\n      return `${lastname ? `${lastname}${name ? \", \" : \"\"}` : \"\"}${\r\n         name ? name : \"\"\r\n      }`;\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado {isAdmin ? \"Movimientos\" : \"Egresos\"}</h2>\r\n         <PopUp\r\n            info=\"¿Está seguro que desea eliminar el movimiento?\"\r\n            confirm={() => deleteExpence(toDelete)}\r\n         />\r\n         {isAdmin && total !== 0 && (\r\n            <p className=\"heading-tertiary text-moved-right\">\r\n               Total: ${formatNumber(total)}\r\n            </p>\r\n         )}\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadTransactions(filterData, true);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            {isAdmin && (\r\n               <div className=\"form-group\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"transactionType\"\r\n                     name=\"transactionType\"\r\n                     onChange={onChange}\r\n                     value={transactionType}\r\n                  >\r\n                     <option value=\"\">Seleccione el tipo de movimiento</option>\r\n                     <option value=\"income\">Ingreso</option>\r\n                     <option value=\"expence\">Gasto</option>\r\n                     <option value=\"withdrawal\">Retiro</option>\r\n                  </select>\r\n                  <label\r\n                     htmlFor=\"transactionType\"\r\n                     className={`form-label ${\r\n                        transactionType === \"\" ? \"lbl\" : \"\"\r\n                     }`}\r\n                  >\r\n                     Tipo de Movimiento\r\n                  </label>\r\n               </div>\r\n            )}\r\n\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp; Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table className=\"expences\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                     <th>&nbsp;</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     !loadingRegister &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <React.Fragment key={i}>\r\n                                 {transaction.expencetype ? (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className={\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].trClass\r\n                                       }\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>{`${\r\n                                          expenceType[\r\n                                             transaction.expencetype.type\r\n                                          ].nameType\r\n                                       } - ${\r\n                                          transaction.expencetype.name\r\n                                       }`}</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.value)}\r\n                                       </td>\r\n                                       <td>{transaction.description}</td>\r\n                                       <td>\r\n                                          {transaction.register ===\r\n                                             register._id &&\r\n                                             register.temporary && (\r\n                                                <button\r\n                                                   onClick={(e) => {\r\n                                                      e.preventDefault();\r\n                                                      setAdminValues(\r\n                                                         (prev) => ({\r\n                                                            ...prev,\r\n                                                            toDelete:\r\n                                                               transaction._id,\r\n                                                         })\r\n                                                      );\r\n                                                      togglePopup(\"default\");\r\n                                                   }}\r\n                                                   className=\"btn btn-danger\"\r\n                                                >\r\n                                                   <FaTrashAlt />\r\n                                                </button>\r\n                                             )}\r\n                                       </td>\r\n                                    </tr>\r\n                                 ) : (\r\n                                    <tr\r\n                                       key={transaction._id}\r\n                                       className=\"bg-income\"\r\n                                    >\r\n                                       <td>\r\n                                          {format(\r\n                                             new Date(transaction.date),\r\n                                             \"dd/MM/yy\"\r\n                                          )}\r\n                                       </td>\r\n                                       <td>Ingreso</td>\r\n                                       <td>\r\n                                          ${formatNumber(transaction.total)}\r\n                                       </td>\r\n                                       <td>\r\n                                          Factura {setName(transaction.user)}\r\n                                       </td>\r\n                                       <td>\r\n                                          <Link\r\n                                             to={`/invoice/single/${transaction._id}`}\r\n                                             onClick={() => {\r\n                                                window.scroll(0, 0);\r\n                                                clearInvoice();\r\n                                             }}\r\n                                             className=\"btn-text\"\r\n                                          >\r\n                                             Ver más &rarr;\r\n                                          </Link>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )}\r\n                              </React.Fragment>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n   registers: state.registers,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadTransactions,\r\n   loadRegister,\r\n   deleteExpence,\r\n   clearInvoice,\r\n   togglePopup,\r\n   transactionsPDF,\r\n})(TransactionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadInstallments,\r\n   installmentsPDF,\r\n} from \"../../../../../../actions/installment\";\r\nimport { getEstimatedProfit } from \"../../../../../../actions/installment\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport { clearProfile } from \"../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport NameField from \"../../../sharedComp/NameField\";\r\n\r\nconst InstallmentList = ({\r\n   installments: {\r\n      installments,\r\n      loading,\r\n      otherValues: { estimatedProfit },\r\n   },\r\n   auth: { userLogged },\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   clearProfile,\r\n   installmentsPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const installmentName =\r\n      \"Inscripción,Clases Particulares,Examen Libre,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre\".split(\r\n         \",\"\r\n      );\r\n   const isAdmin = userLogged.type !== \"secretary\";\r\n\r\n   const yearArray = new Array(6)\r\n      .fill()\r\n      .map((item, index) => thisYear + 1 - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      number: \"\",\r\n      year: thisYear,\r\n      name: \"\",\r\n      lastname: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   const { number, year, name, lastname } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadInstallments({}, true, false, \"all\");\r\n      else {\r\n         if (isAdmin)\r\n            setAdminValues((prev) => ({\r\n               ...prev,\r\n               total: installments.reduce(\r\n                  (sum, installment) => sum + installment.value,\r\n                  0\r\n               ),\r\n            }));\r\n      }\r\n   }, [installments, loading, loadInstallments, isAdmin]);\r\n\r\n   useEffect(() => {\r\n      if (estimatedProfit === \"\" && isAdmin) getEstimatedProfit();\r\n   }, [estimatedProfit, getEstimatedProfit, isAdmin]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData((prev) => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value,\r\n      }));\r\n   };\r\n\r\n   const installmentNames = () => {\r\n      return installmentName.map((item, index) => (\r\n         <React.Fragment key={index}>\r\n            {item !== \"\" && <option value={index}>{item}</option>}\r\n         </React.Fragment>\r\n      ));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"p-1\">Lista de Deudas</h2>\r\n\r\n         {isAdmin && (\r\n            <>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Total: ${formatNumber(total)}\r\n               </p>\r\n               <p className=\"heading-tertiary text-moved-right\">\r\n                  Ganancia Estimada por Mes: ${formatNumber(estimatedProfit)}\r\n               </p>\r\n            </>\r\n         )}\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadInstallments(filterData, true, false, \"all\");\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  onChange={onChange}\r\n                  value={number}\r\n               >\r\n                  <option value=\"\">* Seleccione la cuota</option>\r\n                  {installmentNames()}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"number\"\r\n                  className={`form-label ${number === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Cuota\r\n               </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <NameField name={name} lastname={lastname} onChange={onChange} />\r\n\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Nombre</th>\r\n                     <th>Cuota</th>\r\n                     <th>Año</th>\r\n                     <th>Valor</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     installments.map(\r\n                        (installment, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={installment._id}>\r\n                                 <td>\r\n                                    <Link\r\n                                       to={`/index/dashboard/${installment.student._id}`}\r\n                                       className=\"btn-text\"\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {installment.student.lastname +\r\n                                          \", \" +\r\n                                          installment.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{installmentName[installment.number]}</td>\r\n                                 <td>{installment.year}</td>\r\n                                 <td\r\n                                    className={\r\n                                       installment.status === \"expired\"\r\n                                          ? \"installment\"\r\n                                          : \"\"\r\n                                    }\r\n                                 >\r\n                                    {\"$\" + formatNumber(installment.value)}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"deudas\"\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               items={installments}\r\n               pdfGenerator={() => installmentsPDF(installments)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   installments: state.installments,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadInstallments,\r\n   getEstimatedProfit,\r\n   installmentsPDF,\r\n   clearProfile,\r\n})(InstallmentList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosListBox } from \"react-icons/io\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\nimport {\r\n   loadRegisters,\r\n   loadRegister,\r\n   registerPDF,\r\n   clearRegisters,\r\n} from \"../../../../../../actions/register\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst RegisterList = ({\r\n   registers: { registers, loading, loadingRegister, register: last },\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { page } = adminValues;\r\n\r\n   const { startDate, endDate } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading || (registers && registers[0].temporary === undefined))\r\n         loadRegisters({}, true, false);\r\n   }, [loading, loadRegisters, registers]);\r\n\r\n   useEffect(() => {\r\n      if (loadingRegister) loadRegister(false);\r\n   }, [loadingRegister, loadRegister]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Caja Diaria</h2>\r\n         <div className=\"btn-right mb-1\">\r\n            <Link\r\n               to=\"/register/monthly-list\"\r\n               onClick={() => {\r\n                  window.scroll(0, 0);\r\n                  clearRegisters();\r\n               }}\r\n               className=\"btn btn-light\"\r\n            >\r\n               <IoIosListBox />\r\n               <span className=\"hide-sm\">&nbsp;Listado</span>&nbsp;Mensual\r\n            </Link>\r\n         </div>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadRegisters(filterData, true, false);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"btn-right my-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Plata Caja</th>\r\n                     <th>Diferencia</th>\r\n                     <th>Detalles</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map(\r\n                        (register, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 &&\r\n                           register &&\r\n                           register.temporary === false && (\r\n                              <tr key={i}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(register.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.income !== 0 &&\r\n                                       \"$\" + formatNumber(register.income)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.expence !== 0 &&\r\n                                       \"$\" + formatNumber(register.expence)}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.withdrawal !== 0 &&\r\n                                       \"$\" + formatNumber(register.withdrawal)}\r\n                                 </td>\r\n                                 <td>\r\n                                    ${formatNumber(register.registermoney)}\r\n                                 </td>\r\n                                 <td\r\n                                    className={\r\n                                       register.difference < 0 ? \"debt\" : \"\"\r\n                                    }\r\n                                 >\r\n                                    {register.difference !== 0 &&\r\n                                       register.difference &&\r\n                                       (register.difference < 0\r\n                                          ? \"-$\" +\r\n                                            formatNumber(\r\n                                               Math.abs(register.difference)\r\n                                            )\r\n                                          : \"+$\" +\r\n                                            formatNumber(register.difference))}\r\n                                 </td>\r\n                                 <td>\r\n                                    {register.description &&\r\n                                       register.description}\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               items={registers}\r\n               type=\"cajas diarias\"\r\n               page={page}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => registerPDF(registers)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   auth: state.auth,\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   loadRegister,\r\n   clearRegisters,\r\n   registerPDF,\r\n})(RegisterList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\nimport { loadGradesAv, gradesPDF } from \"../../../../../../../../actions/grade\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AverageTab({\r\n   grades: { grades: students, loading },\r\n   categories: { categories },\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadGradesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"Cantidad\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  Cantidad\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Promedio</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.average}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"mejores promedios\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => gradesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   grades: state.grades,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   gradesPDF,\r\n   loadGradesAv,\r\n   clearProfile,\r\n})(AverageTab);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n} from \"../../../../../../../../actions/attendance\";\r\nimport { clearProfile } from \"../../../../../../../../actions/user\";\r\n\r\nimport ListButtons from \"../../../sharedComp/ListButtons\";\r\n\r\nfunction AttendanceTab({\r\n   attendances: { attendances: students, loading },\r\n   categories: { categories },\r\n   loadAttendancesAv,\r\n   clearProfile,\r\n   attendancesPDF,\r\n}) {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      quantity: \"\",\r\n      category: \"\",\r\n      year: thisYear,\r\n   });\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      page: 0,\r\n   });\r\n\r\n   const { quantity, category, year } = filterData;\r\n\r\n   const { page } = adminValues;\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadAttendancesAv(filterData);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <div className=\"two-in-row\">\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"category\"\r\n                     name=\"category\"\r\n                     onChange={onChange}\r\n                     value={category}\r\n                  >\r\n                     <option value=\"\">* Seleccione Categoría</option>\r\n                     {categories.map(\r\n                        (category) =>\r\n                           category.name !== \"Inscripción\" && (\r\n                              <option key={category._id} value={category._id}>\r\n                                 {category.name}\r\n                              </option>\r\n                           )\r\n                     )}\r\n                  </select>\r\n                  <select\r\n                     className=\"form-input\"\r\n                     id=\"year\"\r\n                     name=\"year\"\r\n                     onChange={onChange}\r\n                     value={year}\r\n                  >\r\n                     <option value=\"\">* Seleccione el Año</option>\r\n                     {yearArray.map((item) => (\r\n                        <option key={item} value={item}>\r\n                           {item}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n               <div className=\"two-in-row\">\r\n                  <label\r\n                     htmlFor=\"category\"\r\n                     className={`form-label ${category === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Categoría\r\n                  </label>\r\n                  <label\r\n                     htmlFor=\"year\"\r\n                     className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n                  >\r\n                     Año\r\n                  </label>\r\n               </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  className=\"form-input\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={onChange}\r\n                  name=\"quantity\"\r\n                  id=\"quantity\"\r\n                  placeholder=\"N° Faltas\"\r\n               />\r\n               <label htmlFor=\"quantity\" className=\"form-label\">\r\n                  N° Faltas\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper mt-3\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Legajo</th>\r\n                     <th>Nombre</th>\r\n                     <th>Categoría</th>\r\n                     <th>Faltas</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     students.map(\r\n                        (item, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={i}>\r\n                                 <td>{item.student.studentnumber}</td>\r\n                                 <td>\r\n                                    <Link\r\n                                       className=\"btn-text\"\r\n                                       to={`/index/dashboard/${item.student._id}`}\r\n                                       onClick={() => {\r\n                                          window.scroll(0, 0);\r\n                                          clearProfile();\r\n                                       }}\r\n                                    >\r\n                                       {item.student.lastname +\r\n                                          \", \" +\r\n                                          item.student.name}\r\n                                    </Link>\r\n                                 </td>\r\n                                 <td>{item.category.name}</td>\r\n                                 <td>{item.quantity}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               type=\"asistencias\"\r\n               page={page}\r\n               items={students}\r\n               pdfGenerator={() => attendancesPDF(null, students, { year })}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   attendances: state.attendances,\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n   loadAttendancesAv,\r\n   attendancesPDF,\r\n   clearProfile,\r\n})(AttendanceTab);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loadCategories } from \"../../../../../../actions/category\";\r\n\r\nimport Tabs from \"../../../sharedComp/Tabs\";\r\nimport Average from \"./tabs/AverageTab\";\r\nimport Attendance from \"./tabs/AttendanceTab\";\r\n\r\nconst MentionList = ({ loadCategories, categories: { loading } }) => {\r\n   useEffect(() => {\r\n      loadCategories(false);\r\n   }, [loadCategories]);\r\n\r\n   return (\r\n      <>\r\n         <h2>Menciones fin de año</h2>\r\n         {!loading && (\r\n            <Tabs\r\n               tablist={[\"Promedio\", \"Asistencia\"]}\r\n               panellist={[Average, Attendance]}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   categories: state.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadCategories })(MentionList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport format from \"date-fns/format\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport {\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n} from \"../../../../../../actions/expence\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nimport ListButtons from \"../sharedComp/ListButtons\";\r\nimport DateFilter from \"../sharedComp/DateFilter\";\r\n\r\nconst WithdrawalList = ({\r\n   expences: { transactions, loading, expencetypes, loadingET },\r\n   loadWithdrawals,\r\n   loadExpenceTypes,\r\n   transactionsPDF,\r\n}) => {\r\n   const [filterData, setFilterData] = useState({\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      expencetype: \"\",\r\n   });\r\n\r\n   const { startDate, endDate, expencetype } = filterData;\r\n\r\n   const [adminValues, setAdminValues] = useState({\r\n      total: 0,\r\n      page: 0,\r\n   });\r\n\r\n   const { total, page } = adminValues;\r\n\r\n   useEffect(() => {\r\n      if (loadingET) loadExpenceTypes(false, false);\r\n   }, [loadingET, loadExpenceTypes]);\r\n\r\n   useEffect(() => {\r\n      if (loading) loadWithdrawals({}, true);\r\n      else\r\n         setAdminValues((prev) => ({\r\n            ...prev,\r\n            total: transactions.reduce((sum, item) => sum + item.value, 0),\r\n         }));\r\n   }, [loading, loadWithdrawals, transactions]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Listado Retiros de Dinero</h2>\r\n         <p className=\"heading-tertiary text-moved-right\">\r\n            Total: ${formatNumber(total)}\r\n         </p>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               setAdminValues((prev) => ({ ...prev, page: 0 }));\r\n               loadWithdrawals(filterData, true);\r\n               console.log(filterData);\r\n            }}\r\n         >\r\n            <DateFilter\r\n               endDate={endDate}\r\n               startDate={startDate}\r\n               onChange={onChange}\r\n            />\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"expencetype\"\r\n                  name=\"expencetype\"\r\n                  onChange={onChange}\r\n                  value={expencetype}\r\n               >\r\n                  <option value=\"\">Seleccione el tipo de retiro</option>\r\n                  {!loadingET &&\r\n                     expencetypes.map((expT, i) => (\r\n                        <React.Fragment key={i}>\r\n                           <option value={expT._id}>{expT.name}</option>\r\n                        </React.Fragment>\r\n                     ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"transactionType\"\r\n                  className={`form-label ${expencetype === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Tipo de Retiro\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n         <div className=\"wrapper my-2\">\r\n            <table>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Fecha</th>\r\n                     <th>Tipo</th>\r\n                     <th>Importe</th>\r\n                     <th>Descripción</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     transactions.map(\r\n                        (transaction, i) =>\r\n                           i >= page * 10 &&\r\n                           i < (page + 1) * 10 && (\r\n                              <tr key={transaction._id}>\r\n                                 <td>\r\n                                    {format(\r\n                                       new Date(transaction.date),\r\n                                       \"dd/MM/yy\"\r\n                                    )}\r\n                                 </td>\r\n                                 <td>{transaction.expencetype.name}</td>\r\n                                 <td>${formatNumber(transaction.value)}</td>\r\n                                 <td>{transaction.description}</td>\r\n                              </tr>\r\n                           )\r\n                     )}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <ListButtons\r\n               page={page}\r\n               type=\"transacciones\"\r\n               items={transactions}\r\n               changePage={(page) =>\r\n                  setAdminValues((prev) => ({ ...prev, page }))\r\n               }\r\n               pdfGenerator={() => transactionsPDF(transactions, total)}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   expences: state.expences,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadExpenceTypes,\r\n   loadWithdrawals,\r\n   transactionsPDF,\r\n})(WithdrawalList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ImFilePdf } from \"react-icons/im\";\r\nimport { BiFilterAlt } from \"react-icons/bi\";\r\n\r\nimport { loadRegisters, registerPDF } from \"../../../../../../actions/register\";\r\nimport { formatNumber } from \"../../../../../../actions/global\";\r\n\r\nconst RegisterByMonth = ({\r\n   registers: { registers, loading },\r\n   loadRegisters,\r\n   registerPDF,\r\n}) => {\r\n   const thisYear = new Date().getFullYear();\r\n   const yearArray = new Array(3).fill().map((item, index) => thisYear - index);\r\n\r\n   const [filterData, setFilterData] = useState({\r\n      year: thisYear,\r\n   });\r\n\r\n   const { year } = filterData;\r\n\r\n   useEffect(() => {\r\n      if (loading) loadRegisters({ year: thisYear }, true, true);\r\n   }, [loading, loadRegisters, thisYear]);\r\n\r\n   const onChange = (e) => {\r\n      e.persist();\r\n      setFilterData({\r\n         ...filterData,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <h2>Cajas por Mes</h2>\r\n\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               loadRegisters(filterData, true, true);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <select\r\n                  className=\"form-input\"\r\n                  id=\"year\"\r\n                  name=\"year\"\r\n                  onChange={onChange}\r\n                  value={year}\r\n               >\r\n                  <option value=\"\">* Seleccione el Año</option>\r\n                  {yearArray.map((item) => (\r\n                     <option key={item} value={item}>\r\n                        {item}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n               <label\r\n                  htmlFor=\"year\"\r\n                  className={`form-label ${year === \"\" ? \"lbl\" : \"\"}`}\r\n               >\r\n                  Año\r\n               </label>\r\n            </div>\r\n            <div className=\"btn-right mb-1\">\r\n               <button type=\"submit\" className=\"btn btn-light\">\r\n                  <BiFilterAlt />\r\n                  &nbsp;Buscar\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div className=\"wrapper\">\r\n            <table className=\"my-2\">\r\n               <thead>\r\n                  <tr>\r\n                     <th className=\"blank\"></th>\r\n                     <th>Ingresos</th>\r\n                     <th>Egresos</th>\r\n                     <th>Retiro</th>\r\n                     <th>Diferencia</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {!loading &&\r\n                     registers.map((register, i) => (\r\n                        <tr key={i}>\r\n                           <th>{register.month}</th>\r\n                           <td>\r\n                              {register.income !== 0 &&\r\n                                 \"$\" + formatNumber(register.income)}\r\n                           </td>\r\n                           <td>\r\n                              {register.expence !== 0 &&\r\n                                 \"$\" + formatNumber(register.expence)}\r\n                           </td>\r\n                           <td>\r\n                              {register.withdrawal !== 0 &&\r\n                                 \"$\" + formatNumber(register.withdrawal)}\r\n                           </td>\r\n                           <td\r\n                              className={register.difference < 0 ? \"debt\" : \"\"}\r\n                           >\r\n                              {register.difference !== 0\r\n                                 ? register.difference < 0\r\n                                    ? \"-$\" +\r\n                                      formatNumber(\r\n                                         Math.abs(register.difference)\r\n                                      )\r\n                                    : \"+$\" + formatNumber(register.difference)\r\n                                 : \"\"}\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         {!loading && (\r\n            <div className=\"btn-right\">\r\n               <div className=\"tooltip\">\r\n                  <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-secondary tooltip\"\r\n                     onClick={(e) => {\r\n                        e.preventDefault();\r\n                        registerPDF(registers);\r\n                     }}\r\n                  >\r\n                     <ImFilePdf />\r\n                  </button>\r\n                  <span className=\"tooltiptext\">PDF con cajas mensuales</span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   registers: state.registers,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n   loadRegisters,\r\n   registerPDF,\r\n})(RegisterByMonth);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Loading from \"../../modal/Loading\";\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Alert from \"../../pages/sharedComp/Alert\";\r\n\r\nconst PrivateRoutes = ({\r\n   component: Component,\r\n   auth: { userLogged, token },\r\n   types,\r\n   path,\r\n}) => {\r\n   if (userLogged) {\r\n      if (Component === Dashboard)\r\n         return <Route exact path={path} component={Dashboard} />;\r\n\r\n      if (\r\n         types.length === 0 ||\r\n         types.some((type) => type === userLogged.type)\r\n      ) {\r\n         return (\r\n            <>\r\n               <Loading />\r\n               <div className=\"inner-container\">\r\n                  <Alert type=\"2\" />\r\n                  <Route exact path={path} component={Component} />\r\n               </div>\r\n            </>\r\n         );\r\n      } else {\r\n         return <Redirect to=\"/index/dashboard/0\" />;\r\n      }\r\n   } else {\r\n      if (token === null) {\r\n         return <Redirect to=\"/login\" />;\r\n      } else {\r\n         return <Loading />;\r\n      }\r\n   }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoutes);\r\n","import React from \"react\";\r\nimport { BsExclamationTriangleFill } from \"react-icons/bs\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className=\"bg-white not-found\">\r\n         <h1 className=\"heading-primary\">\r\n            <BsExclamationTriangleFill />\r\n            &nbsp; Página Inexistente\r\n         </h1>\r\n         <p className=\"heading-secondary fancy-heading\">\r\n            Lo siento, esta página no existe.\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\n//Unregister Pages\r\nimport Login from \"../../pages/guest/Login\";\r\n\r\n//Register Pages\r\nimport Dashboard from \"../../pages/registered/Dashboard\";\r\nimport Credentials from \"../../pages/registered/admin/users/Credentials\";\r\nimport SingleClass from \"../../pages/registered/admin/classes/SingleClass\";\r\nimport Attendance from \"../../pages/registered/Attendance\";\r\nimport Grades from \"../../pages/registered/Grades\";\r\nimport Observations from \"../../pages/registered/Observations\";\r\n\r\n//Admin Pages\r\nimport RegisterUser from \"../../pages/registered/admin/users/RegisterUser\";\r\nimport Search from \"../../pages/registered/Search\";\r\nimport RegisterInfo from \"../../pages/registered/admin/RegisterInfo\";\r\nimport Categories from \"../../pages/registered/admin/Categories\";\r\nimport RegisterClass from \"../../pages/registered/admin/classes/RegisterClass\";\r\nimport Installments from \"../../pages/registered/admin/Installments\";\r\nimport EditInstallment from \"../../pages/registered/admin/edit/EditInstallment\";\r\nimport Classes from \"../../pages/registered/admin/classes/Classes\";\r\nimport InvoiceGeneration from \"../../pages/registered/admin/invoice/InvoiceGeneration\";\r\nimport Invoice from \"../../pages/registered/admin/invoice/Invoice\";\r\nimport Enrollment from \"../../pages/registered/admin/Enrollment\";\r\nimport EditNeigTowns from \"../../pages/registered/admin/edit/EditNeigTowns\";\r\nimport EditExpenceType from \"../../pages/registered/admin/edit/EditExpenceType\";\r\nimport EditGradeType from \"../../pages/registered/admin/edit/EditGradeType\";\r\nimport EnrollmentList from \"../../pages/registered/admin/lists/EnrollmentList\";\r\nimport IncomeList from \"../../pages/registered/admin/lists/IncomeList\";\r\nimport TransactionList from \"../../pages/registered/admin/lists/TransactionList\";\r\nimport InstallmentList from \"../../pages/registered/admin/lists/InstallmentList\";\r\nimport RegisterList from \"../../pages/registered/admin/lists/RegisterList\";\r\nimport MentionList from \"../../pages/registered/admin/lists/MentionList\";\r\nimport WithdrawalList from \"../../pages/registered/admin/lists/WithdrawalList\";\r\nimport RegisterByMonth from \"../../pages/registered/admin/lists/RegisterByMonth\";\r\n\r\nimport PrivateRoutes from \"../PrivateRoutes\";\r\nimport PublicRoutes from \"../PublicRoutes\";\r\nimport NotFound from \"../../layouts/NotFound\";\r\n\r\nconst Routes = ({ location, global: { navbar, footer } }) => {\r\n   return (\r\n      <section\r\n         style={{\r\n            minHeight: `calc(100vh - ${footer}px - ${navbar}px)`,\r\n            justifyContent: `${\r\n               location.pathname === \"/login\" ? \"center\" : \"stretch\"\r\n            }`,\r\n         }}\r\n         className=\"container\"\r\n      >\r\n         <Switch>\r\n            <PublicRoutes exact path=\"/login\" component={Login} />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/index/dashboard/:user_id\"\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/index/dashboard/:user_id/:class_id\"\r\n               types={[]}\r\n               component={Dashboard}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               path=\"/user/edit/:user_id\"\r\n               types={[]}\r\n               component={RegisterUser}\r\n            />\r\n\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/user/credentials/:user_id\"\r\n               component={Credentials}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/user/search\"\r\n               component={Search}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/info\"\r\n               component={RegisterInfo}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/categories\"\r\n               component={Categories}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[]}\r\n               path=\"/class/single/:class_id\"\r\n               component={SingleClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/register\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/edit/:class_id\"\r\n               component={RegisterClass}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installments/:user_id\"\r\n               component={Installments}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/:type/:item_id\"\r\n               component={EditInstallment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/all\"\r\n               component={Classes}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/register\"\r\n               component={InvoiceGeneration}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/invoice/single/:invoice_id\"\r\n               component={Invoice}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/attendances/:class_id\"\r\n               component={Attendance}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/grades/:class_id\"\r\n               component={Grades}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"teacher\", \"admin&teacher\"]}\r\n               path=\"/class/observations/:class_id\"\r\n               component={Observations}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/register\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/edit/:enrollment_id\"\r\n               component={Enrollment}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/user/towns-neighbourhoods/edit\"\r\n               component={EditNeigTowns}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/expencetypes/edit\"\r\n               component={EditExpenceType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/class/gradetypes/edit\"\r\n               component={EditGradeType}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/enrollment/list\"\r\n               component={EnrollmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/income/list\"\r\n               component={IncomeList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/transaction/list\"\r\n               component={TransactionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/installment/list\"\r\n               component={InstallmentList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/list\"\r\n               component={RegisterList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"admin&teacher\"]}\r\n               path=\"/register/monthly-list\"\r\n               component={RegisterByMonth}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/index/mentions-list\"\r\n               component={MentionList}\r\n            />\r\n            <PrivateRoutes\r\n               exact\r\n               types={[\"admin\", \"secretary\", \"admin&teacher\"]}\r\n               path=\"/register/withdrawal/list\"\r\n               component={WithdrawalList}\r\n            />\r\n            <Route component={NotFound} />\r\n         </Switch>\r\n      </section>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   global: state.global,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Routes));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport history from \"./utils/history\";\n\n//actions\nimport { loadUser } from \"./actions/auth\";\n\n//Unregister Pages\nimport About from \"./components/pages/guest/About\";\nimport Landing from \"./components/pages/guest/Landing\";\nimport Contact from \"./components/pages/guest/Contact\";\n\n//Layout Items\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\n\nimport PublicRoutes from \"./components/routing/PublicRoutes\";\nimport Routes from \"./components/routing/Routes\";\n\nimport \"./style/main.scss\";\n\nconst App = ({ loadUser, global: { navbar } }) => {\n   useEffect(() => {\n      if (localStorage.token) {\n         setAuthToken(localStorage.token);\n         loadUser();\n      }\n   }, [loadUser]);\n   return (\n      <Router history={history}>\n         <Navbar />\n         <div\n            style={{\n               paddingTop: `${navbar}px`,\n            }}\n         >\n            <Switch>\n               <PublicRoutes exact path=\"/\" component={Landing} />\n               <PublicRoutes exact path=\"/about\" component={About} />\n               <PublicRoutes exact path=\"/contact\" component={Contact} />\n               <Route component={Routes} />\n            </Switch>\n         </div>\n         <Footer />\n      </Router>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   global: state.global,\n});\n\nexport default connect(mapStateToProps, { loadUser })(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}